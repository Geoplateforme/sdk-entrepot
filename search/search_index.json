{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SDK Python","text":"<p>L'API Entrep\u00f4t G\u00e9oplateforme vous permet de t\u00e9l\u00e9verser, traiter puis publier vos donn\u00e9es g\u00e9ographiques. Bien que tr\u00e8s puissante, cette API n'est pas ais\u00e9e \u00e0 prendre en main. Ce module Python a \u00e9t\u00e9 cr\u00e9\u00e9 afin de vous permettre d'utiliser la G\u00e9oplateforme facilement.</p> <p>Vous pouvez l'utiliser directement en ligne de commande pour un usage simple ou l'int\u00e9grer dans vos scripts Python pour un usage avanc\u00e9 enti\u00e8rement personnalisable.</p> <p></p>"},{"location":"#installation","title":"Installation","text":"<p>Installez le module via pip :</p> <pre><code>pip install sdk_entrepot_gpf\n</code></pre> <p>Vous pouvez ensuite l'utiliser comme ex\u00e9cutable ou l'importer dans vos scripts Python.</p>"},{"location":"#tutoriels","title":"Tutoriels","text":"<p>Des tutoriels sont disponibles pour voir des cas concrets d'utilisation de A \u00e0 Z :</p> <ul> <li>Tutoriel 1 : h\u00e9berger une archive pour la rendre t\u00e9l\u00e9chargeable</li> <li>Tutoriel 2 : t\u00e9l\u00e9verser des donn\u00e9es vecteur et les publier en flux</li> <li>Tutoriel 3 : t\u00e9l\u00e9verser des donn\u00e9es raster et les publier en flux</li> </ul>"},{"location":"#developpement","title":"D\u00e9veloppement","text":"<p>Si vous souhaitez participer au d\u00e9veloppement du projet, consultez le document d\u00e9taillant comment proc\u00e9der.</p>"},{"location":"comme-executable/","title":"Utilisation comme ex\u00e9cutable","text":""},{"location":"comme-executable/#configuration","title":"Configuration","text":"<p>Pensez \u00e0 cr\u00e9er un fichier de configuration indiquant au minimum vos identifiants.</p>"},{"location":"comme-executable/#verification-de-la-configuration","title":"V\u00e9rification de la configuration","text":"<p>Un bon moyen de v\u00e9rifier que la configuration est correcte est de s'authentifier via l'ex\u00e9cutable (commande <code>auth</code>) :</p> <pre><code># Le fichier de configuration est directement trouv\u00e9 s'il est\n# nomm\u00e9 \"config.ini\" et qu'il est situ\u00e9 dans le dossier de travail\npython -m sdk_entrepot_gpf auth\n# Sinon indiquez son chemin\npython -m sdk_entrepot_gpf --ini /autre/chemin/config.ini auth\n</code></pre> <p>Cela devrait renvoyer :</p> <pre><code>Authentification r\u00e9ussie.\n</code></pre>"},{"location":"comme-executable/#mes-datastores","title":"Mes datastores","text":"<p>Dans la configuration, vous devez indiquer l'identifiant du datastore \u00e0 utiliser.</p> <p>Si vous ne le connaissez pas, il est possible de lister les communaut\u00e9s auxquelles vous participez et, pour chacune d'elles, le datastore qui lui est associ\u00e9.</p> <p>La commande <code>me</code> permet de lister les communaut\u00e9s auxquelles vous appartenez :</p> <pre><code>python -m sdk_entrepot_gpf me\n</code></pre> <p>Cela devrait renvoyer :</p> <pre><code>Vos informations :\n  * email : prenom.nom@me.io\n  * nom : Pr\u00e9nom Nom\n  * votre id : 11111111111111111111\n\nVous \u00eates membre de 1 communaut\u00e9(s) :\n\n  * communaut\u00e9 \u00ab Bac \u00e0 sable \u00bb :\n      - id de la communaut\u00e9 : 22222222222222222222\n      - id du datastore : 33333333333333333333\n      - nom technique : bac-a-sable\n      - droits : community, uploads, processings, datastore, stored_data, broadcast\n</code></pre> <p>Dans cet exemple, l'identifiant du datastore \u00e0 utiliser est <code>33333333333333333333</code>.</p> Attention <p>Cela ne fonctionnera que si les autres param\u00e8tres (nom d'utilisateur, mot de passe et urls) sont corrects.</p>"},{"location":"comme-executable/#afficher-toute-la-configuration","title":"Afficher toute la configuration","text":"<p>Vous pouvez afficher toute la configuration via une commande. Cela peut vous permettre d'avoir une liste exhaustive des param\u00e8tres disponibles et de v\u00e9rifier que votre fichier de configuration a bien le dernier mot sur les param\u00e8tres \u00e0 utiliser.</p> <p>Affichez la configuration (commande <code>config</code>) :</p> <pre><code># Toute la configuration\npython -m sdk_entrepot_gpf config\n# Une section\npython -m sdk_entrepot_gpf config -s store_authentification\n# Une option d'une section\npython -m sdk_entrepot_gpf config -s store_authentification -o password\n</code></pre>"},{"location":"comme-executable/#recuperer-des-jeux-de-donnees-dexemple","title":"R\u00e9cup\u00e9rer des jeux de donn\u00e9es d'exemple","text":"<p>Il est possible de r\u00e9cup\u00e9rer des jeux de donn\u00e9es d'exemple via l'ex\u00e9cutable avec la commande <code>dataset</code>.</p> <p>Lancez la commande <code>dataset</code> sans param\u00e8tre pour lister les jeux disponibles :</p> <pre><code>python -m sdk_entrepot_gpf dataset\n</code></pre> <p>Lancez la commande <code>dataset</code> en pr\u00e9cisant le nom (<code>-n</code>) du jeu de donn\u00e9es \u00e0 extraire pour r\u00e9cup\u00e9rer un jeu de donn\u00e9es :</p> <pre><code>python -m sdk_entrepot_gpf dataset -n 1_dataset_vector\n</code></pre> <p>Les donn\u00e9es seront extraites dans le dossier courant, vous pouvez pr\u00e9ciser la destination avec le param\u00e8tre <code>--folder</code> (ou <code>-f</code>).</p>"},{"location":"comme-executable/#envoyer-des-donnees","title":"Envoyer des donn\u00e9es","text":"<p>Pour envoyer des donn\u00e9es, vous devez g\u00e9n\u00e9rer un fichier descripteur de livraison.</p> <p>C'est un fichier au format JSON permettant de d\u00e9crire les donn\u00e9es \u00e0 livrer et les livraisons \u00e0 cr\u00e9er.</p> <p>Ensuite, vous pouvez simplement livrer des donn\u00e9es avec la commande <code>upload</code> :</p> <pre><code>python -m sdk_entrepot_gpf upload -f mon_fichier_descripteur.json\n</code></pre> <p>Les jeux de donn\u00e9es d'exemple sont fournis avec le fichier descripteur (voir R\u00e9cup\u00e9rer des jeux de donn\u00e9es d'exemple).</p>"},{"location":"comme-executable/#realiser-des-traitements-et-publier-des-donnees","title":"R\u00e9aliser des traitements et publier des donn\u00e9es","text":"<p>Pour r\u00e9aliser des traitements et publier des donn\u00e9es g\u00e9ographiques, vous devez g\u00e9n\u00e9rer un fichier workflow.</p> <p>C'est un fichier au format JSON permettant de d\u00e9crire, en une suite d'\u00e9tapes, les traitements et les publications \u00e0 effectuer.</p> <p>Vous pouvez valider votre workflow :</p> <pre><code>python -m sdk_entrepot_gpf workflow -f mon_workflow.json\n</code></pre> <p>Ensuite, vous pouvez simplement lancer une \u00e9tape :</p> <pre><code>python -m sdk_entrepot_gpf workflow -f mon_workflow.json -s mon_\u00e9tape\n</code></pre>"},{"location":"comme-executable/#tutoriels","title":"Tutoriels","text":"<p>Vous pouvez maintenant livrer et publier vos donn\u00e9es en utilisant le module comme un ex\u00e9cutable. Voici quelques exemples :</p> <ul> <li>Tutoriel 1 : h\u00e9berger une archive pour la rendre t\u00e9l\u00e9chargeable</li> <li>Tutoriel 2 : t\u00e9l\u00e9verser des donn\u00e9es vecteur les publier en flux</li> <li>Tutoriel 3 : t\u00e9l\u00e9verser des donn\u00e9es raster les publier en flux</li> </ul>"},{"location":"comme-module/","title":"Utilisation comme module Python","text":""},{"location":"comme-module/#configuration","title":"Configuration","text":"<p>Afin d'utiliser cette librairie comme module, vous devrez \u00e9crire un fichier de configuration comme pour les autres utilisations.</p> <p>Ce fichier devra \u00eatre charg\u00e9 au d\u00e9but de votre script gr\u00e2ce \u00e0 la classe <code>Config</code> :</p> <pre><code># Importation de la classe Config\nfrom sdk_entrepot_gpf.io.Config import Config\n\n# Chargement de mon fichier de config\nConfig().read(\"config.ini\")\n</code></pre>"},{"location":"comme-module/#livraison-de-donnees","title":"Livraison de donn\u00e9es","text":""},{"location":"comme-module/#avec-la-classe-uploadaction","title":"Avec la classe <code>UploadAction</code>","text":"<p>Pour livrer des donn\u00e9es, vous pouvez utiliser les fichiers de descripteur de livraison et appeler la classe <code>UploadAction</code>. Cela sera plus simple d'un point de vue Python mais moins modulaire.</p> <p>Voici un exemple de code Python permettant de le faire (\u00e0 lancer apr\u00e8s le chargement de la config !) :</p> <pre><code># Importation des classes UploadDescriptorFileReader et UploadAction\nfrom sdk_entrepot_gpf.io.UploadDescriptorFileReader import UploadDescriptorFileReader\nfrom sdk_entrepot_gpf.workflow.action.UploadAction import UploadAction\n\n# Instanciation d'une UploadDescriptorFileReader\ndescriptor_file_reader = UploadDescriptorFileReader(p_descriptor)\n\n# Instanciation d'une UploadAction \u00e0 partir du Reader\no_upload_action = UploadAction(o_dataset, behavior=s_behavior)\n# On cr\u00e9e la livraison\no_upload = o_upload_action.run()\n# On ferme la livraison et on monitore les ex\u00e9cutions de v\u00e9rification\nb_status = UploadAction.monitor_until_end(o_upload, Livraison.callback_check)\n</code></pre> Utiliser un datastore sp\u00e9cifique <p>Vous pouvez pr\u00e9ciser l'id d'un autre datastore s'il ne faut pas utiliser celui indiqu\u00e9 en configuration :</p> <pre><code># On cr\u00e9e la livraison en pr\u00e9cisant un datastore sp\u00e9cifique\no_upload = o_upload_action.run(datastore='id-datastore-sp\u00e9cifique')\n</code></pre>"},{"location":"comme-module/#sans-la-classe-uploadaction","title":"Sans la classe <code>UploadAction</code>","text":"<p>Si vous souhaitez livrer les donn\u00e9es de mani\u00e8re plus flexible, vous pouvez \u00e9galement utiliser directement la classe <code>Upload</code> pour cr\u00e9er, compl\u00e9ter et fermer votre livraison.</p> <p>Voici un exemple de code Python permettant de le faire (\u00e0 lancer apr\u00e8s le chargement de la config !) :</p> <pre><code>from pathlib import Path\n# Importation de la classe Upload\nfrom sdk_entrepot_gpf.store.Upload import Upload\n\n# Attributs pour cr\u00e9er ma livraison (cf. la documentation)\n# https://data.geopf.fr/api/swagger-ui/index.html#/Livraisons%20et%20v\u00e9rifications/create\ninfo = {\n  \"name\": \"Nom de la livraison \u00e0 cr\u00e9er\",\n  \"description\": \"Description de la livraison \u00e0 cr\u00e9er\",\n  \"type\": \"VECTOR\",\n  \"srs\": \"EPSG:2154\",\n}\n\n# Cr\u00e9ation d'une livraison\nupload = Upload.api_create(info)\n\n# Ajout des informations compl\u00e9mentaires (commentaires et \u00e9tiquettes)\nupload.api_add_comment({\"text\": \"mon commentaire\"})\nupload.api_add_tags({\"tag1\": \"valeur1\", \"tag2\": \"valeur2\"})\n\n# T\u00e9l\u00e9versement des fichiers\n# Listes des fichiers : chemin local -&gt; chemin distant\nfiles = {Path('mon_fichier.zip') : 'chemin/api/'}\n# Pour chaque fichier\nfor local_path, api_path in files.items():\n    # On le t\u00e9l\u00e9verse en utilisant la m\u00e9thode api_push_data_file\n    upload.api_push_data_file(local_path, api_path)\n\n# T\u00e9l\u00e9versement des fichiers md5\nupload.api_push_md5_file(Path('checksum.md5'))\n\n# Fermeture de la livraison\nupload.api_close()\n</code></pre> Utiliser un datastore sp\u00e9cifique <p>Vous pouvez pr\u00e9ciser l'id d'un autre datastore s'il ne faut pas utiliser celui indiqu\u00e9 en configuration :</p> <pre><code># Cr\u00e9ation d'une livraison en pr\u00e9cisant un datastore sp\u00e9cifique\nupload = Upload.api_create(info, datastore='id-datastore-sp\u00e9cifique')\n</code></pre>"},{"location":"comme-module/#traitement-et-publications-des-donnees","title":"Traitement et publications des donn\u00e9es","text":"<p>D'un point de vue API Entrep\u00f4t, pour traiter et publier des donn\u00e9es, vous allez cr\u00e9er :</p> <ul> <li>des ex\u00e9cutions de traitement (<code>processing execution</code>) ;</li> <li>des configurations (<code>configuration</code>) ;</li> <li>des offres (<code>offering</code>).</li> </ul> <p>Avec ce SDK, vous pouvez le faire en manipulant des workflows ou directement en manipulant les classes ProcessingExecution, Configuration et Offering.</p> <p>La premi\u00e8re m\u00e9thode est plus simple (et g\u00e9n\u00e9reusement configurable !), la seconde m\u00e9thode sera plus complexe mais tr\u00e8s flexible.</p>"},{"location":"comme-module/#en-utilisant-des-workflows","title":"En utilisant des workflows","text":"<p>On part ici du principe que vous avez d\u00e9j\u00e0 \u00e9crit votre workflow.</p> <pre><code># Importation de la classe JsonHelper\nfrom sdk_entrepot_gpf.helper.JsonHelper import JsonHelper\n# Importation des classes Workflow, GlobalResolver et StoreEntityResolver\nfrom sdk_entrepot_gpf.workflow.Workflow import Workflow\nfrom sdk_entrepot_gpf.workflow.resolver.GlobalResolver import GlobalResolver\nfrom sdk_entrepot_gpf.workflow.resolver.StoreEntityResolver import StoreEntityResolver\n</code></pre> <p>La premi\u00e8re \u00e9tape consiste \u00e0 charger le fichier de workflow et \u00e0 instancier la classe associ\u00e9e. Vous pouvez utiliser notre classe de lecture JSON qui g\u00e8re les fichier <code>.jsonc</code> (c'est \u00e0 dire avec des commentaires).</p> <pre><code>p_workflow = Path(\"mon_workflow.jsonc\").absolute()\no_workflow = Workflow(p_workflow.stem, JsonHelper.load(p_workflow))\n</code></pre> <p>R\u00e9daction en cours...</p>"},{"location":"configuration/","title":"Configuration","text":"<p>Ce module Python vient avec une configuration par d\u00e9faut vous permettant de d\u00e9finir un minimum de param\u00e8tres. Vous pouvez cependant \u00e9craser chaque param\u00e8tre par d\u00e9faut en red\u00e9finissant sa valeur dans un nouveau fichier de configuration.</p> <p>Certains param\u00e8tres (comme vos identifiants d'API) doivent \u00eatre red\u00e9finis.</p> <p>La configuration est compos\u00e9e de sections elles-m\u00eame compos\u00e9es d'options.</p> <p>Voici un exemple reprenant la structure d'un fichier de configuration :</p> <pre><code>[section_1]\noption_1=valeur_1_1\noption_2=valeur_1_2\n\n[section_2]\noption_1=valeur_2_1\noption_2=valeur_2_2\noption_3=valeur_2_3\n</code></pre> <p>Nous pouvons faire r\u00e9f\u00e9rence \u00e0 la <code>valeur_1_1</code> par l'intitul\u00e9 <code>section_1.option_1</code>.</p>"},{"location":"configuration/#votre-fichier-de-configuration","title":"Votre fichier de configuration","text":"<p>Cr\u00e9ez un fichier <code>config.ini</code> \u00e0 la racine du projet.</p> <p>Il faudra \u00e0 minima renseigner vos identifiants API (section <code>store_authentification</code>) et \u00e9ventuellement l'entrep\u00f4t principal (datastore) sur lequel vous allez travailler (section <code>store_api</code>).</p> <p>Voici un exemple de ce que cela peut donner :</p> <pre><code>[store_authentification]\n# Information pourra acc\u00e9der au d'authentification. Normalement d\u00e9j\u00e0 d\u00e9fini dans sdk_entrepot_gpf/_conf/default.ini\nclient_id=gpf-warehouse\nclient_secret=BK2G7Vvkn7UDc8cV7edbCnHdYminWVw2\n# Votre login\nlogin=LOGIN\n# Votre mot de passe\npassword=PASSWORD\n\n[store_api]\n# L'identifiant de votre entrep\u00f4t\ndatastore=DATASTORE_ID_TO_MODIFY\n</code></pre> <p>Explications sur les param\u00e8tres :</p> <ul> <li><code>store_authentification</code> : param\u00e8tres concernant l'authentification sur la G\u00e9oplateforme :</li> <li><code>client_id</code> et <code>client_secret</code> : informations pour r\u00e9cup\u00e9rer le token d'authentification, valeurs r\u00e9cup\u00e9r\u00e9es depuis le Swagger de l'API de la G\u00e9oplateforme au moment de l'authentification. Ces valeurs sont normalement g\u00e9r\u00e9es dans la configuration par d\u00e9faut <code>sdk_entrepot_gpf/_conf/default.ini</code>.</li> <li><code>login</code> : votre nom d'utilisateur ;</li> <li><code>password</code> : votre mot de passe ;</li> <li><code>store_api</code> : param\u00e8tres concernant votre Entrep\u00f4t sur la G\u00e9oplateforme :</li> <li><code>datastore</code> : l'identifiant du datastore principal de travail (optionnel, voir ci-dessous).</li> </ul> <p>Dans la configuration, vous pouvez indiquer l'identifiant du datastore \u00e0 utiliser. Celui-ci est li\u00e9 \u00e0 la communaut\u00e9 \u00e0 laquelle vous appartenez.</p> <p>Si vous ne le faites pas, vous devrez le pr\u00e9ciser \u00e0 l'appel des fonctions ou des commandes qui interagissent avec un datastore.</p> <p>Si vous ne savez pas quoi mettre, il est possible de lister les communaut\u00e9s auxquelles vous participez et, pour chacune d'elles, le datastore qui lui est associ\u00e9. Cela vous permet de r\u00e9cup\u00e9rer cet identifiant.</p> <p>La commande pour lister les communaut\u00e9s auxquelles vous appartenez est la suivante :</p> <pre><code>python -m sdk_entrepot_gpf me\n</code></pre> <p>Cela devrait renvoyer :</p> <pre><code>Vos informations :\n  * email : prenom.nom@me.io\n  * nom : Pr\u00e9nom Nom\n  * votre id : 11111111111111111111\n\nVous \u00eates membre de 1 communaut\u00e9(s) :\n\n  * communaut\u00e9 \u00ab Bac \u00e0 sable \u00bb :\n      - id de la communaut\u00e9 : 22222222222222222222\n      - id du datastore : 33333333333333333333\n      - nom technique : bac-a-sable\n      - droits : community, uploads, processings, datastore, stored_data, broadcast\n</code></pre> <p>Dans cet exemple, l'identifiant du datastore \u00e0 utiliser est <code>33333333333333333333</code>.</p> Attention <p>Cela ne fonctionnera que si les autres param\u00e8tres (nom d'utilisateur, mot de passe et urls) sont corrects.</p>"},{"location":"configuration/#utilisations","title":"Utilisations","text":""},{"location":"configuration/#utilisation-via-lexecutable","title":"Utilisation via l'ex\u00e9cutable","text":"<p>Ce module Python est utilisable comme ex\u00e9cutable. Dans ce cas vous avez deux mani\u00e8res d'indiquer au programme votre fichier de configuration :</p> <ul> <li>vous pouvez nommez le fichier <code>config.ini</code> et le mettre dans le r\u00e9pertoire courant ;</li> <li>vous pouvez indiquer au programme le chemin vers votre fichier via le param\u00e8tre <code>--ini</code> :</li> </ul> <pre><code>python -m sdk_entrepot_gpf --ini chemin/vers/config.ini\n</code></pre>"},{"location":"configuration/#utilisation-via-un-script","title":"Utilisation via un script","text":"<p>Si vous utilisez ce module Python dans un script, il faudra ouvrir le fichier de configuration via la classe <code>Config</code>(<code>sdk_entrepot_gpf.io.Config.Config</code>) au d\u00e9but de celui-ci :</p> <pre><code># Importez la classe Config\nfrom sdk_entrepot_gpf.io.Config import Config\n\n# Ajoutez votre fichier de configuration (adaptez le chemin)\nConfig().read(\"config.ini\")\n\n# Suite de votre script...\n</code></pre>"},{"location":"configuration/#cas-dutilisation-particuliers","title":"Cas d'utilisation particuliers","text":""},{"location":"configuration/#utiliser-un-environnement-particulier-qualification","title":"Utiliser un environnement particulier (qualification)","text":"<p>La configuration par d\u00e9faut utilise l'environnement de production. Pour utiliser un autre environnement, il faudra configurer des valeurs sp\u00e9cifiques pour l'URL de r\u00e9cup\u00e9ration du token et l'URL d'entr\u00e9e de l'API.</p> <p>Pour cela, il faut ajouter deux lignes dans le fichier de configuration. Voici un exemple avec l'environnement de qualification actuel :</p> <pre><code>[store_authentification]\n# L'url de r\u00e9cup\u00e9ration du token d'authentification (cf. doc)\ntoken_url=https://sso-qua.priv.geopf.fr/realms/geoplateforme/protocol/openid-connect/token\n# Autres param\u00e8tres \u00e0 conserver (client_id, ...)\n\n[store_api]\n# L'url d'entr\u00e9e de l'API (cf. doc)\nroot_url=https://data-qua.priv.geopf.fr/api\n# Autres param\u00e8tres \u00e0 conserver (datastore, ...)\n</code></pre> <p>Explications sur les param\u00e8tres :</p> <ul> <li><code>store_authentification</code> : param\u00e8tres concernant l'authentification sur la G\u00e9oplateforme :</li> <li><code>token_url</code> : URL pour r\u00e9cup\u00e9rer le jeton d'authentification (consulter la doc de l'API si n\u00e9cessaire) ;</li> <li><code>store_api</code> : param\u00e8tres concernant votre Entrep\u00f4t sur la G\u00e9oplateforme :</li> <li><code>root_url</code> : URL racine de l'API (consulter la doc de l'API si n\u00e9cessaire).</li> </ul>"},{"location":"configuration/#utiliser-un-compte-de-service","title":"Utiliser un compte de service","text":"<p>Vous pouvez utiliser un compte de service en modifiant les param\u00e8tres de la section <code>store_authentification</code>. Voici un exemple :</p> <pre><code>[store_authentification]\n# On modifie le type d'authentification\ngrant_type=client_credentials\n# On indique le nom du compte de service\nclient_id=ID_TO_MODIFY\n# On indique le secret du compte de service\nclient_secret=SECRET_TO_MODIFY\n</code></pre> <p>Explications sur les param\u00e8tres :</p> <ul> <li><code>store_authentification</code> : param\u00e8tres concernant l'authentification sur la G\u00e9oplateforme :</li> <li><code>grant_type</code> : type de l'authentification (<code>password</code> si on a un couple login/password ou <code>client_credentials</code> si on a un couple <code>client_id</code>/<code>client_secret</code>) ;</li> <li><code>client_id</code> : votre groupe d\u2019appartenance ;</li> <li><code>client_secret</code> : le secret associ\u00e9 au compte.</li> </ul>"},{"location":"configuration/#utilisation-derriere-un-proxy","title":"Utilisation derri\u00e8re un proxy","text":"<p>Vous pouvez indiquer les param\u00e8tres proxy dans les sections <code>store_authentification</code> et <code>store_api</code>. Voici un exemple :</p> <pre><code>[store_authentification]\nhttp_proxy=http://proxy.ign.fr:3128\nhttps_proxy=http://proxy.ign.fr:3128\n# Autres param\u00e8tres \u00e0 conserver (client_id, ...)\n\n[store_api]\nhttp_proxy=http://proxy.ign.fr:3128\nhttps_proxy=http://proxy.ign.fr:3128\n# Autres param\u00e8tres \u00e0 conserver (datastore, ...)\n</code></pre>"},{"location":"configuration_details/","title":"La configuration en d\u00e9tails","text":"<p>Comme indiqu\u00e9 dans la page pr\u00e9c\u00e9dente, la majorit\u00e9 de la configuration est d\u00e9j\u00e0 d\u00e9finie et n'a pas besoin d'\u00eatre modifi\u00e9e \u00e0 priori.</p> <p>Cette page pr\u00e9sente de mani\u00e8re exhaustive toutes les propri\u00e9t\u00e9s de configuration existante par section, cela est utile si jamais vous souhaitez avoir une utilisation avanc\u00e9e de ce module ou que les sp\u00e9cifications de l'API changent.</p> <p>Le fichier de configuration par d\u00e9faut utilis\u00e9 est accessible ici : sdk_entrepot_gpf/_conf/default.ini</p>"},{"location":"configuration_details/#section-logging","title":"Section <code>logging</code>","text":"<p>La premi\u00e8re section concerne le logging de l'application.</p> Param\u00e8tre Type D\u00e9faut Description <code>log_level</code> str INFO Niveau de log minimal pour afficher/sauvegarder les messages."},{"location":"configuration_details/#section-store_authentification","title":"Section <code>store_authentification</code>","text":"<p>La deuxi\u00e8me section concerne l'authentification.</p> <p>Cette partie de la configuration permet au module de vous authentifier et de r\u00e9cup\u00e9rer un jeton pour utiliser l'API.</p> Param\u00e8tre Type D\u00e9faut Description <code>token_url</code> str https://sso.geopf.fr/realms/geoplateforme/protocol/openid-connect/token URL du service d'authentification de la G\u00e9oplateforme. Elle n'est \u00e0 priori pas \u00e0 changer, sauf si vous utilisez un environnement particulier (test, qualification, ...). <code>http_proxy</code> str <code>null</code> Indiquez ici le proxy HTTP \u00e0 utiliser si besoin. <code>https_proxy</code> str <code>null</code> Indiquez ici le proxy HTTPS \u00e0 utiliser si besoin. <code>grant_type</code> str <code>password</code> Indiquez ici le type d'authentification \u00e0 utiliser (<code>password</code> ou <code>client_credentials</code>). <code>client_id</code> str <code>null</code> Indiquez ici le groupe d\u2019appartenance du compte \u00e0 utiliser (type <code>password</code> ET type <code>client_credentials</code>). <code>login</code> str <code>null</code> Indiquez ici le nom d\u2019utilisateur du compte \u00e0 utiliser (type <code>password</code> seulement). <code>password</code> str <code>null</code> Indiquez ici le mot de passe du compte \u00e0 utiliser (type <code>password</code> seulement). <code>password</code> str <code>null</code> Indiquez ici le mot de passe du compte \u00e0 utiliser (type <code>password</code> seulement). <code>totp_key</code> str <code>null</code> Indiquez ici la clef TOTP \u00e0 utiliser pour g\u00e9n\u00e9rer le code temporaire (type <code>password</code> avec double authentification seulement). <code>nb_attempts</code> int 5 Nombre de tentatives de r\u00e9cup\u00e9ration du jeton \u00e0 effectuer en cas d'erreur avant de lever une erreur. <code>sec_between_attempt</code> int 1 D\u00e9lai \u00e0 attendre entre deux tentatives de r\u00e9cup\u00e9ration du jeton."},{"location":"configuration_details/#section-store_api","title":"Section <code>store_api</code>","text":"<p>La troisi\u00e8me section concerne la connexion \u00e0 l'entrep\u00f4t.</p> Param\u00e8tre Type D\u00e9faut Description <code>root_url</code> str https://data.geopf.fr/api URL racine de l'API G\u00e9oplateforme. Elle n'est \u00e0 priori pas \u00e0 changer, sauf si vous utilisez un environnement particulier (test, qualification, ...). <code>http_proxy</code> str <code>null</code> Indiquez ici le proxy HTTP \u00e0 utiliser si besoin. <code>https_proxy</code> str <code>null</code> Indiquez ici le proxy HTTPS \u00e0 utiliser si besoin. <code>datastore</code> str <code>null</code> Indiquez ici l'identifiant de l'entrep\u00f4t (<code>datastore</code>) \u00e0 utiliser. <code>root_datastore</code> str <code>${store_api:root_url}/datastores/${store_api:datastore}</code> Chemin racine des routes permettant de faire des action sur cet entrep\u00f4t (<code>datastore</code>). <code>client_id</code> str <code>null</code> Indiquez ici le groupe d\u2019appartenance du compte \u00e0 utiliser. <code>nb_attempts</code> int 5 Nombre de requ\u00eates \u00e0 tenter en cas d'erreur avant de lever une erreur. <code>sec_between_attempt</code> int 1 D\u00e9lai \u00e0 attendre entre deux requ\u00eates. <code>nb_limit</code> int 10 Nombre d'\u00e9l\u00e9ments \u00e0 r\u00e9cup\u00e9rer lors des requ\u00eates de listing d'entit\u00e9s. <code>regex_content_range</code> int <code>(?P&lt;i_min&gt;[0-9]+)-(?P&lt;i_max&gt;[0-9]+)/(?P&lt;len&gt;[0-9]+)</code> Regex pour parser la m\u00e9ta-donn\u00e9e content-range des r\u00e9ponses API. <code>regex_entity_id</code> int <code>(?P&lt;id&gt;[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12})</code> Regex des ids des entit\u00e9s API."},{"location":"configuration_details/#section-routing","title":"Section <code>routing</code>","text":"<p>Cette section concerne la d\u00e9finition des routes.</p> <p>Chaque route permet de faire une action via l'API. Tous ces param\u00e8tres n'ont \u00e0 priori pas \u00e0 \u00eatre modifi\u00e9s, sauf changement des sp\u00e9cifications de l'API.</p> Param\u00e8tre Type D\u00e9faut Description Routes concernant l'entit\u00e9 User \u2060 \u2060 \u2060 <code>user_get</code> str <code>${store_api:root_url}/users/me</code> Route pour r\u00e9cup\u00e9rer les informations de l'utilisateur authentifi\u00e9. Routes concernant l'entit\u00e9 Datastore \u2060 \u2060 \u2060 <code>datastore_get</code> str <code>${store_api:root_datastore}</code> Route pour r\u00e9cup\u00e9rer les information d'un entrep\u00f4t (<code>datastore</code>). Routes concernant l'entit\u00e9 Upload \u2060 \u2060 \u2060 <code>upload_list</code> str <code>${store_api:root_datastore}/uploads</code> Route pour lister les livraisons (<code>uploads</code>) associ\u00e9es \u00e0 un entrep\u00f4t. <code>upload_create</code> str <code>${routing:upload_list}</code> Route pour cr\u00e9er une nouvelle livraison associ\u00e9 \u00e0 un entrep\u00f4t. <code>upload_get</code> str <code>${routing:upload_list}/{upload}</code> Route pour r\u00e9cup\u00e9rer le d\u00e9tail d'une livraison. <code>upload_delete</code> str <code>${routing:upload_list}/{upload}</code> Route pour supprimer une livraison. <code>upload_add_tags</code> str <code>${upload_get}/tags</code> Route pour ajouter/modifier les \u00e9tiquette(s) d'une livraison. <code>upload_delete_tags</code> str <code>${upload_get}/tags</code> Route pour supprimer un (des) \u00e9tiquette(s) d'une livraison. <code>upload_push_data</code> str <code>${upload_get}/data</code> Route pour t\u00e9l\u00e9verser des fichiers de donn\u00e9es associ\u00e9s \u00e0 une livraison. <code>upload_delete_data</code> str <code>${upload_push_data}</code> Route pour supprimer des fichiers de donn\u00e9es associ\u00e9s \u00e0 une livraison. <code>upload_push_md5</code> str <code>${upload_get}/md5</code> Route pour t\u00e9l\u00e9verser des fichiers de clefs md5 associ\u00e9s \u00e0 une livraison. <code>upload_delete_md5</code> str <code>${upload_push_md5}</code> Route pour supprimer des fichiers de clefs md5 associ\u00e9s \u00e0 une livraison. <code>upload_close</code> str <code>${upload_get}/close</code> Route pour fermer une livraison. <code>upload_open</code> str <code>${upload_get}/open</code> Route pour ouvrir une livraison. <code>upload_tree</code> str <code>${upload_get}/tree</code> Route pour r\u00e9cup\u00e9rer l'arborescence des fichiers associ\u00e9s \u00e0 une livraison. <code>upload_list_checks</code> str <code>${upload_get}/checks</code> Route pour lister les v\u00e9rifications (checks) li\u00e9es \u00e0 une livraison. <code>upload_run_checks</code> str <code>${upload_get}/checks</code> Route pour ajouter une v\u00e9rification \u00e0 une livraison. <code>upload_list_comment</code> str <code>${upload_get}/comments</code> Route pour lister les commentaires associ\u00e9s \u00e0 une livraison. <code>upload_add_comment</code> str <code>${upload_list_comment}</code> Route pour ajouter un commentaire \u00e0 une livraison. <code>upload_edit_comment</code> str <code>${upload_list_comment}/{comment}</code> Route pour modifier un commentaire associ\u00e9 \u00e0 une livraison. <code>upload_remove_comment</code> str <code>${upload_list_comment}/{comment}</code> Route pour supprimer un commentaire associ\u00e9 \u00e0 une livraison. <code>upload_list_sharings</code> str <code>${upload_get}/sharings</code> Route pour lister les partages (sharings) de cette livraison avec d'autres entrep\u00f4ts. <code>upload_add_sharing</code> str <code>${upload_list_sharings}</code> Route pour partager cette livraison avec d'autres entrep\u00f4ts. <code>upload_remove_sharing</code> str <code>${upload_list_sharings}</code> Route pour supprimer des partages de cette livraison avec d'autres entrep\u00f4ts. <code>upload_list_events</code> str <code>${upload_get}/events</code> Route pour lister les \u00e9v\u00e9nements (event) ayant eu lieu en rapport avec cette livraison. Routes concernant l'entit\u00e9 StoredData \u2060 \u2060 \u2060 <code>stored_data_list</code> str <code>${store_api:root_datastore}/stored_data</code> todo <code>stored_data_get</code> str <code>${stored_data_list}/{stored_data}</code> todo <code>stored_data_delete</code> str <code>${stored_data_list}/{stored_data}</code> todo <code>stored_data_add_tags</code> str <code>${stored_data_get}/tags</code> todo <code>stored_data_delete_tags</code> str <code>${stored_data_get}/tags</code> todo <code>stored_data_list_comment</code> str <code>${stored_data_get}/comments</code> todo <code>stored_data_add_comment</code> str <code>${stored_data_list_comment}</code> todo <code>stored_data_edit_comment</code> str <code>${stored_data_list_comment}/{comment}</code> todo <code>stored_data_remove_comment</code> str <code>${stored_data_list_comment}/{comment}</code> todo <code>stored_data_list_sharings</code> str <code>${stored_data_get}/sharings</code> todo <code>stored_data_add_sharing</code> str <code>${stored_data_list_sharings}</code> todo <code>stored_data_remove_sharing</code> str <code>${stored_data_list_sharings}</code> todo <code>stored_data_list_events</code> str <code>${stored_data_get}/events</code> todo Routes concernant l'entit\u00e9 Processing \u2060 \u2060 \u2060 <code>processing_list</code> str <code>${store_api:root_datastore}/processings</code> todo <code>processing_get</code> str <code>${processing_list}/{processing}</code> todo Routes concernant l'entit\u00e9 ProcessingExecution \u2060 \u2060 \u2060 <code>processing_execution_list</code> str <code>${processing_list}/executions</code> todo <code>processing_execution_create</code> str <code>${processing_execution_list}</code> todo <code>processing_execution_get</code> str <code>${processing_execution_list}/{processing_execution}</code> todo <code>processing_execution_delete</code> str <code>${processing_execution_get}</code> todo <code>processing_execution_launch</code> str <code>${processing_execution_get}/launch</code> todo <code>processing_execution_abort</code> str <code>${processing_execution_get}/abort</code> todo <code>processing_execution_logs</code> str <code>${processing_execution_get}/logs</code> todo Routes concernant l'entit\u00e9 Configuration \u2060 \u2060 \u2060 <code>configuration_list</code> str <code>${store_api:root_datastore}/configurations</code> todo <code>configuration_get</code> str <code>${configuration_list}/{configuration}</code> todo <code>configuration_create</code> str <code>${configuration_list}</code> todo <code>configuration_delete</code> str <code>${configuration_get}</code> todo <code>configuration_full_edit</code> str <code>${configuration_get}</code> todo <code>configuration_add_tags</code> str <code>${configuration_get}/tags</code> todo <code>configuration_delete_tags</code> str <code>${configuration_get}/tags</code> todo <code>configuration_list_comment</code> str <code>${configuration_get}/comments</code> todo <code>configuration_add_comment</code> str <code>${configuration_list_comment}</code> todo <code>configuration_edit_comment</code> str <code>${configuration_list_comment}/{comment}</code> todo <code>configuration_remove_comment</code> str <code>${configuration_list_comment}/{comment}</code> todo <code>configuration_list_offerings</code> str <code>${configuration_get}/offerings</code> todo Routes concernant l'entit\u00e9 Offering \u2060 \u2060 \u2060 <code>offering_list</code> str <code>${store_api:root_datastore}/offerings</code> todo <code>offering_get</code> str <code>${offering_list}/{offering}</code> todo <code>offering_create</code> str <code>${configuration_list_offerings}</code> todo <code>offering_delete</code> str <code>${offering_get}</code> todo <code>offering_partial_edit</code> str <code>${offering_get}</code> todo Routes concernant l'entit\u00e9 Check \u2060 \u2060 \u2060 <code>check_list</code> str <code>${store_api:root_datastore}/checks</code> todo <code>check_get</code> str <code>${routing:check_list}/{check}</code> todo Routes concernant l'entit\u00e9 CheckExecution \u2060 \u2060 \u2060 <code>check_execution_list</code> str <code>${routing:check_list}/executions</code> todo <code>check_execution_get</code> str <code>${routing:check_execution_list}/{check_execution}</code> todo <code>check_execution_delete</code> str <code>${routing:check_execution_list}/{check_execution}</code> todo <code>check_execution_logs</code> str <code>${routing:check_execution_get}/logs</code> todo Routes concernant l'entit\u00e9 Static \u2060 \u2060 \u2060 <code>static_list</code> str <code>${store_api:root_datastore}/statics</code> Liste des fichiers statiques <code>static_get</code> str <code>${routing:static_list}/{static}</code> D\u00e9taille d'un fichier static <code>static_upload</code> str <code>${routing:static_list}/{static}</code> T\u00e9l\u00e9versement d'un fichier static <code>static_delete</code> str <code>${routing:static_list}/{static}</code> Suppression d'une fichier static <code>static_re_upload</code> str <code>${routing:static_list}/{static}</code> Remplacement du fichier l'fichier static <code>static_partial_edit</code> str <code>${routing:static_list}/{static}</code> \u00c9dition d'es informations d'un fichier static (hors fichier) <code>static_download</code> str <code>${routing:static_get}/file</code> T\u00e9l\u00e9chargement d'un fichier static Routes concernant l'entit\u00e9 Annexe \u2060 \u2060 \u2060 <code>annexe_list</code> str <code>{store_api:root_datastore}/annexes</code> Liste des annexes <code>annexe_get</code> str <code>{routing:annexe_list}/{annexe}</code> D\u00e9tails d'une annexe <code>annexe_upload</code> str <code>{routing:annexe_get}</code> T\u00e9l\u00e9versement d'une annexe <code>annexe_delete</code> str <code>{routing:annexe_get}</code> Suppression d'une annexe <code>annexe_re_upload</code> str <code>{routing:annexe_get}</code> Remplacement du fichier de l'annexe <code>annexe_partial_edit</code> str <code>{routing:annexe_get}</code> \u00c9dition partielle d'une annexe (hors fichier) <code>annexe_download</code> str <code>{routing:annexe_get}/file</code> T\u00e9l\u00e9chargement d'un fichier d'annexe <code>annexe_publish_by_label</code> str <code>{routing:annexe_list}/publication</code> Publication des annexes par labels <code>annexe_unpublish_by_label</code> str <code>{routing:annexe_list}/unpublication</code> D\u00e9publication des annexes par labels <p>| Routes concernant l'entit\u00e9 Tms {: colspan=4 } | \u2060 {: .dn }| \u2060 {: .dn }| \u2060 {: .dn } | | <code>tms_list</code>                              | str  | <code>{store_api:root_url}/statics/tms</code>                    | Liste des tms disponible pour tout la GPF | | <code>tms_get</code>                               | str  | <code>{routing:tms_list}/{tms}</code>                            | D\u00e9tails d'un tms | | <code>tms_download</code>                          | str  | <code>{routing:tms_get}/file</code>                              | T\u00e9l\u00e9chargement d'un tms |</p>"},{"location":"configuration_details/#section-upload","title":"Section <code>upload</code>","text":"<p>Cette section concerne les param\u00e8tres de gestion des livraisons (<code>upload</code>).</p> Param\u00e8tre Type D\u00e9faut Description <code>uniqueness_constraint_infos</code> str <code>name</code> Attributs \u00e0 consid\u00e9rer pour tester l'unicit\u00e9 d'une livraison. <code>uniqueness_constraint_tags</code> str <code>empty str</code> \u00c9tiquettes \u00e0 consid\u00e9rer pour tester l'unicit\u00e9 d'une livraison. <code>behavior_if_exists</code> str <code>STOP</code> Comportement \u00e0 adopter si la livraison \u00e0 cr\u00e9er existe d\u00e9j\u00e0 (<code>DELETE</code> : on la supprime et on la recr\u00e9e, <code>CONTINUE</code> : on reprendre le t\u00e9l\u00e9versement, <code>STOP</code> : on l\u00e8ve une exception). <code>md5_pattern</code> str <code>{md5_key}  data/{file_path}</code> Mod\u00e8le des fichiers de cl\u00e9s md5 \u00e0 livrer. <code>push_data_file_key</code> int <code>filename</code> Nom de la cl\u00e9 pour t\u00e9l\u00e9verser des fichiers de donn\u00e9es. <code>push_md5_file_key</code> int <code>filename</code> Nom de la cl\u00e9 pour t\u00e9l\u00e9verser des fichiers de cl\u00e9 md5. <code>nb_sec_between_check_updates</code> int 10 Nombre de secondes entre deux mises \u00e0 jour du statut de la livraison lors des v\u00e9rifications. <code>check_message_pattern</code> int <code>V\u00e9rifications : {nb_asked} en attente, {nb_in_progress} en cours, {nb_failed} en \u00e9chec, {nb_passed} en succ\u00e8s</code> Mod\u00e8le du message \u00e0 afficher pendant la v\u00e9rification d'une livraison. <code>open_status</code> int <code>OPEN</code> Constante repr\u00e9sentant le statut ouvert d'une livraison. <code>close_status</code> int <code>CLOSE</code> Constante repr\u00e9sentant le statut fermer d'une livraison."},{"location":"configuration_details/#section-processing_execution","title":"Section <code>processing_execution</code>","text":"<p>Cette section concerne les param\u00e8tres de gestion des ex\u00e9cutions de traitement (<code>processing_execution</code>).</p> Param\u00e8tre Type D\u00e9faut Description <code>nb_sec_between_check_updates</code> int 10 Nombre de secondes entre deux mises \u00e0 jour du statut de l'ex\u00e9cution des v\u00e9rifications. <code>uniqueness_constraint_infos</code> str <code>name</code> Attributs \u00e0 consid\u00e9rer pour tester l'unicit\u00e9 d'une entit\u00e9 en sortie de l'ex\u00e9cution de traitement (livraison ou donn\u00e9e stock\u00e9e). <code>uniqueness_constraint_tags</code> str <code>empty str</code> \u00c9tiquettes \u00e0 consid\u00e9rer pour tester l'unicit\u00e9 d'une entit\u00e9 en sortie de l'ex\u00e9cution de traitement (livraison ou donn\u00e9e stock\u00e9e). <code>behavior_if_exists</code> str <code>STOP</code> Comportement \u00e0 adopter si l'entit\u00e9 en sortie de l'ex\u00e9cution de traitement (livraison ou donn\u00e9e stock\u00e9e) existe d\u00e9j\u00e0 (<code>DELETE</code> : on la supprime et on la recr\u00e9e, <code>STOP</code> : on l\u00e8ve une exception)."},{"location":"configuration_details/#section-configuration","title":"Section <code>configuration</code>","text":"<p>Cette section concerne les param\u00e8tres de gestion des configurations (<code>configuration</code>).</p> Param\u00e8tre Type D\u00e9faut Description <code>uniqueness_constraint_infos</code> str <code>name</code> Attributs \u00e0 consid\u00e9rer pour tester l'unicit\u00e9 de la configuration. <code>uniqueness_constraint_tags</code> str <code>empty str</code> \u00c9tiquettes \u00e0 consid\u00e9rer pour tester l'unicit\u00e9 de la configuration."},{"location":"configuration_details/#section-static","title":"Section <code>static</code>","text":"<p>Cette section concerne les param\u00e8tres de gestion des fichiers statiques (<code>static</code>)</p> Param\u00e8tre Type D\u00e9faut Description <code>create_file_key</code> str <code>file</code> Clef pour la livraison d'un fichier static"},{"location":"configuration_details/#section-annexe","title":"Section <code>annexe</code>","text":"<p>Cette section concerne les param\u00e8tres de gestion des annexes (<code>annexe</code>)</p> Param\u00e8tre Type D\u00e9faut Description <code>create_file_key</code> str <code>file</code> Clef pour la livraison d'un fichier annexe"},{"location":"configuration_details/#section-miscellaneous","title":"Section <code>miscellaneous</code>","text":"<p>Cette section concerne les param\u00e8tres divers.</p> Param\u00e8tre Type D\u00e9faut Description <code>data_directory_on_store</code> str <code>name;layer_name</code> Pr\u00e9fixe des fichiers de donn\u00e9es t\u00e9l\u00e9vers\u00e9s sur une livraison. <code>tmp_workdir</code> str <code>empty str</code> R\u00e9pertoire local et existant permettant d'\u00e9crire des donn\u00e9es temporaires."},{"location":"configuration_details/#section-workflow_resolution_regex","title":"Section <code>workflow_resolution_regex</code>","text":"<p>Cette section concerne la configuration des expression r\u00e9guli\u00e8res (regex) permettant de r\u00e9soudre des workflows.</p> <p>Ces regex vont \u00eatre notamment utilis\u00e9es par les r\u00e9solveurs (<code>resolver</code>) (cf. la classe Python <code>ignf_gpf_api.workflow.resolver.AbstractResolver</code>).</p>"},{"location":"configuration_details/#option-filter_infos","title":"Option <code>filter_infos</code>","text":"<p>Configuration de la mani\u00e8re de r\u00e9cup\u00e9rer les filtres sur les attributs (infos) afin de r\u00e9soudre une entit\u00e9. La cha\u00eene captur\u00e9e doit \u00eatre nomm\u00e9e <code>filter_infos</code>.</p> <ul> <li>Type : str</li> <li>Valeur par d\u00e9faut : <code>((\\s*)INFOS(\\s*)\\((?P&lt;filter_infos&gt;.*?)\\)(\\s*))?</code></li> </ul>"},{"location":"configuration_details/#option-filter_tags","title":"Option <code>filter_tags</code>","text":"<p>Configuration de la mani\u00e8re de r\u00e9cup\u00e9rer les filtres sur les \u00e9tiquettes (tags) afin de r\u00e9soudre une entit\u00e9. La cha\u00eene captur\u00e9e doit \u00eatre nomm\u00e9e <code>filter_tags</code>.</p> <ul> <li>Type : str</li> <li>Valeur par d\u00e9faut : <code>((\\s*)TAGS(\\s*)\\((?P&lt;filter_tags&gt;.*?)\\)(\\s*))?</code></li> </ul>"},{"location":"configuration_details/#option-filter","title":"Option <code>filter</code>","text":"<p>Configuration de la mani\u00e8re de r\u00e9cup\u00e9rer les filtres sur les attributs et les \u00e9tiquettes afin de r\u00e9soudre une entit\u00e9.</p> <ul> <li>Type : str</li> <li>Valeur par d\u00e9faut : <code>((\\s*)\\[${filter_infos},?${filter_tags}\\])</code></li> </ul> <p>Les cha\u00eenes captur\u00e9es doivent respectivement \u00eatre nomm\u00e9es <code>filter_infos</code> et <code>filter_tags</code> et sont ensuite trait\u00e9es par les regex configur\u00e9es dans les options <code>filter_infos</code> et <code>filter_tags</code>.</p>"},{"location":"configuration_details/#option-store_entity_regex","title":"Option <code>store_entity_regex</code>","text":"<p>Configuration de la regex de r\u00e9solution une entit\u00e9.</p> <ul> <li>Type : str</li> <li>Valeur par d\u00e9faut : <code>(?P&lt;entity_type&gt;(upload|stored_data|processing_execution|offering|processing|configuration|endpoint))\\.(?P&lt;selected_field_type&gt;(tags|infos))\\.(?P&lt;selected_field&gt;\\w*)${filter}</code></li> </ul> <p>Les cha\u00eenes captur\u00e9es doivent \u00eatre nomm\u00e9es :</p> <ul> <li><code>entity_type</code> : pour la cha\u00eene r\u00e9cup\u00e9rant le type de l'entit\u00e9 \u00e0 r\u00e9soudre (<code>upload</code>, <code>stored_data</code>, ...) ;</li> <li><code>selected_field_type</code> : pour la cha\u00eene r\u00e9cup\u00e9rant le type de champ \u00e0 renvoyer (attribut <code>infos</code> ou \u00e9tiquette <code>tags</code>) ;</li> <li><code>selected_field</code> : pour la cha\u00eene r\u00e9cup\u00e9rant le champ \u00e0 renvoyer (<code>_id_</code>, <code>name</code>, ...) ;</li> <li><code>filter_infos</code> : pour la cha\u00eene r\u00e9cup\u00e9rant les crit\u00e8res de filtre sur les attributs (dans la config par d\u00e9faut, cela est d\u00e9l\u00e9gu\u00e9 \u00e0 l'option <code>filter</code>) ;</li> <li><code>filter_tags</code> : pour la cha\u00eene r\u00e9cup\u00e9rant les crit\u00e8res de filtre sur les \u00e9tiquettes (dans la config par d\u00e9faut, cela est d\u00e9l\u00e9gu\u00e9 \u00e0 l'option <code>filter</code>).</li> </ul>"},{"location":"configuration_details/#option-global_regex","title":"Option <code>global_regex</code>","text":"<p>Configuration de la regex de d\u00e9tection de l'appel \u00e0 un r\u00e9solveur.</p> <ul> <li>Type : str</li> <li>Valeur par d\u00e9faut : <code>(?P&lt;param&gt;(\\[\"|{\"?)(?P&lt;resolver_name&gt;[a-z_]+)(\\.|\": *\"|\", *\")(?P&lt;to_solve&gt;[^\"{}]*?({[^}]+}[^\"{}]*?)*)(\"\\]|\"?}))</code></li> </ul> <p>Les cha\u00eenes captur\u00e9es doivent \u00eatre nomm\u00e9es :</p> <ul> <li><code>param</code> : pour la cha\u00eene compl\u00e8te ;</li> <li><code>resolver_name</code> : pour la cha\u00eene donnant le nom du r\u00e9solveur \u00e0 appeler ;</li> <li><code>to_solve</code> : pour la cha\u00eene donnant la cha\u00eene \u00e0 r\u00e9soudre.</li> </ul>"},{"location":"configuration_details/#option-file_regex","title":"Option <code>file_regex</code>","text":"<p>Configuration de la regex du r\u00e9solveur de fichier (classe <code>ignf_gpf_api.workflow.resolver.FileResolver</code>).</p> <ul> <li>Type : str</li> <li>Valeur par d\u00e9faut : <code>(?P&lt;resolver_type&gt;str|list|dict)\\((?P&lt;resolver_file&gt;.*)\\)</code></li> </ul> <p>Les cha\u00eenes captur\u00e9es doivent \u00eatre nomm\u00e9es :</p> <ul> <li><code>resolver_type</code> : pour la cha\u00eene donnant le type de fichier \u00e0 r\u00e9soudre (<code>str</code>, <code>list</code> ou <code>dict</code>) ;</li> <li><code>resolver_file</code> : pour la cha\u00eene donnant le chemin du fichier \u00e0 r\u00e9soudre.</li> </ul>"},{"location":"configuration_details/#section-json_converter","title":"Section <code>json_converter</code>","text":"<p>Cette section concerne les param\u00e8tres de conversion en JSON des types non g\u00e9r\u00e9s de base par Python.</p> Param\u00e8tre Type D\u00e9faut Description <code>datetime_pattern</code> str <code>%Y-%m-%dT%H:%M:%S</code> Mod\u00e8le de formatage des <code>datetime</code> en string. <code>date_pattern</code> str <code>%Y-%m-%d</code> Mod\u00e8le de formatage des <code>date</code> en string. <code>time_pattern</code> str <code>%H:%M:%S</code> Mod\u00e8le de formatage des <code>time</code> en string."},{"location":"configuration_details/#section-json_schemas","title":"Section <code>json_schemas</code>","text":"<p>Cette section concerne le param\u00e9trage des sch\u00e9mas JSON utilis\u00e9s. Par d\u00e9faut, les chemins sont d\u00e9finis relativement \u00e0 <code>ignf_gpf_api/_conf</code>, mais peuvent \u00e9galement \u00eatre absolus.</p> Param\u00e8tre Type D\u00e9faut Description <code>descriptor_file</code> str <code>json_schemas/upload_descriptor_file.json</code> Chemin vers le sch\u00e9ma JSON d\u00e9finissant les fichiers descripteurs de livraison. <code>workflow_config</code> str <code>json_schemas/workflow_config.json</code> Chemin vers le sch\u00e9ma JSON d\u00e9finissant les fichiers workflow."},{"location":"development/","title":"D\u00e9veloppement","text":""},{"location":"development/#mise-en-place","title":"Mise en place","text":"<p>R\u00e9cup\u00e9rez le code :</p> <pre><code>git clone git@github.com:geoplateforme/sdk_entrepot.git\n</code></pre> <p>Ouvrez le dossier nouvellement cr\u00e9e avec votre \u00e9diteur favoris (ici Visual Studio Code) :</p> <pre><code>code sdk_entrepot\n</code></pre> <p>Si n\u00e9cessaire, effectuez les installations syst\u00e8mes suivantes :</p> <pre><code>sudo apt install python3 python3-pip python3-venv\n</code></pre> <p>Puis mettez \u00e0 jour <code>pip</code> et <code>virtualenv</code> :</p> <pre><code>python3 -m pip install --user --upgrade pip virtualenv setuptools\n</code></pre> <p>Cr\u00e9ez un environnement isol\u00e9 : (il sera cr\u00e9\u00e9 dans le dossier o\u00f9 la commande est lanc\u00e9e donc il est pr\u00e9f\u00e9rable de se placer \u00e0 la racine du d\u00e9p\u00f4t que vous venez de cloner)</p> <pre><code>python3 -m venv env\n</code></pre> <p>Activez l'environnement :</p> <pre><code>source env/bin/activate\n</code></pre> <p>Installez les d\u00e9pendances de d\u00e9veloppement :</p> <pre><code>python3 -m pip install --upgrade pip setuptools flit\npython3 -m flit install --extras all\n</code></pre> <p>Lancez les tests pour v\u00e9rifier que tout fonctionne correctement :</p> <pre><code>./check.sh\n</code></pre>"},{"location":"development/#documentation","title":"Documentation","text":"<p>Vous pouvez g\u00e9n\u00e9rer la doc en local via la commande :</p> <pre><code>mkdocs serve\n</code></pre> <p>Pour g\u00e9rer la doc est la publier, il faut pour le moment :</p> <ul> <li>r\u00e9cup\u00e9rer le code \u00e0 jour sur la branche de votre choix ;</li> </ul>"},{"location":"development/#developpement-et-tests","title":"D\u00e9veloppement et tests","text":"<p>Pour tester le programme, vous aurez besoin de cr\u00e9er un fichier <code>config.ini</code>, cf. configuration.</p> <p>Les classes python sont couvertes avec un maximum de tests unitaires merci de penser \u00e0 couvrir le code ajout\u00e9 ou \u00e0 modifier les tests existants au besoin.</p> <p>Pensez \u00e0 activer l'environnement avant de lancer les tests :</p> <pre><code>source env/bin/activate\n</code></pre> <p>Pour automatiser dans VSCode : doc ici</p> <p>\u00c0 la fin de votre d\u00e9veloppement, lancez <code>./check.sh</code> pour v\u00e9rifier que votre code respecte les crit\u00e8res de qualit\u00e9.</p>"},{"location":"development/#consigne-developpement","title":"Consigne d\u00e9veloppement","text":"<ul> <li>Nomenclature Python (classes en PascalCase, constantes en UPPER_CASE, le reste en snake_case)\u200b</li> <li>Variables suffix\u00e9es par leur type (cf. \"variable-rgx\" du .pylintrc)\u200b</li> <li><code>s_</code> : string\u200b</li> <li><code>i_</code> : integer\u200b</li> <li><code>f_</code> : float\u200b</li> <li><code>l_</code> : list (et autres enumerable)\u200b</li> <li><code>d_</code> : dict\u200b</li> <li><code>b_</code> : bool\u200b</li> <li><code>e_</code> : error\u200b</li> <li><code>p_</code> : Path\u200b</li> <li><code>o_</code> : object\u200b</li> <li>Programmation typ\u00e9e (v\u00e9rifi\u00e9e avec mypy; memo type)</li> <li>Toutes les classes et fonctions doivent \u00eatre document\u00e9es.</li> <li>Utilisation de <code>pathlib.Path</code> et non de <code>os.path\u200b</code>.</li> <li>G\u00e9rer l'affichage des messages avec <code>Config().om\u200b</code>, ne pas utiliser de <code>print()</code> ou autre logger.</li> <li><code>Config().om.debug(\"message\")</code></li> <li><code>Config().om.info(\"message\")</code></li> <li><code>Config().om.warning(\"message\")</code></li> <li><code>Config().om.error(\"message\")</code></li> <li><code>Config().om.critical(\"message\")</code></li> <li>Configuration centralis\u00e9e via la classe Config()\u200b (cf. Utilisation comme module Python)</li> </ul>"},{"location":"development/#deploiement-des-versions-dev-et-prod-sur-pypi","title":"D\u00e9ploiement des versions dev et prod sur PyPI","text":""},{"location":"development/#a-principe","title":"A. Principe","text":"<p>Le principe est de mettre \u00e0 jour une version de code dans Github. Puis de merger cette version dans la branche dev (ou prod selon votre besoin). Enfin, de faire une release sur test.pypi (ou pi selon votre besoin).</p>"},{"location":"development/#b-mise-a-jour-de-la-branche-dev","title":"B. Mise \u00e0 jour de la branche dev","text":"<p>Pour effectuer un d\u00e9ploiement de la librairie <code>sdk_entrepot_gpf</code>, il faut d'abord modifier le num\u00e9ro de version dans le fichier <code>sdk_entrepot_gpf/__init__.py</code>.</p> <pre><code>__version__ = &lt;x.y.z&gt;\n</code></pre> <p>Par exemple, on a \"0.1.9\". On va donc \u00e9crire \"0.1.10\". Commiter en pr\u00e9cisant le num\u00e9ro de version dans le message de commit.</p> <p>Puis il faut r\u00e9soudre ou faire les pull request avec la branche dev en fonction de l'avancement du projet pour avoir une branche dev \u00e0 jour.</p>"},{"location":"development/#creation-de-la-pre-release-sur-testpypi","title":"Cr\u00e9ation de la pre-release sur test.pypi","text":"<p>Pour publier une nouvelle version, qui va \u00eatre ensuite publi\u00e9e comme librairie sur PyPi, il faut cr\u00e9er une (pre)-release :</p> <ul> <li>cr\u00e9ez une release de test sur la branche dev versionn\u00e9e selon le mod\u00e8le <code>tx.y.z</code> (ex : t1.2.3) pour d\u00e9ployer une nouvelle version du module en test :</li> <li>choose a tag : taper \"t0.1.10\" et cliquer sur \"Create new tag\".</li> <li>target : choisir \"dev\"</li> <li>ajouter un titre (\"Test 1.2.3\") et une description des principales modifications apport\u00e9es.</li> <li>Cocher la case pre-release. Cliquer sur \"Publish release\" (les tests vont se lancer...)</li> <li>V\u00e9rifier la publication sur test.pypi</li> </ul>"},{"location":"development/#c-mise-a-jour-de-la-branche-prod","title":"C. Mise \u00e0 jour de la branche prod","text":"<p>Il faut merger dans github sa version de code dans la branche prod, ou bien, merger dev dans prod si on reprend le code ci-dessus.</p> <p>Puis il faut r\u00e9soudre ou faire les pull request avec la branche prod en fonction de l'avancement du projet pour avoir une branche prod \u00e0 jour.</p>"},{"location":"development/#creation-de-la-pre-release-sur-pypi","title":"Cr\u00e9ation de la pre-release sur pypi","text":"<p>Pour publier une nouvelle version, qui va \u00eatre ensuite publi\u00e9e comme librairie sur PyPi, il faut cr\u00e9er une (pre)-release :</p> <ul> <li>cr\u00e9ez une release sur la branche prod versionn\u00e9e selon le mod\u00e8le <code>vx.y.z</code> (ex : v1.2.3) pour d\u00e9ployer une nouvelle version du module en production :</li> <li>choose a tag : taper \"v0.1.10\" et cliquer sur \"Create new tag\".</li> <li>target : choisir \"prod\"</li> <li>ajouter un titre (\"Version 1.2.3\") et une description des principales modifications apport\u00e9es.</li> <li>Cliquer sur \"Publish release\" (les tests vont se lancer...)</li> <li>V\u00e9rifier la publication sur pypi</li> </ul>"},{"location":"development/#publication-sur-pypi-a-la-main-si-besoin","title":"Publication sur PyPI \u00e0 la main si besoin","text":"<p>La publication du package sur PyPI est automatique sur Github gr\u00e2ce aux actions CI Dev et CI Prod :</p> <p>Si besoin, voici les commandes pour effectuer \u00e0 la main la publication :</p> <pre><code>export FLIT_PASSWORD=&lt;token&gt;\n</code></pre> <p>Publication sur TestPyPI :</p> <pre><code>flit publish --pypirc .pypirc --repository testpypi\n</code></pre> <p>Publication sur PyPI :</p> <pre><code>flit publish --pypirc .pypirc --repository pypi\n</code></pre>"},{"location":"resolveurs/","title":"R\u00e9solveur","text":"<p>Les r\u00e9solveurs sont des outils permettant de compl\u00e9ter les workflows en rempla\u00e7ant un pattern par la valeur calcul\u00e9e.</p>"},{"location":"resolveurs/#utilisation","title":"Utilisation","text":"<p>Le nom d'un r\u00e9solveur est donn\u00e9 \u00e0 son initialisation. Il est possible d'avoir plusieurs r\u00e9solveurs d'un m\u00eame type.</p> <p>A l'utilisation du SDK comme un ex\u00e9cutable, il y a 2 r\u00e9solveurs d\u2019instanci\u00e9s :</p> <ul> <li><code>user</code> : un UserResolver</li> <li><code>store_entity</code> : un StoreEntityResolver</li> </ul> <p>A l'utilisation comme module, il n'y a aucun r\u00e9solveurs d\u2019instanci\u00e9 de base. Il faut instancier des r\u00e9solveurs dans le programme et les ajouter au <code>GlobalResolver</code>.</p> <p>Dans le fichier de workflow, pour utiliser le r\u00e9solveur il faut ajouter le pattern permettant d'activer le r\u00e9solveur selon le type de donn\u00e9e attendu :</p> <ul> <li>Texte : <code>\"{nom_du_resolveur.nom_de_la_clef}\"</code></li> <li>Liste: <code>[\"_nom_du_resolveur_\", \"nom_de_la_clef\"]</code> ou <code>[\"_nom_du_resolveur.nom_de_la_clef\"]</code></li> <li>Dictionnaire : <code>{\"_nom_du_resolveur_\": \"nom_de_la_clef\"}</code></li> </ul>"},{"location":"resolveurs/#resolveur-de-base","title":"r\u00e9solveur de base","text":"<p>Il y a 4 r\u00e9solveurs de base :</p> <ul> <li>DictResolver: permet d'ins\u00e9rer les valeurs contenues dans un dictionnaire ;</li> <li>FileResolver: ins\u00e8re les valeurs contenues dans un fichier ;</li> <li>StoreEntityResolver: r\u00e9cup\u00e8re des informations sur les entit\u00e9s depuis la GPF ;</li> <li>UserResolver: r\u00e9cup\u00e8re des informations de l'utilisateur courant depuis la GPF.</li> </ul>"},{"location":"resolveurs/#dictresolver","title":"DictResolver","text":"<p>Permet de r\u00e9soudre des param\u00e8tres cl\u00e9 -&gt; valeur (pas de sous clef)</p> <p>Prend en initialisation le dictionnaire contenant les valeurs.</p> <p>Exemple :</p> <pre><code>from sdk_entrepot_gpf.workflow.resolver.DictResolver import DictResolver\nfrom sdk_entrepot_gpf.workflow.resolver.GlobalResolver import GlobalResolver\n\ndictionnaire = {\n    \"ajout_text\": \"valeur 1\",\n    \"ajout_liste\": [\"val 1\", \"val 2\"],\n    \"ajout_dict\": {\"key1\": \"val1\", \"key2\": \"val2\"},\n}\n\n# initialisation (instanciation du r\u00e9solveur + ajout)\ndict_resolver = DictResolver(\"my_dict\", dictionnaire)\nGlobalResolver().add_resolver(dict_resolver)\n\n# texte \u00e0 r\u00e9soudre\ntext = \"\"\"\ninsertion de text ici &gt;{my_dict.ajout_text}&lt;\nici une liste &gt;[\"_my_dict.ajout_liste\"]&lt;\nou une liste &gt;[\"_my_dict_\",\"ajout_liste\"]&lt;\nici un dictionnaire &gt;{\"_my_dict_\": \"ajout_dict\"}&lt;\n\"\"\"\n\n# resolution\nprint(GlobalResolver().resolve(text))\n## affichage\n#    insertion de text ici &gt;valeur 1&lt;\n#    ici une liste &gt;['val 1', 'val 2']&lt;\n#    ou une liste &gt;['val 1', 'val 2']&lt;\n#    ici un dictionnaire &gt;{'key1': 'val1', 'key2': 'val2'}&lt;\n</code></pre>"},{"location":"resolveurs/#fileresolver","title":"FileResolver","text":"<p>Permet de r\u00e9soudre des param\u00e8tres faisant r\u00e9f\u00e9rence \u00e0 des fichiers : ce r\u00e9solveur permet d'ins\u00e9rer le contenu d'un fichier au moment de la r\u00e9solution.</p> <p>Ce fichier peut \u00eatre un fichier texte basique, une liste au format JSON ou un dictionnaire au format JSON.</p> <p>A l'utilisation de ce r\u00e9solveur, il faut indiquer le chemin du fichier \u00e0 ins\u00e9rer relativement au chemin indiqu\u00e9 \u00e0 l'instanciation du r\u00e9solveur :</p> <ul> <li>r\u00e9cup\u00e9ration de texte : <code>{nom_resolver}.str({chemin_fichier})</code></li> <li>r\u00e9cup\u00e9ration d'une liste : <code>{nom_resolver}.list({chemin_fichier})</code></li> <li>r\u00e9cup\u00e9ration d'un dictionnaire : <code>{nom_resolver}.dict({chemin_fichier})</code></li> </ul> <p>Exemple :</p> <pre><code>from pathlib import Path\nfrom sdk_entrepot_gpf.workflow.resolver.FileResolver import FileResolver\nfrom sdk_entrepot_gpf.workflow.resolver.GlobalResolver import GlobalResolver\n\n# dans le r\u00e9pertoire courant on a les fichiers suivants\n## text simple: \"text.txt\"\n# * contenu =&gt; \"coucou\"\n## liste: \"liste.json\"\n# * contenu =&gt; [\"valeur 1\", \"valeur 2\"]\n## dictionnaire: \"dict.json\"\n# * contenu =&gt; {\"k1\":\"v1\", \"k2\":\"v2\"}\n\n# initialisation (le r\u00e9solveur s'appelle \"fichier\" et cherche les fichiers relativement au r\u00e9pertoire courant)\nfile_resolver = FileResolver(\"fichiers\", Path(\".\"))\nGlobalResolver().add_resolver(file_resolver)\n\n# texte \u00e0 r\u00e9soudre\ntext = \"\"\"\ninsertion de text ici &gt;{fichiers.str(text.txt)}&lt;\nici une liste &gt;[\"_fichiers_\",\"list(liste.json)\"]&lt;\nici un dictionnaire &gt;{\"_fichiers_\":\"dict(dict.json)\"}&lt;\n\"\"\"\n\n# resolution\nprint(GlobalResolver().resolve(text))\n## affichage\n#   insertion de text ici &gt;coucou&lt;\n#   ici une liste &gt;[\"valeur 1\", \"valeur 2\"]&lt;\n#   ici un dictionnaire &gt;{\"k1\":\"v1\", \"k2\":\"v2\"}&lt;\n</code></pre>"},{"location":"resolveurs/#storeentityresolver","title":"StoreEntityResolver","text":"<p>Permet de r\u00e9soudre des param\u00e8tres faisant r\u00e9f\u00e9rence \u00e0 une entit\u00e9 sur la GPF. Utilisation du pattern <code>store_entity_regex</code> de la configuration.</p> <p>La structure est l\u00e9g\u00e8rement diff\u00e9rente: <code>{nom_r\u00e9solveur}.{entity_type}.{field_type}.{field} ([INFOS ({key}={val}, [...])], [TAGS ({key}={val}, [...])])</code></p> <p>avec :</p> <ul> <li><code>entity_type</code> : type de l'entit\u00e9 \u00e0 r\u00e9cup\u00e9rer, une des valeurs suivantes : <code>upload|stored_data|processing_execution|offering|processing|configuration|endpoint|static|datastore</code> ;</li> <li><code>field_type</code> : <code>tags</code> pour r\u00e9cup\u00e9rer la valeur d'un tag, <code>infos</code> pour r\u00e9cup\u00e9rer une valeur du dictionnaire d\u00e9crivant l'entit\u00e9 ;</li> <li><code>field</code>: si <code>tags</code> nom du tag dont on veux la valeur, si <code>infos</code> clef du dictionnaire dont on veux la valeur ;</li> <li><code>INFOS ({key}={val}, ...)</code> : (optionnel) filtre sur les entit\u00e9s hors tag, voir la doc de la requ\u00eate de liste des entit\u00e9s pour savoir les clefs possibles ;</li> <li><code>TAGS ({key}={val}, ...)</code> : (optionnel) filtre sur les tags (s'il y a des tags sur cette entit\u00e9).</li> </ul> <p>Si on a plusieurs r\u00e9sultats le premier r\u00e9sultat est utilis\u00e9.</p> <p>Exemple (fonctionne apr\u00e8s la livraison des donn\u00e9es du tutoriel 2 pour les flux vecteur ) :</p> <pre><code>from sdk_entrepot_gpf.workflow.resolver.StoreEntityResolver import StoreEntityResolver\nfrom sdk_entrepot_gpf.workflow.resolver.GlobalResolver import GlobalResolver\nfrom sdk_entrepot_gpf.io.Config import Config\n\n# configuration\nConfig().read(\"config.ini\")\n\n# initialisation\nfile_resolver = StoreEntityResolver(\"store_entity\")\nGlobalResolver().add_resolver(file_resolver)\n\n# texte \u00e0 r\u00e9soudre\ntext = \"\"\"\nid d'un traitement par son nom  &gt;{store_entity.processing.infos._id [INFOS(name=Int\u00e9gration de donn\u00e9es vecteur livr\u00e9es en base)]}&lt;\nid d'un upload par son nom &gt;{store_entity.upload.infos._id [INFOS(name=EXAMPLE_DATASET_VECTOR)]}&lt;\nid d'un upload par son nom et tag &gt;{store_entity.upload.infos._id [INFOS(name=EXAMPLE_DATASET_VECTOR), TAGS(tuto=oui)]}&lt;\nvaleur du tag \"tuto\" d'un upload par son nom &gt;{store_entity.upload.tags.tuto [INFOS(name=EXAMPLE_DATASET_VECTOR)]}&lt;\n\"\"\"\n\n# resolution\nprint(GlobalResolver().resolve(text))\n## affichage\n#    id d'un traitement par son nom  &gt;0de8c60b-9938-4be9-aa36-9026b77c3c96&lt;\n#    id d'un upload par son nom &gt;a2703a39-d3d5-48f2-8372-bbabfc08cdf4&lt;\n#    id d'un upload par son nom et tag &gt;a2703a39-d3d5-48f2-8372-bbabfc08cdf4&lt;\n#    valeur du tag \"tuto\" d'un upload par son nom &gt;oui&lt;\n</code></pre>"},{"location":"resolveurs/#userresolver","title":"UserResolver","text":"<p>Permet de r\u00e9soudre des param\u00e8tres avec les informations sur l'utilisateur authentifi\u00e9. Les informations disponibles sont celles renvoy\u00e9e par la route /users/me.</p> <p>Classe d\u00e9riv\u00e9e de DictRevolver, la plu-value sur la classe DictRevolver est que les infos de l'utilisateur sont directement r\u00e9cup\u00e9r\u00e9es par le constructeur de la classe.</p> <pre><code>from sdk_entrepot_gpf.workflow.resolver.UserResolver import UserResolver\nfrom sdk_entrepot_gpf.workflow.resolver.GlobalResolver import GlobalResolver\nfrom sdk_entrepot_gpf.io.Config import Config\n\n# configuration\nConfig().read(\"config.ini\")\n\n# initialisation\nfile_resolver = UserResolver(\"user\")\nGlobalResolver().add_resolver(file_resolver)\n\n# texte \u00e0 r\u00e9soudre\ntext = \"\"\"\nnom de l'utilisateur &gt;{user.last_name}&lt;\npr\u00e9nom de l'utilisateur &gt;{user.first_name}&lt;\n\"\"\"\n\n# resolution\nprint(GlobalResolver().resolve(text))\n</code></pre>"},{"location":"resolveurs/#creer-son-resolveur","title":"Cr\u00e9er son r\u00e9solveur","text":"<p>Pour cr\u00e9er votre r\u00e9solveur, vous devez cr\u00e9er une classe qui h\u00e9rite de la classe <code>AbstractResolver</code>.</p> <p>Dans le constructeur de votre classe, il faudra impl\u00e9menter les t\u00e2ches qui doivent \u00eatre effectu\u00e9es une fois. Par exemple, de r\u00e9cup\u00e9rer les informations de l'utilisateur (qui, \u00e0 priori, ne changent pas \u00e0 chaque r\u00e9solution).</p> <p>Dans la fonction <code>resolve</code> de votre classe, il faudra impl\u00e9menter la r\u00e9solution du param\u00e9trage \u00e0 partir de la string <code>string_to_solve</code> avant de retourner la valeur r\u00e9solue.</p>"},{"location":"tutoriel_1_archive/","title":"Tutoriel 1 : publier une archive","text":"<p>La G\u00e9oplateforme permet d'h\u00e9berger vos fichiers pour permettre \u00e0 vos utilisateur de les t\u00e9l\u00e9charger simplement.</p> <p>Pour cela, vous devez t\u00e9l\u00e9verser des donn\u00e9es \u00ab archive \u00bb (c'est \u00e0 dire qu'elles ne seront pas retouch\u00e9es par la G\u00e9oplateforme).</p> <p>Pour commencer, nous vous conseillons de suivre ce tutoriel qui vous permet de manipuler des donn\u00e9es d\u00e9j\u00e0 existantes. Vous pouvez ensuite adapter chaque \u00e9tape pour livrer vos donn\u00e9es.</p>"},{"location":"tutoriel_1_archive/#definition-de-la-configuration","title":"D\u00e9finition de la configuration","text":"<p>Suivez la page configuration pour d\u00e9finir le fichier de configuration.</p>"},{"location":"tutoriel_1_archive/#recuperation-du-jeu-de-donnees","title":"R\u00e9cup\u00e9ration du jeu de donn\u00e9es","text":"<p>Le jeu de donn\u00e9es \u00ab 2_dataset_archive \u00bb contient des donn\u00e9es archives \u00e0 t\u00e9l\u00e9verser.</p> <p>R\u00e9cup\u00e9rez les donn\u00e9es en lan\u00e7ant la commande :</p> <pre><code>python -m sdk_entrepot_gpf dataset -n 2_dataset_archive\n</code></pre> <p>Observez la structure du jeu de donn\u00e9es :</p> <pre><code>2_dataset_archive/\n\u251c\u2500\u2500 CANTON\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 CANTON.zip\n\u251c\u2500\u2500 CANTON.md5\n\u2514\u2500\u2500 upload_descriptor.json\n</code></pre> <p>La donn\u00e9e que l'on souhaite h\u00e9berger est le fichier <code>CANTON.zip</code>. Le fichier <code>CANTON.md5</code> permettra de valider les donn\u00e9es t\u00e9l\u00e9vers\u00e9es c\u00f4t\u00e9 G\u00e9oplateforme.</p> <p>Enfin, le fichier <code>upload_descriptor.json</code> permet de d\u00e9crire la livraison \u00e0 effectuer.</p>"},{"location":"tutoriel_1_archive/#fichier-descripteur-de-livraison","title":"Fichier descripteur de livraison","text":"<p>Ouvrez le fichier pour avoir plus de d\u00e9tails.</p> <p>Il est compos\u00e9 d'une liste de <code>datasets</code> repr\u00e9sentant chacun une livraison distincte.</p> <p>Chaque dataset contient :</p> <ul> <li>la liste des dossiers \u00e0 t\u00e9l\u00e9verser ;</li> <li>les informations de la livraison \u00e0 cr\u00e9er (nom, description, srs et type) ;</li> <li>les commentaires et les tags \u00e0 ajouter \u00e0 la livraison.</li> </ul> <p>La documentation du fichier descripteur est disponible ici.</p>"},{"location":"tutoriel_1_archive/#livraison-des-donnees","title":"Livraison des donn\u00e9es","text":"<p>Livrer les donn\u00e9es en indiquant le chemin du fichier descripteur au programme :</p> <pre><code>python -m sdk_entrepot_gpf upload -f 2_dataset_archive/upload_descriptor.json\n</code></pre> <p>Le programme doit vous indiquer que le transfert est en cours, puis qu'il attend la fin des v\u00e9rifications c\u00f4t\u00e9 API avant de conclure que tout est bon.</p>"},{"location":"tutoriel_1_archive/#workflow","title":"Workflow","text":"<p>Une fois les donn\u00e9es livr\u00e9es, il faut traiter les donn\u00e9es avant de les publier (c'est \u00e0 dire configurer un g\u00e9o-service et le rendre accessible).</p> <p>Ces \u00e9tapes sont d\u00e9crites gr\u00e2ce \u00e0 un workflow.</p> <p>Vous pouvez r\u00e9cup\u00e9rer un workflow d'exemple gr\u00e2ce \u00e0 la commande suivante :</p> <pre><code>python -m sdk_entrepot_gpf workflow -n generic_archive.jsonc\n</code></pre> <p>Ouvrez le fichier. Vous trouverez plus de d\u00e9tails dans la documentation sur les workflows, mais vous pouvez d\u00e8s \u00e0 pr\u00e9sent voir que le workflow est compos\u00e9 de 3 \u00e9tapes. Il faudra lancer une commande pour chacune d'elles.</p> <pre><code>%% doc mermaid ici https://mermaid-js.github.io/mermaid/#/flowchart?id=flowcharts-basic-syntax\nflowchart TD\n    A(\"upload\") --&gt;|int\u00e9gration-archive-livr\u00e9e| B(\"dataset\")\n    B --&gt;|configuration-archive-livr\u00e9e| C(configuration)\n    C --&gt;|publication-archive-livr\u00e9e| D(publication)</code></pre>"},{"location":"tutoriel_1_archive/#traitement-et-publication","title":"Traitement et publication","text":"<p>Le workflow \u00ab generic_archive \u00bb permet de passer de la livraison \u00e0 une lien permettant de t\u00e9l\u00e9charger la donn\u00e9e. Il comporte 3 \u00e9tapes :</p> <ul> <li><code>int\u00e9gration-archive-livr\u00e9e</code> : transformation des donn\u00e9es livr\u00e9es temporaires en une Donn\u00e9e Stock\u00e9e p\u00e9renne ;</li> <li><code>configuration-archive-livr\u00e9e</code> : configuration d'un service de t\u00e9l\u00e9chargement permettant de t\u00e9l\u00e9charger les donn\u00e9es ;</li> <li><code>publication-archive-livr\u00e9e</code> : publication du service de t\u00e9l\u00e9chargement.</li> </ul> <p>Lancez les 3 commandes suivantes pour ex\u00e9cuter les 3 \u00e9tapes :</p> <pre><code>python -m sdk_entrepot_gpf workflow -f generic_archive.jsonc -s int\u00e9gration-archive-livr\u00e9e\npython -m sdk_entrepot_gpf workflow -f generic_archive.jsonc -s configuration-archive-livr\u00e9e\npython -m sdk_entrepot_gpf workflow -f generic_archive.jsonc -s publication-archive-livr\u00e9e\n</code></pre> <p>La premi\u00e8re commande ne doit pas \u00eatre instantan\u00e9e : un traitement est effectu\u00e9 et les logs doivent vous \u00eatre remont\u00e9s.</p> <p>Les deux \u00e9tapes suivantes sont instantan\u00e9es. A la fin, vous devez voir s'afficher un lien.</p> <p>Exemple :</p> <pre><code>INFO - Offre cr\u00e9\u00e9e : Offering(id=62c708e72246434ac40ee3ad)\n   - download|https://geoservices-geotuileur.ccs-ign-plage.ccs.cegedim.cloud/download/plage/archive\n</code></pre> <p>Suivez le lien indiqu\u00e9 pour retrouver la liste des fichiers que vous avez t\u00e9l\u00e9vers\u00e9s et qui sont maintenant disponibles en t\u00e9l\u00e9chargement.</p> <p>Vous pouvez alors t\u00e9l\u00e9charger le fichier de votre choix en ajoutant son nom \u00e0 la suite du lien. Dans notre cas, \u00e7a serait :</p> <pre><code>https://geoservices-geotuileur.ccs-ign-plage.ccs.cegedim.cloud/download/plage/archive/CANTON.zip\n</code></pre> <p>Pour lister toutes les archives disponibles :</p> <pre><code>curl -X 'GET' https://data.geopf.fr/telechargement/capabilities -H \"Accept: application/json\"\n</code></pre>"},{"location":"tutoriel_1_archive/#resume-des-commandes","title":"R\u00e9sum\u00e9 des commandes","text":"<pre><code># r\u00e9cup\u00e9ration des donn\u00e9es d'exemple\npython -m sdk_entrepot_gpf dataset -n 2_dataset_archive\n# livraison des donn\u00e9es sur la G\u00e9oplateforme\npython -m sdk_entrepot_gpf upload -f 2_dataset_archive/upload_descriptor.json\n# r\u00e9cup\u00e9ration du workflow de traitement et publication d'une archive\npython -m sdk_entrepot_gpf workflow -n generic_archive.jsonc\n# ex\u00e9cution des 3 \u00e9tapes pour le traitement et la publication de l'archive\npython -m sdk_entrepot_gpf workflow -f generic_archive.jsonc -s int\u00e9gration-archive-livr\u00e9e\npython -m sdk_entrepot_gpf workflow -f generic_archive.jsonc -s configuration-archive-livr\u00e9e\npython -m sdk_entrepot_gpf workflow -f generic_archive.jsonc -s publication-archive-livr\u00e9e\n</code></pre>"},{"location":"tutoriel_2_flux_vecteur/","title":"Tutoriel 2 : publier un flux vecteur","text":"<p>La G\u00e9oplateforme permet d'h\u00e9berger des flux vecteur pour permettre \u00e0 vos utilisateurs de les t\u00e9l\u00e9charger/utiliser.</p> <p>Pour cela, vous devez t\u00e9l\u00e9verser des donn\u00e9es \u00ab vecteur \u00bb sur lesquelles la G\u00e9oplateforme va effectuer des traitements.</p> <p>Pour commencer, nous vous conseillons de suivre ce tutoriel qui vous permet de manipuler des donn\u00e9es d\u00e9j\u00e0 existantes. Vous pouvez ensuite adapter chaque \u00e9tape pour livrer vos donn\u00e9es.</p>"},{"location":"tutoriel_2_flux_vecteur/#definition-de-la-configuration","title":"D\u00e9finition de la configuration","text":"<p>Suivez la page configuration pour d\u00e9finir le fichier de configuration.</p>"},{"location":"tutoriel_2_flux_vecteur/#recuperation-du-jeu-de-donnees","title":"R\u00e9cup\u00e9ration du jeu de donn\u00e9es","text":"<p>Le jeu de donn\u00e9es \u00ab 1_dataset_vector \u00bb contient des donn\u00e9es vecteur \u00e0 t\u00e9l\u00e9verser.</p> <p>R\u00e9cup\u00e9rez les donn\u00e9es en lan\u00e7ant la commande :</p> <pre><code>python -m sdk_entrepot_gpf dataset -n 1_dataset_vector\n</code></pre> <p>Observez la structure des donn\u00e9es :</p> <pre><code>1_dataset_vector\n\u251c\u2500\u2500 CANTON\n\u2502   \u251c\u2500\u2500 CANTON.cpg\n\u2502   \u251c\u2500\u2500 CANTON.dbf\n\u2502   \u251c\u2500\u2500 CANTON.prj\n\u2502   \u251c\u2500\u2500 CANTON.shp\n\u2502   \u2514\u2500\u2500 CANTON.shx\n\u251c\u2500\u2500 CANTON.md5\n\u251c\u2500\u2500 CANTON_style.sld\n\u2514\u2500\u2500 upload_descriptor.json\n</code></pre> <p>Les donn\u00e9es que la G\u00e9oplateforme va traiter sont situ\u00e9es dans le dossier <code>test</code>. Le fichier <code>test.md5</code> permettra de valider les donn\u00e9es t\u00e9l\u00e9vers\u00e9es c\u00f4t\u00e9 G\u00e9oplateforme.</p> <p>Enfin, le fichier <code>upload_descriptor.jsonc</code> permet de d\u00e9crire la livraison \u00e0 effectuer.</p>"},{"location":"tutoriel_2_flux_vecteur/#fichier-descripteur-de-livraison","title":"Fichier descripteur de livraison","text":"<p>Ouvrez le fichier <code>upload_descriptor.jsonc</code> pour avoir plus de d\u00e9tails.</p> <p>Il est compos\u00e9 d'une liste de <code>datasets</code> repr\u00e9sentant chacun une livraison distincte.</p> <p>Chaque dataset contient :</p> <ul> <li>la liste des dossiers \u00e0 t\u00e9l\u00e9verser ;</li> <li>les informations de la livraison \u00e0 cr\u00e9er (nom, description, srs et type) ;</li> <li>les commentaires et les tags \u00e0 ajouter \u00e0 la livraison.</li> </ul>"},{"location":"tutoriel_2_flux_vecteur/#livraison-des-donnees","title":"Livraison des donn\u00e9es","text":"<p>Livrer les donn\u00e9es en indiquant le chemin du fichier descripteur au programme :</p> <pre><code>python -m sdk_entrepot_gpf upload -f 1_dataset_vector/upload_descriptor.json\n</code></pre> <p>Le programme doit vous indiquer que le transfert est en cours, puis qu'il attend la fin des v\u00e9rifications c\u00f4t\u00e9 API avant de conclure que tout est bon.</p>"},{"location":"tutoriel_2_flux_vecteur/#workflow","title":"Workflow","text":"<p>Une fois les donn\u00e9es livr\u00e9es, il faut traiter les donn\u00e9es avant de les publier (c'est \u00e0 dire effectuer un (ou plusieurs) g\u00e9o-traitement(s), puis configurer un g\u00e9o-service et le rendre accessible).</p> <p>Ces \u00e9tapes sont d\u00e9crites gr\u00e2ce \u00e0 un workflow.</p> <p>Vous pouvez r\u00e9cup\u00e9rer un workflow d'exemple gr\u00e2ce \u00e0 la commande suivante :</p> <pre><code>python -m sdk_entrepot_gpf workflow -n generic_vecteur.jsonc\n</code></pre> <p>Ouvrez le fichier. Vous trouverez plus de d\u00e9tails dans la documentation sur les workflows, mais vous pouvez d\u00e8s \u00e0 pr\u00e9sent voir que le workflow est compos\u00e9 de 4 \u00e9tapes. Il faudra lancer une commande pour chacune d'elles.</p> <pre><code>---\ntitle: Workflow de publication de donn\u00e9es vecteur en WFS\n---\n%% doc mermaid ici https://mermaid-js.github.io/mermaid/#/flowchart?id=flowcharts-basic-syntax\nflowchart TD\n    A(\"upload\") --&gt;|mise-en-base| B(\"donn\u00e9e stock\u00e9e : BDD\")\n    B --&gt;|configuration-wfs-bdd| C1(\"configuration WFS sur BDD\")\n    C1 --&gt;|publication-wfs-bdd| D1(\"offre WFS sur BDD\")\n    B --&gt;|configuration-wms-bdd| C2(\"configuration WMS sur BDD\")\n    C2 --&gt;|publication-wms-bdd| D2(\"offre WMS sur BDD\")\n    B --&gt;|cr\u00e9ation-pyramide| C3(donn\u00e9e stock\u00e9e : pyramide)\n    C3 --&gt;|configuration-tms-py| D3(configuration TMS sur pyramide)\n    D3 --&gt;|publication-tms-py| E3(offre  TMS sur pyramide)</code></pre>"},{"location":"tutoriel_2_flux_vecteur/#fichier-statique","title":"fichier statique","text":"<p>Pour publier les donn\u00e9es en WMS il faut appliquer un style aux donn\u00e9es. La partie versement d'un style ne peut pas encore se faire avec <code>sdk_entrepot_gpf</code>. Il faut donc ajout\u00e9 le fichier de style \u00e0 la mains avec swagger, Insomnia ou en ligne de commande. Tutoriel ICI</p> <p>Un fichier statique (CANTON_style.sld) pour le tuto est disponible dans le jeu de donn\u00e9es test. Pour l'utiliser avec le workflow sans modification il faut le livrer avec <code>\"name\": \"style_canton\"</code>. Si vous modifiez le nom du fichier de style il faut modifier dans le workflow la partie \"configuration-wms\".</p>"},{"location":"tutoriel_2_flux_vecteur/#traitement-et-publication","title":"Traitement et publication","text":"<p>Le workflow \u00ab generic_vecteur \u00bb permet de passer de la livraison \u00e0 3 flux servant la donn\u00e9e. Il comporte 8 \u00e9tapes :</p> <ul> <li><code>mise-en-base</code> : mise en base des donn\u00e9es vecteur livr\u00e9es ;</li> <li>Publication WFS depuis la base :</li> <li><code>configuration-wfs-bdd</code> : configuration d'un service de flux WFS permettant d'utiliser les donn\u00e9es vecteur ;</li> <li><code>publication-wfs-bdd</code> : publication du service de flux WFS sur le bon endpoint.</li> <li>Publication WMS depuis la base :</li> <li><code>configuration-wms-bdd</code> : configuration d'un service de flux WMS permettant d'utiliser les donn\u00e9es vecteur ;</li> <li><code>publication-wms-bdd</code> : publication du service de flux WMS sur le bon endpoint.</li> <li>Mise en pyramide et publication :</li> <li><code>cr\u00e9ation-pyramide</code> : cr\u00e9ation de la pyramide de vecteur pour l'utilisation dans un flux ;</li> <li><code>configuration-tms-py</code> : configuration d'un service de flux TMS permettant d'utiliser les donn\u00e9es vecteur ;</li> <li><code>publication-tms-py</code> : publication du service de flux TMS sur le bon endpoint.</li> </ul> <p>Les \u00e9tapes \"configuration + publication\" des flux WMS et WFS sont ind\u00e9pendantes.</p> <p>Lancez les 8 commandes suivantes pour ex\u00e9cuter les 8 \u00e9tapes :</p> <pre><code>python -m sdk_entrepot_gpf workflow -f generic_vecteur.jsonc -s mise-en-base\n# WFS depuis BDD\npython -m sdk_entrepot_gpf workflow -f generic_vecteur.jsonc -s configuration-wfs-bdd\npython -m sdk_entrepot_gpf workflow -f generic_vecteur.jsonc -s publication-wfs-bdd\n# WMS depuis BDD\npython -m sdk_entrepot_gpf workflow -f generic_vecteur.jsonc -s configuration-wms-bdd\npython -m sdk_entrepot_gpf workflow -f generic_vecteur.jsonc -s publication-wms-bdd\n# cr\u00e9ation pyramide et WFS\npython -m sdk_entrepot_gpf workflow -f generic_vecteur.jsonc -s cr\u00e9ation-pyramide\npython -m sdk_entrepot_gpf workflow -f generic_vecteur.jsonc -s configuration-tms-py\npython -m sdk_entrepot_gpf workflow -f generic_vecteur.jsonc -s publication-tms-py\n</code></pre> <p>Les commandes de mise en base et de cr\u00e9ation de pyramides ne sont pas instantan\u00e9es : un traitement est effectu\u00e9 et les logs doivent vous \u00eatre remont\u00e9s.</p> <p>Les \u00e9tapes de configuration et publication sont instantan\u00e9es. A la fin de la publication, vous devez voir s'afficher un lien.</p> <p>Exemple :</p> <pre><code>INFO - Offre cr\u00e9\u00e9e : Offering(id=62c708e72246434ac40ee3ad)\n   - https://data.geopf.fr/wms-v/ows?service=wms&amp;version=1.3.0&amp;request=DescribeLayer&amp;layers=ludi_bdd__Flux_vecteur_WMS\n</code></pre>"},{"location":"tutoriel_3_flux_raster/","title":"Tutoriel 3 : publier un flux raster","text":"<p>La G\u00e9oplateforme permet d'h\u00e9berger des flux raster pour permettre \u00e0 vos utilisateur de les t\u00e9l\u00e9charger/utiliser.</p> <p>Pour cela, vous devez t\u00e9l\u00e9verser des donn\u00e9es \u00ab raster \u00bb sur lesquelles la G\u00e9oplateforme va effectuer des traitements.</p> <p>Pour commencer, nous vous conseillons de suivre ce tutoriel qui vous permet de manipuler des donn\u00e9es d\u00e9j\u00e0 existantes. Vous pouvez ensuite adapter chaque \u00e9tape pour livrer vos donn\u00e9es.</p>"},{"location":"tutoriel_3_flux_raster/#definition-de-la-configuration","title":"D\u00e9finition de la configuration","text":"<p>Suivez la page configuration pour d\u00e9finir le fichier de configuration.</p>"},{"location":"tutoriel_3_flux_raster/#recuperation-du-jeu-de-donnees","title":"R\u00e9cup\u00e9ration du jeu de donn\u00e9es","text":"<p>Le jeu de donn\u00e9es \u00ab 1_dataset_raster \u00bb contient des donn\u00e9es raster \u00e0 t\u00e9l\u00e9verser.</p> <p>R\u00e9cup\u00e9rez les donn\u00e9es en lan\u00e7ant la commande :</p> <pre><code>python -m sdk_entrepot_gpf dataset -n 4_dataset_raster_gpf\n</code></pre> <p>Observez la structure du fichier :</p> <pre><code>4_dataset_raster_gpf/\n\u251c\u2500\u2500 test\n\u2502   \u251c\u2500\u2500 977-2018-0510-1979-U20N-0M50-E100.jp2\n\u2502   \u251c\u2500\u2500 977-2018-0510-1979-U20N-0M50-E100.tab\n\u2502   \u251c\u2500\u2500 977-2018-0510-1980-U20N-0M50-E100.jp2\n\u2502   \u251c\u2500\u2500 977-2018-0510-1980-U20N-0M50-E100.tab\n\u2502   \u251c\u2500\u2500 977-2018-0510-1981-U20N-0M50-E100.jp2\n\u2502   \u251c\u2500\u2500 977-2018-0510-1981-U20N-0M50-E100.tab\n\u2502   \u251c\u2500\u2500 977-2018-0510-1982-U20N-0M50-E100.jp2\n\u2502   \u2514\u2500\u2500 977-2018-0510-1982-U20N-0M50-E100.tab\n\u251c\u2500\u2500 test.md5\n\u2514\u2500\u2500 upload_descriptor.jsonc\n</code></pre> <p>Les donn\u00e9es que la G\u00e9oplateforme va traiter sont situ\u00e9es dans le dossier <code>test</code>. Le fichier <code>test.md5</code> permettra de valider les donn\u00e9es t\u00e9l\u00e9vers\u00e9es c\u00f4t\u00e9 G\u00e9oplateforme.</p> <p>Enfin, le fichier <code>upload_descriptor.json</code> permet de d\u00e9crire la livraison \u00e0 effectuer.</p>"},{"location":"tutoriel_3_flux_raster/#fichier-descripteur-de-livraison","title":"Fichier descripteur de livraison","text":"<p>Ouvrez le fichier <code>upload_descriptor.json</code> pour avoir plus de d\u00e9tails.</p> <p>Il est compos\u00e9 d'une liste de <code>datasets</code> repr\u00e9sentant chacun une livraison distincte.</p> <p>Chaque dataset contient :</p> <ul> <li>la liste des dossiers \u00e0 t\u00e9l\u00e9verser ;</li> <li>les informations de la livraison \u00e0 cr\u00e9er (nom, description, srs et type) ;</li> <li>les commentaires et les tags \u00e0 ajouter \u00e0 la livraison.</li> </ul>"},{"location":"tutoriel_3_flux_raster/#livraison-des-donnees","title":"Livraison des donn\u00e9es","text":"<p>Livrez les donn\u00e9es en indiquant le chemin du fichier descripteur au programme :</p> <pre><code>python -m sdk_entrepot_gpf upload -f 4_dataset_raster_gpf/upload_descriptor.jsonc\n</code></pre> <p>Le programme doit vous indiquer que le transfert est en cours, puis qu'il attend la fin des v\u00e9rification c\u00f4t\u00e9 API avant de conclure que tout est bon. (Memo : cette partie est assez longue du \u00e0 des probl\u00e8mes de performance c\u00f4t\u00e9 back. Le probl\u00e8me a d\u00e9j\u00e0 \u00e9t\u00e9 remont\u00e9.)</p>"},{"location":"tutoriel_3_flux_raster/#workflow","title":"Workflow","text":"<p>Une fois les donn\u00e9es livr\u00e9es, il faut traiter les donn\u00e9es avant de les publier (c'est \u00e0 dire effectuer un (ou plusieurs) g\u00e9o-traitement(s), puis configurer un g\u00e9o-service et le rendre accessible).</p> <p>Ces \u00e9tapes sont d\u00e9crites gr\u00e2ces \u00e0 un workflow.</p> <p>Vous pouvez r\u00e9cup\u00e9rer un workflow d'exemple gr\u00e2ce \u00e0 la commande suivante :</p> <pre><code>python -m sdk_entrepot_gpf workflow -n generic_raster.jsonc\n</code></pre> <p>Ouvrez le fichier. Vous trouverez plus de d\u00e9tails dans la documentation sur les workflows, mais vous pouvez d\u00e8s \u00e0 pr\u00e9sent voir que le workflow est compos\u00e9 de 4 \u00e9tapes. Il faudra lancer une commande pour chacune d'elles.</p> <pre><code>---\ntitle: Workflow de publication de donn\u00e9es Raster en WMS et WMST\n---\n%% doc mermaid ici https://mermaid-js.github.io/mermaid/#/flowchart?id=flowcharts-basic-syntax\nflowchart TD\n    A(\"upload\") --&gt;|pyramide| B(\"pyramide raster\")\n    B --&gt;|configuration-WMST| C(\"configuration WMST\")\n    C --&gt;|publication-WMST| D(\"offre WMST\")\n    B --&gt;|configuration-WMS| E(\"configuration WMS\")\n    E --&gt;|publication-WMS| F(\"offre WMS\")</code></pre>"},{"location":"tutoriel_3_flux_raster/#traitement-et-publication","title":"Traitement et publication","text":"<p>Le workflow \u00ab generic_raster \u00bb permet de passer de la livraison \u00e0 un flux WMS servant la donn\u00e9e. Il comporte les \u00e9tapes suivantes:</p> <ul> <li><code>pyramide</code> : cr\u00e9ation d'une pyramide avec les donn\u00e9es t\u00e9l\u00e9vers\u00e9es</li> <li><code>configuration-WMST</code> : configuration d'un service de flux WMST \u00e0 partir de la pyramide ;</li> <li><code>publication-WMST</code> : publication du service de flux WMST sur le bon endpoint.</li> <li><code>configuration-WMS</code> : configuration d'un service de flux WMS \u00e0 partir de la pyramide ;</li> <li><code>publication-WMS</code> : publication du service de flux WMS sur le bon endpoint.</li> </ul> <p>La partie WMST et WMS sont ind\u00e9pendantes : elles peuvent \u00eatre trait\u00e9es en parall\u00e8le ou dans n'importe quel sens.</p> <p>Les commandes \u00e0 lancer sont les suivantes :</p> <pre><code># partie cr\u00e9ation de la pyramide\npython -m sdk_entrepot_gpf workflow -f generic_raster.jsonc -s pyramide\n# partie publication WMST\npython -m sdk_entrepot_gpf workflow -f generic_raster.jsonc -s configuration-WMST\npython -m sdk_entrepot_gpf workflow -f generic_raster.jsonc -s publication-WMST\n# partie publication WMS\npython -m sdk_entrepot_gpf workflow -f generic_raster.jsonc -s configuration-WMS\npython -m sdk_entrepot_gpf workflow -f generic_raster.jsonc -s publication-WMS\n</code></pre> <p>La premi\u00e8re commande ne doit pas \u00eatre instantan\u00e9e : un traitement est effectu\u00e9 et les logs doivent vous \u00eatre remont\u00e9s.</p> <p>Le deux traitements suivants sont instantan\u00e9s. A la fin, vous devez voir s'afficher un lien.</p>"},{"location":"upload_descriptor/","title":"Fichier descripteur de livraison","text":"<p>Le fichier descripteur de livraison est un fichier au format JSON permettant de d\u00e9crire les donn\u00e9es \u00e0 livrer et les livraisons \u00e0 cr\u00e9er.</p>"},{"location":"upload_descriptor/#definition","title":"D\u00e9finition","text":"<p>Le fichier doit contenir une liste de <code>datasets</code>. Chaque dataset repr\u00e9sente une livraison et doit contenir les informations suivantes :</p> <ul> <li>la liste des dossiers \u00e0 t\u00e9l\u00e9verser (attribut <code>data_dirs</code>) : les chemins relatifs vers les dossiers \u00e0 t\u00e9l\u00e9verser ;</li> <li>les informations de la livraison \u00e0 cr\u00e9er :</li> <li>Nom (attribut <code>name</code>) : nom de la livraison (afin que vous puissiez l'identifier, choix libre) ;</li> <li>Description (attribut <code>description</code>) : description de la livraison (choix libre) ;</li> <li>Projection (attribut <code>srs</code>) : le code EPSG des donn\u00e9es (ex : <code>EPSG:2154</code>) ;</li> <li>Type (attribut <code>type</code>) : le type des donn\u00e9es livr\u00e9es. Le type de la livraison conditionne les types de fichiers de donn\u00e9es qui seront attendus et les traitements qui pourront prendre en entr\u00e9e cette livraison. Rien n'interdit de d\u00e9poser des donn\u00e9es avec des extensions incoh\u00e9rentes avec le type de livraison, mais elles ne seront potentiellement pas prises en compte par les v\u00e9rifications et les traitements.<ul> <li><code>RASTER</code> -&gt; PNG, TIFF, JPEG, JPEG2000 ;</li> <li><code>VECTOR</code> -&gt; SHP, CSV, GeoJSON ;</li> <li><code>ARCHIVE</code> -&gt; Tout type de fichiers ;</li> </ul> </li> <li>les commentaires et les tags \u00e0 ajouter \u00e0 la livraison :</li> <li><code>comments</code> : liste des commentaires \u00e0 ajouter ;</li> <li><code>tags</code> : liste des tags \u00e0 ajouter (clef-valeur).</li> </ul>"},{"location":"upload_descriptor/#exemple-avec-un-dataset","title":"Exemple avec un dataset","text":"<p>Nous souhaitons livrer les donn\u00e9es suivantes :</p> <pre><code>CANTON\n\u251c\u2500\u2500 CANTON.cpg\n\u251c\u2500\u2500 CANTON.dbf\n\u251c\u2500\u2500 CANTON.prj\n\u251c\u2500\u2500 CANTON.shp\n\u2514\u2500\u2500 CANTON.shx\n</code></pre> <p>Voici le fichier descripteur de livraison que l'on pourrait utiliser :</p> <pre><code>{\n    \"datasets\": [\n        {\n            \"data_dirs\": [\n                \"CANTON\"\n            ],\n            \"upload_infos\": {\n                \"description\": \"Jeu d'exemple vecteur\",\n                \"name\": \"EXAMPLE_DATASET_VECTOR\",\n                \"srs\": \"EPSG:2154\",\n                \"type\": \"VECTOR\"\n            },\n            \"comments\": [\n                \"Ceci est un jeu de donn\u00e9es d'exemple contenant des donn\u00e9es vecteur\"\n            ],\n            \"tags\": {\n                \"tuto\": \"oui\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"upload_descriptor/#exemple-avec-plusieurs-dataset","title":"Exemple avec plusieurs dataset","text":"<p>Nous souhaitons livrer les donn\u00e9es suivantes :</p> <pre><code>\u251c\u2500\u2500 TABLE\n\u2502   \u251c\u2500\u2500 tableau_assemblage.cpg\n\u2502   \u251c\u2500\u2500 tableau_assemblage.dbf\n\u2502   \u251c\u2500\u2500 tableau_assemblage.prj\n\u2502   \u251c\u2500\u2500 tableau_assemblage.shp\n\u2502   \u2514\u2500\u2500 tableau_assemblage.shx\n\u2514\u2500\u2500 IMAGES\n    \u251c\u2500\u2500 dalle_01_01.tif\n    \u251c\u2500\u2500 dalle_01_02.tif\n    \u251c\u2500\u2500 dalle_02_01.tif\n    \u2514\u2500\u2500 dalle_02_02.tif\n</code></pre> <p>Nous avons deux types de donn\u00e9es diff\u00e9rents (vecteur et raster). Nous devons donc cr\u00e9er deux livraisons distinctes.</p> <p>Voici le fichier descripteur de livraison que l'on pourrait utiliser :</p> <pre><code>{\n    \"datasets\": [\n        {\n            \"data_dirs\": [\n                \"IMAGES\"\n            ],\n            \"upload_infos\": {\n                \"description\": \"Jeu d'exemple raster\",\n                \"name\": \"EXAMPLE_DATASET_RASTER\",\n                \"srs\": \"EPSG:2154\",\n                \"type\": \"RASTER\"\n            },\n            \"comments\": [\n                \"Ceci est un jeu de donn\u00e9es d'exemple contenant des donn\u00e9es raster\"\n            ],\n            \"tags\": {\n                \"tuto\": \"oui\"\n            }\n        },\n        {\n            \"data_dirs\": [\n                \"TABLE\"\n            ],\n            \"upload_infos\": {\n                \"description\": \"Jeu d'exemple vecteur\",\n                \"name\": \"EXAMPLE_DATASET_VECTOR\",\n                \"srs\": \"EPSG:2154\",\n                \"type\": \"VECTOR\"\n            },\n            \"comments\": [\n                \"Ceci est un jeu de donn\u00e9es d'exemple contenant des donn\u00e9es vector\"\n            ],\n            \"tags\": {\n                \"tuto\": \"oui\"\n            }\n        }\n    ]\n}\n</code></pre>"},{"location":"upload_descriptor/#envoie-des-donnees","title":"Envoie des donn\u00e9es","text":"<p>Une fois le fichier descripteur de livraison cr\u00e9\u00e9, vous pouvez envoyer les donn\u00e9es sur la G\u00e9oplateforme.</p>"},{"location":"workflow/","title":"Workflows","text":"<p>Le fichier workflow est un fichier au format JSON permettant de d\u00e9crire les actions \u00e0 r\u00e9aliser sur des donn\u00e9es stock\u00e9es o\u00f9 livr\u00e9es.</p> <p>Certaines valeurs du workflow peuvent \u00eatre compl\u00e9t\u00e9es avec un syst\u00e8me de r\u00e9solution permettant notamment d'utiliser le nom des entit\u00e9s pour trouver leur ID. Pour plus d'informations consulter la page d\u00e9di\u00e9e au r\u00e9solveurs.</p> <p>Les actions sont les suivantes :</p> <ul> <li>lancer un traitement (c\u00e0d cr\u00e9er une processing ex\u00e9cution) ;</li> <li>configurer un g\u00e9oservice (c\u00e0d cr\u00e9er une configuration) ;</li> <li>publier un g\u00e9oservice (c\u00e0d cr\u00e9er une offering) ;</li> <li>supprimer une entit\u00e9 de type upload, stored_data, configuration ou offering ;</li> <li>modifier une entit\u00e9 de type upload, stored_data, configuration ou offering ;</li> <li>copier une configuration (cr\u00e9ation d'une nouvelle configuration en reprenant les param\u00e8tres non pr\u00e9cis\u00e9s de la pr\u00e9c\u00e9dente) ;</li> <li>synchroniser une offre (mettre \u00e0 jour avec la donn\u00e9e stock\u00e9e et une offering).</li> </ul>"},{"location":"workflow/#definition","title":"D\u00e9finition","text":"<p>Le fichier doit contenir un dictionnaire <code>workflow</code>. Qui contient deux clefs :</p> <ul> <li><code>datastore</code>: (optionnel) uuid du datastore \u00e0 utiliser pour le workflow.</li> <li><code>step</code>: (obligatoire) dictionnaire des \u00e9tapes \u00e0 lancer ;</li> <li>la clef sera le nom de l'\u00e9tape qui servira \u00e0 la lancer ;</li> <li>sa valeur est un dictionnaire d\u00e9criant l'\u00e9tape :<ul> <li><code>actions</code> : (obligatoire) listes des actions \u00e0 lancer, la liste sera ex\u00e9cut\u00e9e dans l'ordre. Le dictionnaire d\u00e9crivant l'action d\u00e9pend du type d'action \u00e0 lancer, la clef <code>type</code> permet de d\u00e9finir le type d'action \u00e0 effectuer (description plus bas) ;</li> <li><code>parents</code> : (obligatoire) liste des \u00e9tapes devant pr\u00e9c\u00e9der celle-ci. Pour une actions sans d\u00e9pendances la liste doit \u00eatre vide.</li> </ul> </li> </ul> <p>ce qui donne :</p> <pre><code>{\n  \"workflow\": {\n    \"steps\": {\n      \"etape 1\": {\n        \"actions\": [ ... ],\n        \"parents\": []\n      },\n      \"etape 2\": {\n        \"actions\": [ ... ],\n        \"parents\": []\n      }\n    }\n  }\n}\n</code></pre> <p>Ce workflow permet de lanc\u00e9 2 \u00e9tapes <code>etape 1</code> et <code>etape 2</code>.</p> <p>Les actions possibles sont les suivantes :</p> <ul> <li>ex\u00e9cuter un traitement</li> <li>configurer un flux</li> <li>publier un flux</li> <li>supprimer une entit\u00e9</li> <li>modifier une entit\u00e9</li> <li>copier une configuration</li> <li>synchroniser une publication</li> </ul>"},{"location":"workflow/#executer-un-traitement","title":"Ex\u00e9cuter un traitement","text":"<ul> <li><code>type</code>: <code>processing-execution</code></li> <li><code>body_parameters</code>: dictionnaire param\u00e9trant l\u2019ex\u00e9cution :</li> <li><code>processing</code>: id du traitement \u00e0 utiliser</li> <li><code>inputs</code> : dictionnaire d\u00e9crivant la/les donn\u00e9es d'entr\u00e9e (se r\u00e9f\u00e9rer \u00e0 la documentation du traitement)</li> <li><code>output</code>: dictionnaire d\u00e9crivant la sortie du traitement (se r\u00e9f\u00e9rer \u00e0 la documentation du traitement)</li> <li><code>parameters</code>: dictionnaire des param\u00e8tres \u00e0 utiliser pour le traitement (se r\u00e9f\u00e9rer \u00e0 la documentation du traitement)</li> <li><code>comments</code> : liste des commentaires \u00e0 ajouter \u00e0 la donn\u00e9e en sortie (si mise \u00e0 jour : les commentaires d\u00e9j\u00e0 pr\u00e9sents ne sont pas ajout\u00e9s).</li> <li><code>tags</code> : tags \u00e0 ajouter \u00e0 la donn\u00e9e en sortie (clef-valeur) (si mise \u00e0 jour : les tags d\u00e9j\u00e0 pr\u00e9sents ne sont pas ajout\u00e9s).</li> </ul> <p>La liste des traitement est disponible ici : /datastores/{datastore}/processings .</p> <p>Le d\u00e9tail d'un traitement est disponible ici : /datastores/{datastore}/processings/{processing}</p>"},{"location":"workflow/#configurer-un-flux","title":"Configurer un flux","text":"<ul> <li><code>type</code>*: <code>configuration</code></li> <li><code>body_parameters</code>*: dictionnaire param\u00e9trant la configuration :</li> <li><code>type</code>*: type du flux (WMS-VECTOR, WFS, WMTS-TMS, WMS-RASTER, DOWNLOAD, ITINERARY-ISOCURVE, ALTIMETRY, SEARCH, VECTOR-TMS)</li> <li><code>name</code>*: Nom de la configuration</li> <li><code>layer_name</code>*: Nom technique de la ressource. Ce nom doit \u00eatre unique sur la plateforme pour un type de configuration donn\u00e9. Uniquement des caract\u00e8res alphanum\u00e9riques, tiret, tiret bas, point (pattern: ^[A-Za-z0-9_-.]+$)</li> <li><code>type_infos</code>* : description des donn\u00e9es \u00e0 utiliser (d\u00e9pend du flux)</li> <li><code>attribution</code>: (optionnel) M\u00e9tadonn\u00e9es li\u00e9es au propri\u00e9taire de la configuration<ul> <li><code>title</code>*: Nom du propri\u00e9taire</li> <li><code>url</code>*: URL vers le site du propri\u00e9taire</li> <li><code>logo</code>: Dictionnaire d\u00e9crivant le logo du propri\u00e9taire</li> <li><code>format</code>*: le format (mime-type) du logo (pattern: <code>\\w+/[-+.\\w]+</code>, example: <code>image/jpeg</code>)</li> <li><code>url</code>*: l'URL d'acc\u00e8s au logo</li> <li><code>width</code>*: la largeur du logo</li> <li><code>height</code>*: la hauteur du logo</li> </ul> </li> <li><code>comments</code> : liste des commentaires \u00e0 ajouter \u00e0 la configuration.</li> <li><code>tags</code> : tags \u00e0 ajouter \u00e0 la configuration (clef-valeur).</li> </ul> <p>type_infos selon le flux :</p>"},{"location":"workflow/#wfs","title":"WFS","text":"<ul> <li><code>bbox</code>: dictionnaire Bounding box :</li> <li><code>west</code>*</li> <li><code>south</code>*</li> <li><code>east</code>*</li> <li><code>north</code>*</li> <li><code>used_data</code>*: liste de dictionnaires :</li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> <li><code>relations</code>*: liste de dictionnaire d\u00e9crivant la relation :<ul> <li><code>native_name</code>*: Nom de la table</li> <li><code>public_name</code>: Nom public de la table</li> <li><code>title</code>*: Titre</li> <li><code>keywords</code>: Liste de mots cl\u00e9s (doivent \u00eatre uniques)</li> <li><code>abstract</code>*: Description</li> </ul> </li> </ul>"},{"location":"workflow/#wmts-tms","title":"WMTS-TMS","text":"<ul> <li><code>bbox</code>: dictionnaire Bounding box :</li> <li><code>west</code>*</li> <li><code>south</code>*</li> <li><code>east</code>*</li> <li><code>north</code>*</li> <li><code>title</code>*: titre</li> <li><code>keywords</code>: Liste de mots cl\u00e9s (doivent \u00eatre uniques)</li> <li><code>styles</code>: lists des identifiants des fichiers statiques de style Rok4</li> <li><code>used_data</code>*: liste de dictionnaire :</li> <li><code>bottom_level</code>*:niveau minimum</li> <li><code>top_level</code>*: niveau maximum</li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> <li><code>abstract</code>*: Description</li> <li><code>getfeatureinfo</code>: Dictionnaire d\u00e9crivant la ressource cible du GetFeatureInfo. Une des structure suivante :</li> <li>avec la stored data, dictionnaire :<ul> <li><code>stored_data</code>*: Indique si on va utiliser directement la donn\u00e9e stock\u00e9e</li> </ul> </li> <li>avec une url, dictionnaire :<ul> <li><code>server_url</code>* url utiliser pour le GetFeatureInfo</li> </ul> </li> </ul>"},{"location":"workflow/#vector-tms","title":"VECTOR-TMS","text":"<ul> <li><code>used_data</code>*: liste de dictionnaires :</li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> <li><code>relations</code>*: liste de dictionnaire d\u00e9crivant la relation :<ul> <li><code>native_name</code>*: Nom de la table</li> <li><code>public_name</code>: Nom public de la table</li> <li><code>abstract</code>*: Description</li> </ul> </li> </ul>"},{"location":"workflow/#wms-vector","title":"WMS-VECTOR","text":"<ul> <li><code>bbox</code>: dictionnaire Bounding box :</li> <li><code>west</code>*</li> <li><code>south</code>*</li> <li><code>east</code>*</li> <li><code>north</code>*</li> <li><code>title</code>*: titre</li> <li><code>keywords</code>: Liste de mots cl\u00e9s (doivent \u00eatre uniques)</li> <li><code>abstract</code>*: Description</li> <li><code>used_data</code>*: liste de dictionnaire :</li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> <li><code>relations</code>*: liste de dictionnaire d\u00e9crivant la relation :<ul> <li><code>name</code>*: Nom de la table</li> <li><code>style</code>*: uuid du statiques de style</li> <li><code>ftl</code>: uuid de ?????</li> </ul> </li> </ul>"},{"location":"workflow/#wms-raster","title":"WMS-RASTER","text":"<ul> <li><code>bbox</code>: dictionnaire Bounding box :</li> <li><code>west</code>*</li> <li><code>south</code>*</li> <li><code>east</code>*</li> <li><code>north</code>*</li> <li><code>title</code>*: titre</li> <li><code>keywords</code>: Liste de mots cl\u00e9s (doivent \u00eatre uniques)</li> <li><code>styles</code>: lists des identifiants des fichiers statiques de style Rok4</li> <li><code>used_data</code>*: liste de dictionnaire :</li> <li><code>bottom_level</code>*:niveau minimum</li> <li><code>top_level</code>*: niveau maximum</li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> <li><code>interpolation</code>: Interpolation utilis\u00e9e pour les conversions de r\u00e9solution : [ NEAREST-NEIGHBOUR, LINEAR, BICUBIC, LANCZOS2, LANCZOS3, LANCZOS4 ] (default: BICUBIC)</li> <li><code>bottom_resolution</code>: R\u00e9solution minimale de la couche</li> <li><code>top_resolution</code>: R\u00e9solution maximale de la couche</li> <li><code>abstract</code>*: Description</li> <li><code>getfeatureinfo</code>: Dictionnaire d\u00e9crivant la ressource cible du GetFeatureInfo. Une des structure suivante :</li> <li>avec la stored data, dictionnaire :<ul> <li><code>stored_data</code>*: Indique si on va utiliser directement la donn\u00e9e stock\u00e9e</li> </ul> </li> <li>avec une url, dictionnaire :<ul> <li><code>server_url</code>* url utiliser pour le GetFeatureInfo</li> </ul> </li> </ul>"},{"location":"workflow/#download","title":"DOWNLOAD","text":"<ul> <li><code>title</code>*: titre</li> <li><code>keywords</code>: Liste de mots cl\u00e9s (doivent \u00eatre uniques)</li> <li><code>abstract</code>*: Description</li> <li><code>used_data</code>*: liste de dictionnaire :</li> <li><code>sub_name</code>*: nom</li> <li><code>title</code>: titre</li> <li><code>keywords</code>: Liste de mots cl\u00e9s (doivent \u00eatre uniques)</li> <li><code>format</code>: format   <code>zone</code>: zone</li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> <li><code>abstract</code>*: Description</li> </ul>"},{"location":"workflow/#altimetry","title":"ALTIMETRY","text":"<ul> <li><code>bbox</code>: dictionnaire Bounding box</li> <li><code>west</code>*</li> <li><code>south</code>*</li> <li><code>east</code>*</li> <li><code>north</code>*</li> <li><code>title</code>*: Titre</li> <li><code>keywords</code>:liste des mots cl\u00e9s</li> <li><code>abstract</code>*: Description</li> <li><code>used_data</code>*: liste de dictionnaire :</li> <li><code>title</code>*: Titre</li> <li><code>bbox</code>: dictionnaire Bounding box<ul> <li><code>west</code>*</li> <li><code>south</code>*</li> <li><code>east</code>*</li> <li><code>north</code>*</li> </ul> </li> <li><code>source</code>*: Informations sur la source des donn\u00e9es. Une des solution suivante<ul> <li>valeur fixe :</li> <li><code>value</code>*: Valeur unique pour la source des donn\u00e9es</li> <li>Mapping entre les valeurs de la pyramide et les valeurs effectivement renvoy\u00e9es</li> <li><code>mapping</code>: dictionnaire :<ul> <li><code>&lt; * &gt;</code>: Mapping entre les valeurs de la pyramide et les valeurs effectivement renvoy\u00e9es</li> </ul> </li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> </ul> </li> <li><code>accuracy</code>* Informations sur la source des donn\u00e9es. Une des solution suivante<ul> <li>valeur fixe:</li> <li><code>value</code>*: Valeur unique pour la source des donn\u00e9es</li> <li>Mapping entre les valeurs de la pyramide et les valeurs effectivement renvoy\u00e9es</li> <li><code>mapping</code>: dictionnaire :<ul> <li><code>&lt; * &gt;</code>: Mapping entre les valeurs de la pyramide et les valeurs effectivement renvoy\u00e9es</li> </ul> </li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> </ul> </li> <li>`stored_data*: Identifiant de la donn\u00e9e stock\u00e9e</li> </ul>"},{"location":"workflow/#search","title":"SEARCH","text":"<ul> <li><code>title</code>*: Titre</li> <li><code>keywords</code>:liste des mots cl\u00e9s</li> <li><code>abstract</code>*: Description</li> <li><code>used_data</code>*: liste de dictionnaire :</li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> </ul>"},{"location":"workflow/#itinerary-isocurve","title":"ITINERARY-ISOCURVE","text":"<ul> <li><code>bbox</code>: dictionnaire Bounding box</li> <li><code>west</code>*</li> <li><code>south</code>*</li> <li><code>east</code>*</li> <li><code>north</code>*</li> <li><code>title</code>*: Titre</li> <li><code>keywords</code>:liste des mots cl\u00e9s</li> <li><code>abstract</code>*: Description</li> <li><code>limits</code>: dictionnaire d\u00e9crivant les limites pour les calculs d'itin\u00e9raire (nombre d'\u00e9tapes et de contraintes) et d'isochrone (dur\u00e9e et distance)</li> <li><code>steps</code>: Nombre d'\u00e9tapes maximal pour le service d'itin\u00e9raire (maximum: 25, minimum: 0, default: 16)</li> <li><code>constraints</code>: Nombre de contraintes maximal pour le service d'itin\u00e9raire (maximum: 6, minimum: 0, default: 3)</li> <li><code>duration</code>: Dur\u00e9e maximale pour le calcul d'isochrone (maximum: 86400, minimum: 0, default: 43200)</li> <li><code>distance</code>: Distance maximale pour le calcul d'isochrone (maximum: 2000000, minimum: 0, default: 1000000)</li> <li><code>constraints</code>: Dictionnaire de d\u00e9finition des contraintes pour la configuration (pas d'information sur le contenu dans la documentation API GPF)</li> <li><code>srss</code>: liste des projections</li> <li><code>used_data</code>* dictionnaire :</li> <li><code>profile</code>*: Profil de graphe \u00e0 utiliser (e.g. voiture ou pi\u00e9ton)</li> <li><code>optimization</code>*: Optimisation de graphe \u00e0 utiliser (e.g. plus court ou plus rapide)</li> <li><code>cost_column</code>: Colonne de co\u00fbt (pour stored data de type GRAPHE-DB)</li> <li><code>reverse_cost_column</code>: Colonne de co\u00fbt inverse (pour stored data de type GRAPHE-DB)</li> <li><code>cost_type</code>: Type de co\u00fbt [ time, distance ]</li> <li><code>costing</code>: M\u00e9thode de calcul de co\u00fbt (pour stored data de type GRAPHE-VALHALLA) [ auto, auto_shorter, pedestrian ]</li> <li><code>attributes</code>: liste dictionnaire des Attributs retourn\u00e9s par l'API:<ul> <li><code>table_name</code>: Nom de la table</li> <li><code>native_name</code>*: Nom de l'attribut dans la table</li> <li><code>public_name</code>*: Nom de l'attribut vu du service (pattern: ^[A-Za-z0-9_-]+$)</li> <li><code>default</code>: boolean</li> </ul> </li> <li><code>stored_data</code>*: Identifiant de la donn\u00e9e stock\u00e9e</li> </ul>"},{"location":"workflow/#publier-un-flux","title":"Publier un flux","text":"<ul> <li><code>type</code>*: <code>offering</code></li> <li><code>url_parameters</code>: dictionnaire :</li> <li><code>configuration</code>: uuid de la configuration que l'on veux publier</li> <li><code>body_parameters</code>*: dictionnaire param\u00e9trant l'offre:</li> <li><code>visibility</code>: niveau de visibilit\u00e9 [ PRIVATE, REFERENCED, PUBLIC ] (default: PRIVATE)</li> <li><code>endpoint</code>*: uuid du endpoint \u00e0 utiliser</li> <li><code>open</code>: boolean</li> <li><code>permissions</code>: liste des uuid des permissions</li> </ul>"},{"location":"workflow/#supprimer-une-entite","title":"Supprimer une entit\u00e9","text":"<p>Possibilit\u00e9 de supprimer des entit\u00e9s de type : upload, stored_data, configuration et offering.</p> <ul> <li>suppression par ID de l'entit\u00e9 :</li> </ul> <pre><code>{\n    \"type\": \"delete-entity\",\n    // Type de l'entit\u00e9 \u00e0 supprimer (upload, stored_data, configuration, offering)\n    \"entity_type\": \"configuration\",\n    // Id de l'entit\u00e9 \u00e0 supprimer\n    \"entity_id\": \"{uuid}\",\n    // Suppression en cascade autoris\u00e9e ou pas ? par d\u00e9faut \u00e0 false\n    \"cascade\": true,\n    // Ok si non trouv\u00e9e ? par d\u00e9faut \u00e0 true\n    \"not_found_ok\": true,\n}\n</code></pre> <ul> <li>suppression par filtre sur la liste :</li> </ul> <pre><code>{\n    \"type\": \"delete-entity\",\n    // Type de l'entit\u00e9 \u00e0 supprimer (upload, stored_data, configuration, offering)\n    \"entity_type\": \"configuration\",\n    // Crit\u00e8res pour filtrer filter_infos et/ou filter_tags\n    \"filter_infos\": { ... },\n    \"filter_tags\": { ... },\n    // Suppression en cascade autoris\u00e9e ou pas ? par d\u00e9faut \u00e0 false\n    \"cascade\": true,\n    // Ok si non trouv\u00e9e ? par d\u00e9faut \u00e0 true\n    \"not_found_ok\": true,\n    // Que faire plusieurs r\u00e9sultats ?  first =&gt; uniquement 1er de la liste; all =&gt; on prend tout (d\u00e9faut); error =&gt; sortie en erreur du programme\n    \"if_multi\": \"first|all|error\",\n}\n</code></pre>"},{"location":"workflow/#modifier-une-entite","title":"Modifier une entit\u00e9","text":"<p>Possibilit\u00e9 de modifier une entit\u00e9 de type : upload, stored_data, configuration et offering.</p> <p>Correspond aux requ\u00eates PUT et PATCH de l'API Entrep\u00f4t.</p> <pre><code>{\n    \"type\": \"edit-entity\",\n    // Type de l'entit\u00e9 \u00e0 modifier : (upload, stored_data, configuration, offering)\n    \"entity_type\": \"configuration\",\n    // Id de l'entit\u00e9 \u00e0 modifier\n    \"entity_id\": \"{uuid}\",\n    // Optionnel si non pr\u00e9sent requ\u00eate n'ai pas lanc\u00e9e ( =&gt; mise \u00e0 jour des tags et commentaires uniquement), si l'entit\u00e9 h\u00e9rite de FullEditInterface (mise \u00e0 jour totale) =&gt; fusion des informations r\u00e9cup\u00e9r\u00e9es sur l'API (GET) et de celle fournies, sinon on envoie que celles fournies\n    \"body_parameters\": { ... },\n    // Optionnel : Liste des tags ajout\u00e9s \u00e0 l'entit\u00e9 (uniquement si la classe h\u00e9rite de TagInterface)\n    \"tags\": {},\n    // Optionnel : Liste des commentaires \u00e0 ajouter (uniquement si la classe h\u00e9rite de CommentInterface)\n    \"comments\": [],\n}\n</code></pre> <p>Pour le <code>body_parameters</code> se r\u00e9f\u00e9rer \u00e0 la documentation API GPF:</p> <ul> <li>upload (partielle) : PATCH /datastores/{datastore}/uploads/{upload}</li> <li>Seul le nom de la livraison, sa description et sa visibilit\u00e9 sont modifiables, et uniquement par le propri\u00e9taire. Les autres informations, comme le type de la livraison, sont fig\u00e9es.</li> <li>stored_data (partielle) : PATCH /datastores/{datastore}/stored_data/{stored_data}</li> <li>Seul le nom de la donn\u00e9e et sa visibilit\u00e9 sont modifiables, et uniquement par le propri\u00e9taire. Les autres informations, comme le type de la donn\u00e9e, sont fig\u00e9es pour une donn\u00e9e.</li> <li>configuration (totale) : PUT /datastores/{datastore}/configurations/{configuration}</li> <li>Si la configuration est li\u00e9e \u00e0 des offres en cours de publication, la modification n'est pas possible. Si la configuration est li\u00e9e \u00e0 des offres publi\u00e9es, les modifications sont r\u00e9percut\u00e9es sur les serveurs de diffusion. Le nom technique et le type ne sont pas modifiable.</li> <li>offering (partielle): PATCH /datastores/{datastore}/offerings/{offering}</li> <li>Il est possible de modifier la visibilit\u00e9 d'une offre afin qu'elle apparaisse dans les catalogues ou qu'on puisse donner des permissions, ou au contraire qu'elle en disparaisse. On peut \u00e9galement d\u00e9sactiver une offre pour en couper la consommation rapidement, sans d\u00e9configurer les permissions</li> </ul>"},{"location":"workflow/#copier-une-configuration","title":"Copier une configuration","text":"<p>Cr\u00e9ation d'une configuration \u00e0 partir d'une configuration d\u00e9j\u00e0 existante</p> <pre><code>{\n    \"type\": \"copy-configuration\",\n    \"url_parameters\" : {\n        // Id de la configuration \u00e0 copier\n        \"configuration\": \"{uuid}\"\n    },\n    // nouveau name et layer_name de la configuration \u00e0 cr\u00e9er le layer_name n'est plus modifiable pas la suite)\n    \"body_parameters\": {\n        \"name\": \"\",\n        \"layer_name\": \"\",\n    },\n    // optionnel : Liste des tags ajout\u00e9s \u00e0 la nouvelle configuration, (ne sont pas r\u00e9cup\u00e9rer depuis la configuration source)\n    \"tags\": { \"key_tag\" : \"val_tag\"},\n    // optionnel : Liste des commentaires \u00e0 ajouter \u00e0 la nouvelle configuration, (ne sont pas r\u00e9cup\u00e9rer depuis la configuration source)\n    \"comments\": [],\n}\n</code></pre>"},{"location":"workflow/#synchroniser-une-publication","title":"Synchroniser une publication","text":"<p>Synchronisation d'une ou plusieurs offres avec leur configuration et stored-data.</p> <ul> <li>Mise \u00e0 jour selon ID de l'offre</li> </ul> <pre><code>{\n  \"type\": \"synchronize-offering\",\n  // Id de l'entit\u00e9 \u00e0 supprimer (erreur remont\u00e9e par l'API si l'entit\u00e9 n'existe pas)\n  \"entity_id\": \"{uuid}\"\n}\n</code></pre> <ul> <li>suppression par filtrage sur la liste des offres, possibilit\u00e9 de synchroniser plusieurs offres en m\u00eame temps</li> </ul> <pre><code>{\n  \"type\": \"synchronize-offering\",\n  // Ou Crit\u00e8res pour la retrouver\n  \"filter_infos\": { ...  },\n  // optionnel : Que faire plusieurs r\u00e9sultats ?  first =&gt; uniquement 1er de la liste; all =&gt; on prend tout (d\u00e9faut); error =&gt; sortie en erreur du programme\n  \"if_multi\": \"first|all|error\"\n}\n</code></pre> <p>Si aucun r\u00e9sultat, on sort en erreur.</p> <p>Pour \"filter_infos\" voir les filtres possibles pour la requ\u00eate /datastores/{datastore}/offerings. Si on a <code>\"configuration\" : \"{uuid}\"</code> c'est la requ\u00eate  /datastores/{datastore}/configurations/{configuration}/offerings qui sera utilis\u00e9e dans l'attente que la filtration sur les configurations soit possible.</p>"},{"location":"workflow/#exemple","title":"Exemple","text":""},{"location":"workflow/#actions-de-base","title":"Actions de base","text":"<p>Pour les actions de base (processing-execution, configuration, offre) des workflows des tutoriels sont disponibles dans sdk_entrepot_gpf/_data/workflows/ :</p> <ul> <li>archivage generic_archive.jsonc (traitement d'une archive, configuration et offre pour un g\u00e9oservice T\u00e9l\u00e9chargement). Tutoriel ;</li> <li>flux vecteur generic_vecteur.jsonc (traitement d'une mise en base, configuration et offre pour un g\u00e9oservice Flux WFS, configuration et offre pour un flux WMS vecteur, traitement de cr\u00e9ation de pyramide, configuration et offre pour un flux TMS) Tutoriel ;</li> <li>flux raster generic_raster.jsonc (traitement de cr\u00e9ation d'une pyramide, configuration et offre pour un flux WMS, configuration et offre pour un flux WMTS) Tutoriel ;</li> <li>mise en place d'une pyramide par \"joincache\" generic_joincache.jsonc (traitement cr\u00e9ation de pyramides, traitement de fusion de pyramides, traitement de mise \u00e0 jour d'une pyramide, configuration et offre pour un flux WMS raster, configuration et offre pour un flux WMTS) ;</li> <li>mise \u00e0 jour d'un base de donn\u00e9e generic_maj_bdd.jsonc (traitement de mise en base cr\u00e9ation + mise \u00e0 jour, configuration et offre pour un flux WMS)</li> <li>cr\u00e9ation d'une pyramise rasteur \u00e0 partir un flux WMS vecteur (moissonnage) generic_moissonnage.jsonc (traitement de mise en base, configuration et offre pour un flux WMS vecteur, traitement de moissonnage, configuration et offre pour un flux WMS raster) ;</li> </ul>"},{"location":"workflow/#execution-du-workflow","title":"Ex\u00e9cution du workflow","text":""},{"location":"workflow/#via-lutilisation-du-sdk-comme-executable","title":"Via l'utilisation du SDK comme ex\u00e9cutable","text":"<ul> <li>Lister les \u00e9tapes disponibles et valider votre workflow :</li> </ul> <pre><code>python -m sdk_entrepot_gpf workflow -f mon_workflow.json\n</code></pre> <ul> <li>lancer une \u00e9tape :</li> </ul> <pre><code>python -m sdk_entrepot_gpf workflow -f mon_workflow.json -s mon_\u00e9tape\n</code></pre>"},{"location":"workflow/#via-lutilisation-du-sdk-comme-module","title":"Via l'utilisation du SDK comme module","text":"<p>Exemple de code complet permettant de valider et d'afficher les \u00e9tapes du workflow et de lancer l'\u00e9tape \"etape 1\" :</p> <pre><code>from sdk_entrepot_gpf.io.Config import Config\n# Importation de la classe JsonHelper\nfrom sdk_entrepot_gpf.helper.JsonHelper import JsonHelper\n# Importation des classes Workflow, GlobalResolver et StoreEntityResolver\nfrom sdk_entrepot_gpf.workflow.Workflow import Workflow\nfrom sdk_entrepot_gpf.workflow.resolver.GlobalResolver import GlobalResolver\nfrom sdk_entrepot_gpf.workflow.resolver.StoreEntityResolver import StoreEntityResolver\n\n# initialisation de la configuration, adapt\u00e9 le nom si besoin\nConfig().read(\"config.ini\")\n\n# initialisation du Workflow avec le fichier \"mon_workflow.jsonc\"\np_workflow = Path(\"mon_workflow.jsonc\").absolute()\no_workflow = Workflow(p_workflow.stem, JsonHelper.load(p_workflow))\n\n# validation et liste des \u00e9tapes\n\n## validation\nConfig().om.info(\"Validation du workflow...\")\nl_errors = o_workflow.validate()\nif l_errors:\n    s_errors = \"\\n   * \".join(l_errors)\n    Config().om.error(f\"{len(l_errors)} erreurs ont \u00e9t\u00e9 trouv\u00e9es dans le workflow.\")\n    Config().om.info(f\"Liste des erreurs :\\n   * {s_errors}\")\n    raise GpfSdkError(\"Workflow invalide.\")\nConfig().om.info(\"Le workflow est valide.\", green_colored=True)\n\n## Affichage des \u00e9tapes disponibles et des parents\nConfig().om.info(\"Liste des \u00e9tapes disponibles et de leurs parents :\", green_colored=True)\nl_steps = o_workflow.get_all_steps()\nfor s_step in l_steps:\n    Config().om.info(f\"   * {s_step}\")\n\n# ex\u00e9cution d'une \u00e9tape\n\n## d\u00e9finition des r\u00e9solveurs\nGlobalResolver().add_resolver(StoreEntityResolver(\"store_entity\"))\nGlobalResolver().add_resolver(UserResolver(\"user\"))\n\n## OPTIONNEL:  le comportement si l'entit\u00e9 \u00e0 cr\u00e9er existe d\u00e9j\u00e0 (si None, valeur de la configuration)\ns_behavior = \"STOP\"\n\n## on lance le monitoring de l'\u00e9tape en pr\u00e9cisant la gestion du ctrl-C\no_workflow.run_step(self.o_args.step, behavior=s_behavior, datastore=self.datastore)\n</code></pre>"},{"location":"reference/auth/","title":"sdk_entrepot_gpf.auth","text":""},{"location":"reference/auth/#sdk_entrepot_gpf.auth.Authentifier.Authentifier","title":"<code>Authentifier()</code>","text":"<p>Singleton permettant de s'authentifier aupr\u00e8s du serveur KeyCloak.</p> <p>Attributes:</p> Name Type Description <code>__token_url</code> <code>str</code> <p>url permettant de r\u00e9cup\u00e9rer le jeton d'authentification</p> <code>__login</code> <code>str</code> <p>login pour l'authentification</p> <code>__password</code> <code>str</code> <p>password pour l'authentification</p> <code>__client_id</code> <code>str</code> <p>identification client devant \u00eatre donn\u00e9 au serveur d'authentification</p> <code>__nb_attempts</code> <code>int</code> <p>nombre de tentatives possibles en cas de probl\u00e8me rencontr\u00e9 pendant la r\u00e9cup\u00e9ration du jeton</p> <code>__sec_between_attempt</code> <code>int</code> <p>nombre de secondes entre deux tentatives en cas de probl\u00e8me rencontr\u00e9 pendant la r\u00e9cup\u00e9ration du jeton</p> <code>__last_token</code> <code>Token</code> <p>sauvegarde du dernier jeton r\u00e9cup\u00e9r\u00e9 (pour \u00e9viter de multiples requ\u00eates au serveur KeyCloak)</p>"},{"location":"reference/auth/#sdk_entrepot_gpf.auth.Authentifier.Authentifier.get_access_token_string","title":"<code>get_access_token_string()</code>","text":"<p>Retourne le jeton d'authentification sous forme de cha\u00eene de caract\u00e8res.</p> <p>Returns:</p> Type Description <code>str</code> <p>Un jeton valide</p> <p>Raises:</p> Type Description <code>AuthentificationError</code> <p>Lev\u00e9e si la r\u00e9cup\u00e9ration de jeton \u00e9choue au bout de <code>nb_attempts</code> tentatives</p>"},{"location":"reference/auth/#sdk_entrepot_gpf.auth.Authentifier.Authentifier.get_http_header","title":"<code>get_http_header(json_content_type=False)</code>","text":"<p>Renvoie une ent\u00eate HTTP d'authentification \u00e0 destination de KeyCloak et consommable par une requ\u00eate via le module requests.</p> <p>Parameters:</p> Name Type Description Default <code>json_content_type</code> <code>bool</code> <p>indique si le <code>content-type</code> <code>application/json</code> doit \u00eatre sp\u00e9cifi\u00e9</p> <code>False</code> <p>Returns:</p> Type Description <code>Dict[str, str]</code> <p>Dictionnaire de la forme : <code>{\"Authorization\": \"Bearer &lt;JETON&gt;\", \"content-type\":\"application/json\"}</code></p> <p>Raises:</p> Type Description <code>AuthentificationError</code> <p>Lev\u00e9e si la r\u00e9cup\u00e9ration de jeton a pos\u00e9 probl\u00e8me</p>"},{"location":"reference/auth/#sdk_entrepot_gpf.auth.Authentifier.Authentifier.revoke_token","title":"<code>revoke_token()</code>","text":"<p>R\u00e9voque le token actuellement utilis\u00e9 pour forcer la r\u00e9cup\u00e9ration d'un nouveau token.</p>"},{"location":"reference/auth/#sdk_entrepot_gpf.auth.Token.Token","title":"<code>Token(token_dict)</code>","text":"<p>Repr\u00e9sente un jeton KeyCloak. Ce jeton est caract\u00e9ris\u00e9 par ensemble d'informations cl\u00e9-valeur et une date d'expiration.</p> <p>Attributes:</p> Name Type Description <code>__token_dict</code> <code>dict</code> <p>Stockage du jeton <code>{\"access_token\": \"valeur-du-jeton\", \"expires_in\": temps-en-secondes}</code></p> <code>__expiration_date</code> <code>datetime</code> <p>Date d'expiration du jeton</p> <p>\u00c0 l'instanciation : on stocke l'ensemble d'informations cl\u00e9-valeur et on calcule la date d'expiration \u00e0 partir de son d\u00e9lai d'expiration.</p> <p>Parameters:</p> Name Type Description Default <code>token_dict</code> <code>dict</code> <p>Jeton tel que renvoy\u00e9 par le service d'authentification : <code>{\"access_token\": \"valeur-du-jeton\", \"expires_in\": temps-en-secondes}</code></p> required"},{"location":"reference/auth/#sdk_entrepot_gpf.auth.Token.Token.get_access_string","title":"<code>get_access_string()</code>","text":"<p>Retourne le jeton d'authentification sous forme de cha\u00eene de caract\u00e8res.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>Jeton d'acc\u00e8s</p>"},{"location":"reference/auth/#sdk_entrepot_gpf.auth.Token.Token.is_valid","title":"<code>is_valid()</code>","text":"<p>Indique si le jeton est valide par rapport \u00e0 sa date d'expiration.</p> <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p><code>True</code> si le jeton est valide</p>"},{"location":"reference/auth/#sdk_entrepot_gpf.auth.Errors.AuthentificationError","title":"<code>AuthentificationError(message)</code>","text":"<p>             Bases: <code>GpfSdkError</code></p> <p>Est lev\u00e9e quand un probl\u00e8me appara\u00eet durant la r\u00e9cup\u00e9ration d'informations d'authentification</p> Attr <p>__message (str): message d\u00e9crivant le probl\u00e8me</p> <p>Constructor</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str) </code> <p>message d\u00e9crivant le probl\u00e8me</p> required"},{"location":"reference/io/","title":"sdk_entrepot_gpf.io","text":""},{"location":"reference/io/#sdk_entrepot_gpf.io.ApiRequester.ApiRequester","title":"<code>ApiRequester()</code>","text":"<p>Classe singleton pour g\u00e9rer l'enrobage des requ\u00eates \u00e0 l'API GPF : gestion du proxy, du HTTPS et des erreurs.</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.ApiRequester.ApiRequester.range_next_page","title":"<code>range_next_page(content_range, length)</code>  <code>staticmethod</code>","text":"<p>Fonction analysant le <code>Content-Range</code> d'une r\u00e9ponse pour indiquer s'il faut faire d'autres requ\u00eates ou si tout est d\u00e9j\u00e0 r\u00e9cup\u00e9r\u00e9.</p> <p>Parameters:</p> Name Type Description Default <code>content_range</code> <code>Optional[str]</code> <p>Content-Range renvoy\u00e9 par l'API</p> required <code>length</code> <code>int</code> <p>nombre d'\u00e9l\u00e9ments d\u00e9j\u00e0 r\u00e9cup\u00e9r\u00e9s</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True s'il faut continuer, False sinon</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.ApiRequester.ApiRequester.route_request","title":"<code>route_request(route_name, route_params=None, method='GET', params=None, data=None, files=None)</code>","text":"<p>Ex\u00e9cute une requ\u00eate \u00e0 l'API \u00e0 partir du nom d'une route. La requ\u00eate est retent\u00e9e plusieurs fois s'il y a un probl\u00e8me.</p> <p>Parameters:</p> Name Type Description Default <code>route_name</code> <code>str</code> <p>Route \u00e0 utiliser</p> required <code>route_params</code> <code>Optional[Dict[str, Any]]</code> <p>Param\u00e8tres obligatoires pour compl\u00e9ter la route.</p> <code>None</code> <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>Param\u00e8tres optionnels de l'URL.</p> <code>None</code> <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate.</p> <code>'GET'</code> <code>data</code> <code>Optional[Dict[str, Any]]</code> <p>Donn\u00e9es de la requ\u00eate.</p> <code>None</code> <code>files</code> <code>Optional[Dict[str, Tuple[Any]]]</code> <p>Liste des fichiers \u00e0 envoyer {\"file\":('fichier.ext', File)}.</p> <code>None</code> <p>Raises:</p> Type Description <code>RouteNotFoundError</code> <p>lev\u00e9e si la route demand\u00e9e n'est pas d\u00e9finie dans les param\u00e8tres</p> <code>InternalServerError</code> <p>lev\u00e9e si erreur interne de l'API</p> <code>NotFoundError</code> <p>lev\u00e9e si l'entit\u00e9 demand\u00e9e n'est pas trouv\u00e9e par l'API</p> <code>NotAuthorizedError</code> <p>lev\u00e9e si l'action effectu\u00e9e demande d'autres autorisations</p> <code>BadRequestError</code> <p>lev\u00e9e si la requ\u00eate envoy\u00e9e n'est pas correcte</p> <code>StatusCodeError</code> <p>lev\u00e9e si un \"status code\" non pr\u00e9vu est r\u00e9cup\u00e9r\u00e9</p> <p>Returns:</p> Type Description <code>Response</code> <p>r\u00e9ponse v\u00e9rifi\u00e9e</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.ApiRequester.ApiRequester.route_upload_file","title":"<code>route_upload_file(route_name, file_path, file_key, route_params=None, method='POST', params=None, data=None)</code>","text":"<p>Ex\u00e9cute une requ\u00eate \u00e0 l'API \u00e0 partir du nom d'une route. La requ\u00eate est retent\u00e9e plusieurs fois s'il y a un probl\u00e8me.</p> <p>Parameters:</p> Name Type Description Default <code>route_name</code> <code>str</code> <p>Route \u00e0 utiliser</p> required <code>file_path</code> <code>Path</code> <p>Chemin du fichier \u00e0 uploader</p> required <code>file_key</code> <code>str</code> <p>nom de la clef dans le dictionnaire</p> required <code>route_params</code> <code>Optional[Dict[str, Any]]</code> <p>Param\u00e8tres obligatoires pour compl\u00e9ter la route.</p> <code>None</code> <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>Param\u00e8tres optionnels de l'URL.</p> <code>None</code> <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate.</p> <code>'POST'</code> <code>data</code> <code>Optional[Dict[str, Any]]</code> <p>Donn\u00e9es de la requ\u00eate.</p> <code>None</code> <p>Returns:</p> Type Description <code>Response</code> <p>r\u00e9ponse v\u00e9rifi\u00e9e</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.ApiRequester.ApiRequester.url_request","title":"<code>url_request(url, method='GET', params=None, data=None, files=None, header={})</code>","text":"<p>Effectue une requ\u00eate \u00e0 l'API \u00e0 partir d'une url. La requ\u00eate est retent\u00e9e plusieurs fois s'il y a un probl\u00e8me.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>url absolue de la requ\u00eate</p> required <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate</p> <code>'GET'</code> <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>param\u00e8tres de la requ\u00eate (ajout\u00e9 \u00e0 l'url)</p> <code>None</code> <code>data</code> <code>Optional[Union[Dict[str, Any], List[Any]]]</code> <p>contenue de la requ\u00eate (ajout\u00e9 au corp)</p> <code>None</code> <code>files</code> <code>Optional[Dict[str, Tuple[Any]]]</code> <p>fichiers \u00e0 envoyer</p> <code>None</code> <code>header</code> <code>Dict[str, str]</code> <p>Header additionnel pour la requ\u00eate</p> <code>{}</code> <p>Returns:</p> Type Description <code>Response</code> <p>r\u00e9ponse si succ\u00e8s</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Config.Config","title":"<code>Config()</code>","text":"<p>Lit le fichier de configuration (classe Singleton). Attributes:     __config_parser (configparser): ConfigParser     __ini_file_path (string): Chemin vers le fichier de configuration BaGI</p> <p>A l'instanciation, le fichier par d\u00e9faut est lu.</p> <p>Il faudra ensuite surcharger les param\u00e8tres en lisant d'autres fichiers via la m\u00e9thode <code>read</code>.</p> <p>Raises:</p> Type Description <code>ConfigReaderError</code> <p>lev\u00e9e si le fichier de configuration par d\u00e9faut n'est pas trouv\u00e9</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Config.Config.get","title":"<code>get(section, option, fallback=None)</code>","text":"<p>R\u00e9cup\u00e8re la valeur associ\u00e9e au param\u00e8tre demand\u00e9.</p> <p>Parameters:</p> Name Type Description Default <code>section</code> <code>str</code> <p>section du param\u00e8tre</p> required <code>option</code> <code>str</code> <p>option du param\u00e8tre</p> required <code>fallback</code> <code>Optional[str]</code> <p>valeur par d\u00e9faut.</p> <code>None</code> <p>Returns:</p> Type Description <code>Optional[str]</code> <p>Optional[str]: la valeur du param\u00e8tre</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Config.Config.get_bool","title":"<code>get_bool(section, option, fallback=None)</code>","text":"<p>R\u00e9cup\u00e8re la valeur associ\u00e9e au param\u00e8tre demand\u00e9, convertie en <code>bool</code>.</p> <p>Parameters:</p> Name Type Description Default <code>section</code> <code>str</code> <p>section du param\u00e8tre</p> required <code>option</code> <code>str</code> <p>option du param\u00e8tre</p> required <code>fallback</code> <code>Optional[bool]</code> <p>valeur par d\u00e9faut.</p> <code>None</code> <p>Returns:</p> Type Description <code>bool</code> <p>la valeur du param\u00e8tre</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Config.Config.get_float","title":"<code>get_float(section, option, fallback=None)</code>","text":"<p>R\u00e9cup\u00e8re la valeur associ\u00e9e au param\u00e8tre demand\u00e9, convertie en <code>float</code>.</p> <p>Parameters:</p> Name Type Description Default <code>section</code> <code>str</code> <p>section du param\u00e8tre</p> required <code>option</code> <code>str</code> <p>option du param\u00e8tre</p> required <code>fallback</code> <code>Optional[float]</code> <p>valeur par d\u00e9faut.</p> <code>None</code> <p>Returns:</p> Type Description <code>float</code> <p>la valeur du param\u00e8tre</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Config.Config.get_int","title":"<code>get_int(section, option, fallback=None)</code>","text":"<p>R\u00e9cup\u00e8re la valeur associ\u00e9e au param\u00e8tre demand\u00e9, convertie en <code>int</code>.</p> <p>Parameters:</p> Name Type Description Default <code>section</code> <code>str</code> <p>section du param\u00e8tre</p> required <code>option</code> <code>str</code> <p>option du param\u00e8tre</p> required <code>fallback</code> <code>Optional[int]</code> <p>valeur par d\u00e9faut.</p> <code>None</code> <p>Returns:</p> Type Description <code>int</code> <p>la valeur du param\u00e8tre</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Config.Config.get_parser","title":"<code>get_parser()</code>","text":"<p>Retourne le config_parser.</p> <p>Returns:</p> Type Description <code>ConfigParser</code> <p>le config parser</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Config.Config.get_str","title":"<code>get_str(section, option, fallback=None)</code>","text":"<p>R\u00e9cup\u00e8re la valeur du param\u00e8tre demand\u00e9.</p> <p>Parameters:</p> Name Type Description Default <code>section</code> <code>str</code> <p>section du param\u00e8tre</p> required <code>option</code> <code>str</code> <p>option du param\u00e8tre</p> required <code>fallback</code> <code>Optional[str]</code> <p>valeur par d\u00e9faut. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>str</code> <p>Optional[str]: la valeur du param\u00e8tre</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Config.Config.get_temp","title":"<code>get_temp()</code>","text":"<p>R\u00e9cup\u00e8re le chemin racine du dossier temporaire \u00e0 utiliser.</p> <p>Returns:</p> Type Description <code>Path</code> <p>chemin racine du dossier temporaire \u00e0 utiliser</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Config.Config.read","title":"<code>read(filenames)</code>","text":"<p>Permet de surcharger la configuration en lisant un ou plusieurs nouveau(x) fichier(s) de configuration.</p> <p>Les derniers fichiers ont la priorit\u00e9. Si un fichier n'est pas trouv\u00e9, aucune erreur n'est lev\u00e9e. La fonction retourne la liste des fichiers lus.</p> <p>Parameters:</p> Name Type Description Default <code>filenames</code> <code>Union[str, Path, Iterable[Union[str, Path]]]</code> <p>Chemin ou liste des chemins vers le ou les fichier(s) \u00e0 lire</p> required <p>Returns:</p> Type Description <code>List[str]</code> <p>liste des fichiers trouv\u00e9s et lus</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Dataset.Dataset","title":"<code>Dataset(dataset, p_root_dir)</code>","text":"<p>Classe portante les infos n\u00e9cessaires \u00e0 la cr\u00e9ation d'une livraison et issues du dataset.</p> <p>Attributes:</p> Name Type Description <code>__data_dirs</code> <code>List[Path]</code> <p>Liste des dossiers \u00e0 envoyer \u00e0 l'API</p> <code>__upload_infos</code> <code>Dict[str, str]</code> <p>Informations permettant de cr\u00e9er la livraison</p> <code>__comments</code> <code>List[str]</code> <p>Commentaires \u00e0 ajouter \u00e0 la livraison</p> <code>__tags</code> <code>Dict[str, str]</code> <p>Tags \u00e0 ajouter \u00e0 la livraison</p> <code>__data_files</code> <code>List[Path]</code> <p>Liste des fichiers de donn\u00e9e \u00e0 importer sur l'entrep\u00f4t.</p> <code>__md5_files</code> <code>List[Path]</code> <p>Liste des fichiers md5 \u00e0 importer sur l'entrep\u00f4t.</p> <code>__root_dir</code> <code>Path</code> <p>Chemin racine du dataset (absolu ou relatif ?)</p> <p>Constructeur</p> <p>Parameters:</p> Name Type Description Default <code>dataset</code> <code>Dict[Any, Any]</code> <p>dataset tel que dans le fichier descriptif de livraison</p> required <code>p_root_dir</code> <code>Path</code> <p>Chemin racine \u00e0 partir duquel sont d\u00e9fini les data_dirs</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.UploadDescriptorFileReader.UploadDescriptorFileReader","title":"<code>UploadDescriptorFileReader(descriptor_file_path)</code>","text":"<p>Classe permettant de lire et de valider le fichier descripteur de livraison.</p> <p>Attributes:</p> Name Type Description <code>__descriptor_dict</code> <code>Optional[Dict[Any, Any]]</code> <p>Contenu du fichier descriptif</p> <code>__datasets</code> <code>List[Dataset]</code> <p>Liste des datasets contenus dans le fichier descripteur de livraison</p> <code>__parent_folder(path)</code> <code>List[Dataset]</code> <p>Chemin du dossier parent des donn\u00e9es</p> <p>La classe est instanci\u00e9e \u00e0 partir du fichier descripteur de livraison.</p> <p>Les diff\u00e9rents chemins indiqu\u00e9s sont alors v\u00e9rifi\u00e9s et les fichiers \u00e0 t\u00e9l\u00e9verser sont list\u00e9s.</p> <p>Parameters:</p> Name Type Description Default <code>descriptor_file_path</code> <code>Path</code> <p>chemin vers le fichier descripteur de livraison</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.JsonConverter.JsonConverter","title":"<code>JsonConverter()</code>","text":"<p>Classe de conversion des objects python en json. Le but est de convertir les objets qui ne sont pas nativement g\u00e9r\u00e9s par Python comme les dates.</p> <p>initialisation : liste des routes et adresse site</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.JsonConverter.JsonConverter.convert","title":"<code>convert(data)</code>","text":"<p>Passe en string les objets non g\u00e9r\u00e9s nativement en JSON par Python. Ex : {\"date\": date(2020, 1, 1)} =&gt; {\"date\": \"2020-01-01\"}</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Any</code> <p>donn\u00e9es \u00e0 envoyer \u00e0 l'api avec des classes python</p> required <p>Returns:</p> Name Type Description <code>Any</code> <code>Any</code> <p>donn\u00e9es \u00e0 envoyer \u00e0 l'api sans classe python</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.JsonConverter.JsonConverter.dumps","title":"<code>dumps(data)</code>","text":"<p>Cette fonction permet de convertir les classes python en string JSON. Pour le moment, sont trait\u00e9es les dates, times, et datetimes. On utilise un \"converter\" sp\u00e9cialis\u00e9.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Any</code> <p>donn\u00e9es \u00e0 envoyer \u00e0 l'api avec des classes python</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>JSON avec gestion des classes Python</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.OutputManager.OutputManager","title":"<code>OutputManager(file_logger=None, pattern_formater=None)</code>","text":"<p>Classe de gestion du log.</p> <p>La classe est instanci\u00e9e \u00e0 partir d'un fichier de log et d'un mod\u00e8le de format de log.</p> <p>Parameters:</p> Name Type Description Default <code>file_logger</code> <code>Optional[str]</code> <p>Chemin vers le fichier de log ou <code>None</code> si on ne veux pas de fichier de log.</p> <code>None</code> <code>pattern_formater</code> <code>Optional[str]</code> <p>Mod\u00e8le de format du log (cf doc logging) ou <code>None</code> si on veut le format par d\u00e9faut.</p> <code>None</code>"},{"location":"reference/io/#sdk_entrepot_gpf.io.OutputManager.OutputManager.critical","title":"<code>critical(message, red_colored=True)</code>","text":"<p>Ajout d'un message de type critique (appara\u00eet en rouge dans la console) Args:     message (str): message de type critique \u00e0 journaliser     red_colored (bool, optional): indique si le message doit \u00eatre \u00e9crit en rouge (par d\u00e9faut True)</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.OutputManager.OutputManager.debug","title":"<code>debug(message)</code>","text":"<p>Ajout d'un message de type debug Args:     message (str): message de type debug \u00e0 journaliser</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.OutputManager.OutputManager.error","title":"<code>error(message, red_colored=True)</code>","text":"<p>Ajout d'un message de type erreur Args:     message (str): message de type erreur \u00e0 journaliser     red_colored (bool, optional): indique si le message doit \u00eatre \u00e9crit en rouge (par d\u00e9faut False)</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.OutputManager.OutputManager.info","title":"<code>info(message, green_colored=False)</code>","text":"<p>Ajout d'un message de type info</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str</code> <p>message de type info \u00e0 journaliser</p> required <code>green_colored</code> <code>bool</code> <p>indique si le message doit \u00eatre \u00e9crit en vert (par d\u00e9faut False)</p> <code>False</code>"},{"location":"reference/io/#sdk_entrepot_gpf.io.OutputManager.OutputManager.set_log_level","title":"<code>set_log_level(level)</code>","text":"<p>D\u00e9fini le niveau de log du logger.</p> <p>Parameters:</p> Name Type Description Default <code>level</code> <code>str</code> <p>niveau de log (DEBUG, INFO, WARNING, ERROR ou CRITICAL)</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.OutputManager.OutputManager.warning","title":"<code>warning(message, yellow_colored=True)</code>","text":"<p>Ajout d'un message de type warning Args:     message (str): message de type warning \u00e0 journaliser     yellow_colored (bool, optional): indique si le message doit \u00eatre \u00e9crit en jaune (par d\u00e9faut True)</p>"},{"location":"reference/io/#errors","title":"Errors","text":""},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.AbstractRequestError","title":"<code>AbstractRequestError(url, method, params, data)</code>","text":"<p>             Bases: <code>ApiError</code></p> <p>Erreur API : erreur g\u00e9n\u00e9rique et sans r\u00e9ponse lors d'une requ\u00eate \u00e0 l'API.</p> <p>Instanci\u00e9e \u00e0 partir de l'URL, la m\u00e9thode, les param\u00e8tres et les donn\u00e9es posant probl\u00e8me.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>url de la requ\u00eate</p> required <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate</p> required <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>param\u00e8tres de la requ\u00eate</p> required <code>data</code> <code>Optional[Union[Dict[str, Any], List[Any]]]</code> <p>donn\u00e9es envoy\u00e9es</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.ApiError","title":"<code>ApiError</code>","text":"<p>             Bases: <code>Exception</code></p> <p>Erreur API : classe abstraite pour g\u00e9rer les erreurs API en g\u00e9n\u00e9ral.</p>"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.BadRequestError","title":"<code>BadRequestError(url, method, params, data, response)</code>","text":"<p>             Bases: <code>_WithResponseError</code></p> <p>Erreur API : mauvaise requ\u00eate (contactez le support).</p> <p>Instanci\u00e9e \u00e0 partir de l'URL, la m\u00e9thode, les param\u00e8tres et les donn\u00e9es posant probl\u00e8me ainsi que la r\u00e9ponse de l'API.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>url de la requ\u00eate</p> required <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate</p> required <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>param\u00e8tres de la requ\u00eate</p> required <code>data</code> <code>Optional[Union[Dict[str, Any], List[Any]]]</code> <p>donn\u00e9es envoy\u00e9es</p> required <code>response</code> <code>str</code> <p>donn\u00e9es re\u00e7ues</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.ConfigReaderError","title":"<code>ConfigReaderError(message)</code>","text":"<p>             Bases: <code>GpfSdkError</code></p> <p>Erreur lev\u00e9e quand il y a un probl\u00e8me pendant la lecture du fichier de configuration par d\u00e9faut.</p> <p>Attributes:</p> Name Type Description <code>__message</code> <code>str</code> <p>message d\u00e9crivant le probl\u00e8me</p> <p>Constructor</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str) </code> <p>message d\u00e9crivant le probl\u00e8me</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.ConflictError","title":"<code>ConflictError(url, method, params, data, response)</code>","text":"<p>             Bases: <code>_WithResponseError</code></p> <p>Erreur API : conflit au traitement de la requ\u00eate (Est-ce que vous tentez de supprimer une ressource utilis\u00e9e ?).</p> <p>Instanci\u00e9e \u00e0 partir de l'URL, la m\u00e9thode, les param\u00e8tres et les donn\u00e9es posant probl\u00e8me ainsi que la r\u00e9ponse de l'API.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>url de la requ\u00eate</p> required <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate</p> required <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>param\u00e8tres de la requ\u00eate</p> required <code>data</code> <code>Optional[Union[Dict[str, Any], List[Any]]]</code> <p>donn\u00e9es envoy\u00e9es</p> required <code>response</code> <code>str</code> <p>donn\u00e9es re\u00e7ues</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.InternalServerError","title":"<code>InternalServerError(url, method, params, data)</code>","text":"<p>             Bases: <code>AbstractRequestError</code></p> <p>Erreur API : erreur interne \u00e0 l'API (contactez le support).</p> <p>Instanci\u00e9e \u00e0 partir de l'URL, la m\u00e9thode, les param\u00e8tres et les donn\u00e9es posant probl\u00e8me.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>url de la requ\u00eate</p> required <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate</p> required <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>param\u00e8tres de la requ\u00eate</p> required <code>data</code> <code>Optional[Union[Dict[str, Any], List[Any]]]</code> <p>donn\u00e9es envoy\u00e9es</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.NotAuthorizedError","title":"<code>NotAuthorizedError(url, method, params, data, response)</code>","text":"<p>             Bases: <code>_WithResponseError</code></p> <p>Erreur API : action non autoris\u00e9e.</p> <p>Instanci\u00e9e \u00e0 partir de l'URL, la m\u00e9thode, les param\u00e8tres et les donn\u00e9es posant probl\u00e8me ainsi que la r\u00e9ponse de l'API.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>url de la requ\u00eate</p> required <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate</p> required <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>param\u00e8tres de la requ\u00eate</p> required <code>data</code> <code>Optional[Union[Dict[str, Any], List[Any]]]</code> <p>donn\u00e9es envoy\u00e9es</p> required <code>response</code> <code>str</code> <p>donn\u00e9es re\u00e7ues</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.NotFoundError","title":"<code>NotFoundError(url, method, params, data, response)</code>","text":"<p>             Bases: <code>_WithResponseError</code></p> <p>Erreur API : entit\u00e9 non trouv\u00e9e sur la G\u00e9oplateforme.</p> <p>Instanci\u00e9e \u00e0 partir de l'URL, la m\u00e9thode, les param\u00e8tres et les donn\u00e9es posant probl\u00e8me ainsi que la r\u00e9ponse de l'API.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>url de la requ\u00eate</p> required <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate</p> required <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>param\u00e8tres de la requ\u00eate</p> required <code>data</code> <code>Optional[Union[Dict[str, Any], List[Any]]]</code> <p>donn\u00e9es envoy\u00e9es</p> required <code>response</code> <code>str</code> <p>donn\u00e9es re\u00e7ues</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.RouteNotFoundError","title":"<code>RouteNotFoundError(route_name)</code>","text":"<p>             Bases: <code>ApiError</code></p> <p>Route non trouv\u00e9e (probl\u00e8me de configuration).</p> <p>Instanci\u00e9e \u00e0 partir du nom de la route non trouv\u00e9e.</p> <p>Parameters:</p> Name Type Description Default <code>route_name</code> <code>str</code> <p>nom de la route manquante</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.RoutingReaderError","title":"<code>RoutingReaderError(message)</code>","text":"<p>             Bases: <code>GpfSdkError</code></p> <p>Erreur lev\u00e9e quand il y a un probl\u00e8me pendant la lecture du fichier de configuration des routes.</p> <p>Attributes:</p> Name Type Description <code>__message</code> <code>str</code> <p>message d\u00e9crivant le probl\u00e8me</p> <p>Constructor</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str) </code> <p>message d\u00e9crivant le probl\u00e8me</p> required"},{"location":"reference/io/#sdk_entrepot_gpf.io.Errors.StatusCodeError","title":"<code>StatusCodeError(url, method, params, data, status_code, response)</code>","text":"<p>             Bases: <code>_WithResponseError</code></p> <p>Erreur API : erreur avec un code de retour non pr\u00e9vu par une erreur explicite...</p> <p>Instanci\u00e9e \u00e0 partir de l'URL, la m\u00e9thode, les param\u00e8tres et les donn\u00e9es posant probl\u00e8me ainsi que la r\u00e9ponse et le code de retour de l'API.</p> <p>Parameters:</p> Name Type Description Default <code>url</code> <code>str</code> <p>url de la requ\u00eate</p> required <code>method</code> <code>str</code> <p>m\u00e9thode de la requ\u00eate</p> required <code>params</code> <code>Optional[Dict[str, Any]]</code> <p>param\u00e8tres de la requ\u00eate</p> required <code>data</code> <code>Optional[Union[Dict[str, Any], List[Any]]]</code> <p>donn\u00e9es envoy\u00e9es</p> required <code>status_code</code> <code>int</code> <p>code de retour</p> required <code>response</code> <code>str</code> <p>donn\u00e9es re\u00e7ues</p> required"},{"location":"reference/store/","title":"sdk_entrepot_gpf.store","text":""},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity","title":"<code>StoreEntity(store_api_dict, datastore=None)</code>","text":"<p>             Bases: <code>ABC</code></p> <p>Repr\u00e9sentation Python d'une entit\u00e9 de l'entrep\u00f4t.</p> <p>Parameters:</p> Name Type Description Default <code>store_api_dict</code> <code>Dict[str, Any]</code> <p>Propri\u00e9t\u00e9s de l'entit\u00e9 telles que renvoy\u00e9es par l'API</p> required <p>Classe instanci\u00e9e \u00e0 partir de la repr\u00e9sentation envoy\u00e9e par l'API d'une entit\u00e9.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.datastore","title":"<code>datastore: Optional[str]</code>  <code>property</code>","text":"<p>Renvoie l'identifiant du datastore de l'entit\u00e9</p> <p>Returns:</p> Type Description <code>Optional[str]</code> <p>identifiant du datastore de l'entit\u00e9 None si non d\u00e9fini</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.id","title":"<code>id: str</code>  <code>property</code>","text":"<p>Renvoie l'identifiant de l'entit\u00e9.</p> <p>Returns:</p> Type Description <code>str</code> <p>Identifiant de l'entit\u00e9.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.api_create","title":"<code>api_create(data, route_params=None)</code>  <code>classmethod</code>","text":"<p>Cr\u00e9e une nouvelle entit\u00e9 dans l'API.</p> <p>Parameters:</p> Name Type Description Default <code>data</code> <code>Optional[Dict[str, Any]]</code> <p>Donn\u00e9es n\u00e9cessaires pour la cr\u00e9ation.</p> required <code>route_params</code> <code>Optional[Dict[str, Any]]</code> <p>Param\u00e8tres de r\u00e9solution de la route.</p> <code>None</code> <p>Returns:</p> Type Description <code>StoreEntity</code> <p>Entit\u00e9 cr\u00e9\u00e9e</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.api_delete","title":"<code>api_delete()</code>","text":"<p>Supprime l'entit\u00e9 de l'API.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.api_get","title":"<code>api_get(id_, datastore=None)</code>  <code>classmethod</code>","text":"<p>R\u00e9cup\u00e8re une entit\u00e9 depuis l'API.</p> <p>Parameters:</p> Name Type Description Default <code>id_</code> <code>str</code> <p>Identifiant de l'entit\u00e9</p> required <code>datastore</code> <code>Optional[str]</code> <p>Identifiant du datastore</p> <code>None</code> <p>Returns:</p> Type Description <code>StoreEntity</code> <p>L'entit\u00e9 instanci\u00e9e correspondante</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.api_list","title":"<code>api_list(infos_filter=None, tags_filter=None, page=None, datastore=None)</code>  <code>classmethod</code>","text":"<p>Liste les entit\u00e9s de l'API respectant les param\u00e8tres donn\u00e9s.</p> <p>Parameters:</p> Name Type Description Default <code>infos_filter</code> <code>Optional[Dict[str, str]]</code> <p>Filtres sur les attributs sous la forme <code>{\"nom_attribut\": \"valeur_attribut\"}</code></p> <code>None</code> <code>tags_filter</code> <code>Optional[Dict[str, str]]</code> <p>Filtres sur les tags sous la forme <code>{\"nom_tag\": \"valeur_tag\"}</code></p> <code>None</code> <code>page</code> <code>Optional[int]</code> <p>Num\u00e9ro page \u00e0 r\u00e9cup\u00e9rer, toutes si None.</p> <code>None</code> <code>datastore</code> <code>Optional[str]</code> <p>Identifiant du datastore</p> <code>None</code> <p>Returns:</p> Type Description <code>List[StoreEntity]</code> <p>liste des entit\u00e9s retourn\u00e9es par l'API</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.api_update","title":"<code>api_update()</code>","text":"<p>Met \u00e0 jour l'instance Python repr\u00e9sentant l'entit\u00e9 en r\u00e9cup\u00e9rant les infos \u00e0 jour sur l'API. Seules les informations Python sont modifi\u00e9es, \u00e0 ne pas confondre avec une fonction d'\u00e9dition.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.delete_cascade","title":"<code>delete_cascade(before_delete=None)</code>","text":"<p>Suppression en cascade d'une entit\u00e9 en supprimant les entit\u00e9s li\u00e9es (qui vont d\u00e9pendre du type de l'entit\u00e9, donc cf. les classes filles).</p> <p>Parameters:</p> Name Type Description Default <code>before_delete</code> <code>Optional[Callable[[List[StoreEntity]], List[StoreEntity]]]</code> <p>fonction \u00e0 lancer avant la suppression (entr\u00e9e : liste des entit\u00e9s \u00e0 supprimer, sortie : liste d\u00e9finitive des entit\u00e9s \u00e0 supprimer). Defaults to None.</p> <code>None</code>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.delete_liste_entities","title":"<code>delete_liste_entities(l_entities, before_delete=None)</code>  <code>staticmethod</code>","text":"<p>Suppression d'une liste d\u2019entit\u00e9s. Ex\u00e9cution de <code>before_delete(l_entities)</code> avant la suppression, before_delete retourne la nouvelle liste des \u00e9l\u00e9ments \u00e0 supprimer.</p> <p>Parameters:</p> Name Type Description Default <code>l_entities</code> <code>List[StoreEntity]]</code> <p>liste des entit\u00e9s \u00e0 supprimer</p> required <code>before_delete</code> <code>Optional[Callable[[List[StoreEntity]], List[StoreEntity]]]</code> <p>fonction \u00e0 lancer avant la suppression (entr\u00e9e : liste des entit\u00e9s \u00e0 supprimer, sortie : liste d\u00e9finitive des entit\u00e9s \u00e0 supprimer). Defaults to None.</p> <code>None</code>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.edit","title":"<code>edit(data_edit)</code>","text":"<p>Mise \u00e0 jour de l'entit\u00e9</p> <p>Parameters:</p> Name Type Description Default <code>data_edit</code> <code>Dict[str, Any]</code> <p>nouvelles valeurs de propri\u00e9t\u00e9s</p> required"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.filter_dict_from_str","title":"<code>filter_dict_from_str(filters)</code>  <code>staticmethod</code>","text":"<p>Les filtres bas\u00e9s les tags ou les propri\u00e9t\u00e9s sont \u00e9crits sous la forme <code>name=value,name=value</code>. Cette fonction transforme une liste de cl\u00e9s-valeurs sous cette forme en dictionnaire de la forme <code>{\"name\":\"value\",\"name\":\"value\"}</code>.</p> <p>Parameters:</p> Name Type Description Default <code>filters</code> <code>Optional[str]</code> <p>Liste de filtres ayant la forme <code>name=value,name=value</code></p> required <p>Returns:</p> Type Description <code>Dict[str, str]</code> <p>Dictionnaire ayant la forme <code>{\"name\": \"value\", \"name\": \"value\"}</code></p> <p>Examples:</p> <p>Conversion classique :</p> <pre><code>&gt;&gt;&gt; filter_dict_from_str(\"name=value,name=value\")\n{'name':'value','name':'value'}\n</code></pre> <p>Les espaces ne changent rien :</p> <pre><code>&gt;&gt;&gt; filter_dict_from_str(\"name = value , name= value\")\n{'name':'value','name':'value'}\n</code></pre> <p>La valeur None renvoie un dictionnaire vide :</p> <pre><code>&gt;&gt;&gt; filter_dict_from_str(None)\n{}\n</code></pre> <p>Raises:</p> Type Description <code>StoreEntityError</code> <p>Lev\u00e9e si un filtre ne contient pas le caract\u00e8re <code>=</code>.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.get_liste_deletable_cascade","title":"<code>get_liste_deletable_cascade()</code>","text":"<p>liste les entit\u00e9s \u00e0 supprimer lors d'une suppression en cascade</p> <p>Returns:</p> Type Description <code>List[StoreEntity]</code> <p>List[StoreEntity]: liste des entit\u00e9s qui seront supprim\u00e9</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.get_store_properties","title":"<code>get_store_properties()</code>","text":"<p>Renvoie les propri\u00e9t\u00e9s de l'entit\u00e9' telles que renvoy\u00e9es par l'API.</p> <p>Returns:</p> Type Description <code>Dict[str, Any]</code> <p>Propri\u00e9t\u00e9s de l'entit\u00e9 (sous la m\u00eame forme que celle renvoy\u00e9e par l'API)</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoreEntity.StoreEntity.to_json","title":"<code>to_json(indent=None)</code>","text":"<p>Renvoie les propri\u00e9t\u00e9s de l'entit\u00e9 en JSON \u00e9ventuellement indent\u00e9es.</p> <p>Parameters:</p> Name Type Description Default <code>indent</code> <code>Optional[int]</code> <p>Nombre d'espaces pour chaque indentation.</p> <code>None</code> <p>Returns:</p> Type Description <code>str</code> <p>Propri\u00e9t\u00e9s de l'entit\u00e9 en JSON \u00e9ventuellement indent\u00e9es.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoredData.StoredData","title":"<code>StoredData(store_api_dict, datastore=None)</code>","text":"<p>             Bases: <code>TagInterface</code>, <code>CommentInterface</code>, <code>SharingInterface</code>, <code>EventInterface</code>, <code>PartialEditInterface</code>, <code>StoreEntity</code></p> <p>Classe Python repr\u00e9sentant l'entit\u00e9 StoredData (donn\u00e9e stock\u00e9e).</p> <p>Classe instanci\u00e9e \u00e0 partir de la repr\u00e9sentation envoy\u00e9e par l'API d'une entit\u00e9.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.StoredData.StoredData.get_liste_deletable_cascade","title":"<code>get_liste_deletable_cascade()</code>","text":"<p>liste les entit\u00e9s \u00e0 supprimer lors d'une suppression en cascade des configuration li\u00e9es et des offres li\u00e9es \u00e0 chaque configuration.</p> <p>Returns:</p> Type Description <code>List[StoreEntity]</code> <p>List[StoreEntity]: liste des entit\u00e9s qui seront supprim\u00e9es</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload","title":"<code>Upload(store_api_dict, datastore=None)</code>","text":"<p>             Bases: <code>TagInterface</code>, <code>CommentInterface</code>, <code>SharingInterface</code>, <code>EventInterface</code>, <code>PartialEditInterface</code>, <code>StoreEntity</code></p> <p>Classe Python repr\u00e9sentant l'entit\u00e9 Upload (livraison).</p> <p>Cette classe permet d'effectuer les actions sp\u00e9cifiques li\u00e9es aux livraisons : d\u00e9claration, t\u00e9l\u00e9versement, fermeture, gestion des v\u00e9rifications, etc.</p> <p>Classe instanci\u00e9e \u00e0 partir de la repr\u00e9sentation envoy\u00e9e par l'API d'une entit\u00e9.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.api_close","title":"<code>api_close()</code>","text":"<p>Ferme la livraison.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.api_delete_data_file","title":"<code>api_delete_data_file(api_path)</code>","text":"<p>Supprime un fichier de donn\u00e9e de la Livraison.</p> <p>Retire <code>data/</code> de devant le chemin distant si jamais il le contient.</p> <p>Parameters:</p> Name Type Description Default <code>api_path</code> <code>str</code> <p>chemin distant vers le fichier \u00e0 supprimer</p> required"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.api_delete_md5_file","title":"<code>api_delete_md5_file(api_path)</code>","text":"<p>Supprime un fichier de clefs de la Livraison.</p> <p>Parameters:</p> Name Type Description Default <code>api_path</code> <code>str</code> <p>chemin distant vers le fichier \u00e0 supprimer</p> required"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.api_list_checks","title":"<code>api_list_checks()</code>","text":"<p>Liste les V\u00e9rifications (Check) lanc\u00e9es sur cette livraison.</p> <p>Returns:</p> Type Description <code>Dict[str, List[Dict[str, Any]]]</code> <p>Liste des V\u00e9rifications demand\u00e9es (clef <code>asked</code>), en cours (<code>in_progress</code>), pass\u00e9es (<code>passed</code>) et en \u00e9chec (<code>failed</code>)</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.api_open","title":"<code>api_open()</code>","text":"<p>Ouvre la Livraison.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.api_push_data_file","title":"<code>api_push_data_file(file_path, api_path)</code>","text":"<p>T\u00e9l\u00e9verse via l'API un fichier de donn\u00e9e associ\u00e9 \u00e0 cette Livraison.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>Path</code> <p>chemin local vers le fichier \u00e0 envoyer</p> required <code>api_path</code> <code>str</code> <p>chemin distant du dossier o\u00f9 d\u00e9poser le fichier</p> required"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.api_push_md5_file","title":"<code>api_push_md5_file(file_path)</code>","text":"<p>T\u00e9l\u00e9verse via l'API un fichier de clefs associ\u00e9 \u00e0 cette Livraison.</p> <p>Parameters:</p> Name Type Description Default <code>file_path</code> <code>Path</code> <p>chemin local vers le fichier \u00e0 envoyer</p> required"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.api_run_checks","title":"<code>api_run_checks(check_ids)</code>","text":"<p>Lance des V\u00e9rifications (Check) suppl\u00e9mentaires sur cette Livraison.</p> <p>Parameters:</p> Name Type Description Default <code>check_ids</code> <code>List[str]</code> <p>Liste des identifiants des V\u00e9rifications \u00e0 lancer</p> required"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.api_tree","title":"<code>api_tree()</code>","text":"<p>R\u00e9cup\u00e8re l'arborescence des fichiers t\u00e9l\u00e9vers\u00e9s associ\u00e9s \u00e0 cette Livraison.</p> <p>Returns:</p> Type Description <code>List[Dict[str, Any]]</code> <p>Arborescence telle que renvoy\u00e9e par l'API</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.Upload.Upload.is_open","title":"<code>is_open()</code>","text":"<p>Teste si la livraison est ouverte \u00e0 partir des propri\u00e9t\u00e9s stock\u00e9es en local.</p> <p>Returns:</p> Type Description <code>bool</code> <p><code>True</code> si la Livraison est ouverte</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.Check.Check","title":"<code>Check(store_api_dict, datastore=None)</code>","text":"<p>             Bases: <code>StoreEntity</code></p> <p>Classe Python repr\u00e9sentant l'entit\u00e9 Check (v\u00e9rification).</p> <p>Classe instanci\u00e9e \u00e0 partir de la repr\u00e9sentation envoy\u00e9e par l'API d'une entit\u00e9.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.CheckExecution.CheckExecution","title":"<code>CheckExecution(store_api_dict, datastore=None)</code>","text":"<p>             Bases: <code>CsfInterface</code>, <code>StoreEntity</code></p> <p>Classe Python repr\u00e9sentant l'entit\u00e9 CheckExecution (ex\u00e9cution d'une v\u00e9rification).</p> <p>Classe instanci\u00e9e \u00e0 partir de la repr\u00e9sentation envoy\u00e9e par l'API d'une entit\u00e9.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.CheckExecution.CheckExecution.api_logs","title":"<code>api_logs()</code>","text":"<p>R\u00e9cup\u00e8re les logs de cette ex\u00e9cution de v\u00e9rification sur l'API.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>les logs r\u00e9cup\u00e9r\u00e9s</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.Processing.Processing","title":"<code>Processing(store_api_dict, datastore=None)</code>","text":"<p>             Bases: <code>StoreEntity</code></p> <p>Classe Python repr\u00e9sentant l'entit\u00e9 Processing (traitement).</p> <p>Classe instanci\u00e9e \u00e0 partir de la repr\u00e9sentation envoy\u00e9e par l'API d'une entit\u00e9.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.ProcessingExecution.ProcessingExecution","title":"<code>ProcessingExecution(store_api_dict, datastore=None)</code>","text":"<p>             Bases: <code>CsfInterface</code>, <code>StoreEntity</code></p> <p>Classe Python repr\u00e9sentant l'entit\u00e9 ProcessingExecution (ex\u00e9cution d'un traitement).</p> <p>Cette classe permet d'effectuer les actions sp\u00e9cifiques li\u00e9es aux ex\u00e9cution de traitement : cr\u00e9ation, lancement, gestion de l'ex\u00e9cution, r\u00e9cup\u00e9ration du log, etc.</p> <p>Classe instanci\u00e9e \u00e0 partir de la repr\u00e9sentation envoy\u00e9e par l'API d'une entit\u00e9.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.ProcessingExecution.ProcessingExecution.launch","title":"<code>launch: Optional[datetime]</code>  <code>property</code>","text":"<p>R\u00e9cup\u00e8re la datetime de lancement de l'ex\u00e9cution du traitement.</p> <p>Returns:</p> Name Type Description <code>datetime</code> <code>Optional[datetime]</code> <p>datetime de lancement de l'ex\u00e9cution du traitement</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.ProcessingExecution.ProcessingExecution.api_abort","title":"<code>api_abort()</code>","text":"<p>Annule l'ex\u00e9cution du traitement sur l'API.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.ProcessingExecution.ProcessingExecution.api_launch","title":"<code>api_launch()</code>","text":"<p>Lance l'ex\u00e9cution du traitement sur l'API.</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.ProcessingExecution.ProcessingExecution.api_logs","title":"<code>api_logs()</code>","text":"<p>R\u00e9cup\u00e8re les logs de cette ex\u00e9cution de traitement sur l'API.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>les logs r\u00e9cup\u00e9r\u00e9s</p>"},{"location":"reference/store/#sdk_entrepot_gpf.store.Errors.StoreEntityError","title":"<code>StoreEntityError(message)</code>","text":"<p>             Bases: <code>GpfSdkError</code></p> <p>Erreur lev\u00e9e quand un probl\u00e8me appara\u00eet durant une op\u00e9ration sur une StoreEntity.</p> <p>Constructor</p> <p>Parameters:</p> Name Type Description Default <code>message</code> <code>str) </code> <p>message d\u00e9crivant le probl\u00e8me</p> required"},{"location":"reference/workflow/","title":"sdk_entrepot_gpf.workflow","text":""},{"location":"reference/workflow/#sdk_entrepot_gpf.workflow.Workflow.Workflow","title":"<code>Workflow(name, raw_dict)</code>","text":"<p>Cette classe permet de d\u00e9crire et de lancer un workflow.</p> <p>Un workflow est une suite de cr\u00e9ation d'entit\u00e9s (ex\u00e9cution de traitement, configuration et offre) permettant de traiter puis de publier des donn\u00e9es via la G\u00e9oplateforme.</p> <p>Chaque cr\u00e9ation d'entit\u00e9 est repr\u00e9sent\u00e9e par la classe Action.</p> <p>Attributes:</p> Name Type Description <code>__name</code> <code>str</code> <p>Nom du workflow</p> <code>__raw_definition_dict</code> <code>dict</code> <p>D\u00e9finition du workflow</p> <p>La classe est instanci\u00e9e \u00e0 partir d'un nom et d'une repr\u00e9sentation du workflow.</p> <p>La repr\u00e9sentation du workflow peut provenir par exemple d'un fichier JSON.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str) </code> <p>Nom du workflow</p> required <code>raw_dict</code> <code>dict</code> <p>Workflow non r\u00e9solu</p> required"},{"location":"reference/workflow/#sdk_entrepot_gpf.workflow.Workflow.Workflow.generate","title":"<code>generate(workflow_context, definition_dict, parent_action=None, behavior=None)</code>  <code>staticmethod</code>","text":"<p>G\u00e9n\u00e9ration de la bonne action selon le type indiqu\u00e9 dans la repr\u00e9sentation du workflow.</p> <p>Parameters:</p> Name Type Description Default <code>workflow_context</code> <code>str</code> <p>nom du context du workflow</p> required <code>definition_dict</code> <code>Dict[str, Any]</code> <p>dictionnaire d\u00e9finissant l'action</p> required <code>parent_action</code> <code>Optional[ActionAbstract]</code> <p>action pr\u00e9c\u00e9dente (si \u00e9tape \u00e0 plusieurs action). Defaults to None.</p> <code>None</code> <code>behavior</code> <code>Optional[str]</code> <p>comportement \u00e0 adopter si l'entit\u00e9 cr\u00e9\u00e9e par l'action existe d\u00e9j\u00e0 sur l'entrep\u00f4t. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>ActionAbstract</code> <p>instance permettant de lancer l'action</p>"},{"location":"reference/workflow/#sdk_entrepot_gpf.workflow.Workflow.Workflow.get_action","title":"<code>get_action(step_name, number)</code>","text":"<p>Instancie l'action de l'\u00e9tape demand\u00e9e.</p> <p>Parameters:</p> Name Type Description Default <code>step_name</code> <code>str</code> <p>nom de l'\u00e9tape</p> required <code>number</code> <code>int</code> <p>num\u00e9ro de l'action (0 pour la premi\u00e8re)</p> required <p>Returns:</p> Type Description <code>ActionAbstract</code> <p>action demand\u00e9e</p>"},{"location":"reference/workflow/#sdk_entrepot_gpf.workflow.Workflow.Workflow.get_actions","title":"<code>get_actions(step_name)</code>","text":"<p>Instancie les actions de l'\u00e9tape demand\u00e9e et en renvoie la liste.</p> <p>Parameters:</p> Name Type Description Default <code>step_name</code> <code>str</code> <p>nom de l'\u00e9tape</p> required <p>Returns:</p> Type Description <code>List[ActionAbstract]</code> <p>liste des actions de l'\u00e9tape</p>"},{"location":"reference/workflow/#sdk_entrepot_gpf.workflow.Workflow.Workflow.get_all_steps","title":"<code>get_all_steps()</code>","text":"<p>Retourne la liste des diff\u00e9rentes \u00e9tapes et de leurs parents.</p> <p>Returns:</p> Type Description <code>List[str]</code> <p>liste des \u00e9tapes (et des parents)</p>"},{"location":"reference/workflow/#sdk_entrepot_gpf.workflow.Workflow.Workflow.get_raw_dict","title":"<code>get_raw_dict()</code>","text":"<p>Renvoie le dictionnaire de d\u00e9finition du workflow.</p> <p>Returns:</p> Type Description <code>Dict[str, Any]</code> <p>le dictionnaire de d\u00e9finition du workflow</p>"},{"location":"reference/workflow/#sdk_entrepot_gpf.workflow.Workflow.Workflow.open_workflow","title":"<code>open_workflow(workflow_path, workflow_name=None)</code>  <code>staticmethod</code>","text":"<p>Instancie un Workflow en v\u00e9rifiant le sch\u00e9ma fourni.</p> <p>Parameters:</p> Name Type Description Default <code>workflow_path</code> <code>Path</code> <p>chemin vers le fichier de workflow.</p> required <code>workflow_name</code> <code>Optional[str]</code> <p>nom du workflow, si None, le nom du fichier est utilis\u00e9.. Defaults to None.</p> <code>None</code> <p>Returns:</p> Type Description <code>Workflow</code> <p>workflow instanci\u00e9</p>"},{"location":"reference/workflow/#sdk_entrepot_gpf.workflow.Workflow.Workflow.run_step","title":"<code>run_step(step_name, callback=None, ctrl_c_action=None, behavior=None, datastore=None, comments=[], tags={})</code>","text":"<p>Lance une \u00e9tape du workflow \u00e0 partir de son nom. Liste les entit\u00e9s cr\u00e9\u00e9es par chaque action et retourne la liste.</p> <p>Parameters:</p> Name Type Description Default <code>step_name</code> <code>str</code> <p>nom de l'\u00e9tape</p> required <code>callback</code> <code>Optional[Callable[[ProcessingExecution], None]]</code> <p>callback de suivi si cr\u00e9ation d'une ex\u00e9cution de traitement.</p> <code>None</code> <code>ctrl_c_action</code> <code>Optional[Callable[[], bool]]</code> <p>gestion du ctrl-C lors d'une ex\u00e9cution de traitement.</p> <code>None</code> <code>behavior</code> <code>Optional[str]</code> <p>comportement \u00e0 adopter si une entit\u00e9 existe d\u00e9j\u00e0 sur l'entrep\u00f4t.</p> <code>None</code> <code>datastore</code> <code>Optional[str]</code> <p>id du datastore \u00e0 utiliser. Si None, le datastore sera le premier trouv\u00e9 dans l'action puis dans workflow puis dans configuration.</p> <code>None</code> <code>comments</code> <code>Optional[List[str]]</code> <p>liste des commentaire \u00e0 rajout\u00e9 \u00e0 toute les actions de l'\u00e9tape (les cas de doublons sont g\u00e9r\u00e9).</p> <code>[]</code> <code>tags</code> <code>Optional[Dict[str, str]]</code> <p>dictionnaire des tag \u00e0 rajout\u00e9 pour toutes les action de l'\u00e9tape. \u00c9cras\u00e9 par ceux du workflow, de l'\u00e9tape et de l'action si les clef sont les m\u00eame.</p> <code>{}</code> <p>Raises:</p> Type Description <code>WorkflowError</code> <p>lev\u00e9e si un probl\u00e8me appara\u00eet pendant l'ex\u00e9cution du workflow</p> <p>Returns:</p> Type Description <code>List[StoreEntity]</code> <p>List[StoreEntity]: liste des entit\u00e9s cr\u00e9\u00e9es</p>"},{"location":"reference/workflow/#sdk_entrepot_gpf.workflow.Workflow.Workflow.validate","title":"<code>validate()</code>","text":"<p>Valide le workflow en s'assurant qu'il est coh\u00e9rent. Retourne la liste des erreurs trouv\u00e9es.</p> <p>Returns:</p> Type Description <code>List[str]</code> <p>liste des erreurs trouv\u00e9es</p>"},{"location":"reference/workflow/action/","title":"sdk_entrepot_gpf.workflow.action","text":""},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ActionAbstract.ActionAbstract","title":"<code>ActionAbstract(workflow_context, definition_dict, parent_action=None)</code>","text":"<p>             Bases: <code>ABC</code></p> <p>Classe abstraite repr\u00e9sentant une action d'un workflow.</p> <p>Lancer une action revient \u00e0 cr\u00e9er une entit\u00e9 dans l'API. Par exemple :</p> <ul> <li>faire un traitement revient \u00e0 cr\u00e9er une Ex\u00e9cution de Traitement ;</li> <li>configurer un g\u00e9oservice revient \u00e0 cr\u00e9er une Configuration ;</li> <li>publier un g\u00e9oservice revient \u00e0 cr\u00e9er une Offre.</li> </ul> <p>Attributes:</p> Name Type Description <code>__workflow_context</code> <code>str</code> <p>nom du context du workflow</p> <code>__definition_dict</code> <code>Dict[str, Any]</code> <p>d\u00e9finition de l'action</p> <code>__parent_action</code> <code>Optional[Action]</code> <p>action parente</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ActionAbstract.ActionAbstract.index","title":"<code>index: int</code>  <code>property</code>","text":"<p>Renvoie l'index de l'action dans la liste des actions de cette \u00e9tape. La premi\u00e8re action a le num\u00e9ro 0.</p> <p>Returns:</p> Type Description <code>int</code> <p>index de l'action dans la liste des actions de cette \u00e9tape</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ActionAbstract.ActionAbstract.get_filters","title":"<code>get_filters(config_key, infos, tags)</code>  <code>staticmethod</code>","text":"<p>G\u00e9n\u00e8re les crit\u00e8res de filtres (pour voir si cette action n'a pas d\u00e9j\u00e0 \u00e9t\u00e9 lanc\u00e9e) d'apr\u00e8s les crit\u00e8res d'unicit\u00e9 et les param\u00e8tres de cr\u00e9ation d'entit\u00e9.</p> <p>Parameters:</p> Name Type Description Default <code>config_key</code> <code>str</code> <p>cl\u00e9 permettant de r\u00e9cup\u00e9rer les crit\u00e8re d'unicit\u00e9 en config</p> required <code>infos</code> <code>Dict[str, Any]</code> <p>param\u00e8tres d'attributs pour la cr\u00e9ation de l'entit\u00e9</p> required <code>tags</code> <code>Dict[str, Any]</code> <p>param\u00e8tres de tags pour la cr\u00e9ation de l'entit\u00e9</p> required <p>Returns:</p> Type Description <code>Tuple[Dict[str, str], Dict[str, str]]</code> <p>crit\u00e8re de filtres sur les infos et les tags</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ActionAbstract.ActionAbstract.resolve","title":"<code>resolve(**kwargs)</code>","text":"<p>R\u00e9sout la d\u00e9finition de l'action.</p> <p>L'action peut faire r\u00e9f\u00e9rence \u00e0 des entit\u00e9s via des filtres, on veut donc r\u00e9soudre ces \u00e9l\u00e9ments afin de soumettre une requ\u00eate valide \u00e0 l'API.</p> <p>Parameters:</p> Name Type Description Default <code>kwargs</code> <code>Any</code> <p>param\u00e8tres suppl\u00e9mentaires.</p> <code>{}</code> <p>Raises:</p> Type Description <code>StepActionError</code> <p>description</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ActionAbstract.ActionAbstract.run","title":"<code>run(datastore=None)</code>  <code>abstractmethod</code>","text":"<p>Lancement de l'action.</p> <p>Parameters:</p> Name Type Description Default <code>datastore</code> <code>Optional[str]</code> <p>id du datastore \u00e0 utiliser. Si None, le datastore sera r\u00e9cup\u00e9rer dans configuration. Defaults to None.</p> <code>None</code>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ConfigurationAction.ConfigurationAction","title":"<code>ConfigurationAction(workflow_context, definition_dict, parent_action=None, behavior=None)</code>","text":"<p>             Bases: <code>ActionAbstract</code></p> <p>Classe d\u00e9di\u00e9e \u00e0 la cr\u00e9ation des Configuration.</p> <p>Attributes:</p> Name Type Description <code>__workflow_context</code> <code>str</code> <p>nom du context du workflow</p> <code>__definition_dict</code> <code>Dict[str, Any]</code> <p>d\u00e9finition de l'action</p> <code>__parent_action</code> <code>Optional[Action]</code> <p>action parente</p> <code>__configuration</code> <code>Optional[Configuration]</code> <p>repr\u00e9sentation Python de la configuration cr\u00e9\u00e9e</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ConfigurationAction.ConfigurationAction.find_configuration","title":"<code>find_configuration(datastore)</code>","text":"<p>Fonction permettant de r\u00e9cup\u00e9rer une Configuration ressemblant \u00e0 celle qui devrait \u00eatre cr\u00e9\u00e9e en fonction des filtres d\u00e9finis dans la Config.</p> <p>Parameters:</p> Name Type Description Default <code>datastore</code> <code>Optional[str]</code> <p>id du datastore \u00e0 utiliser.</p> required <p>Returns:     configuration retrouv\u00e9e</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.OfferingAction.OfferingAction","title":"<code>OfferingAction(workflow_context, definition_dict, parent_action=None, behavior=None)</code>","text":"<p>             Bases: <code>ActionAbstract</code></p> <p>Classe d\u00e9di\u00e9e \u00e0 la cr\u00e9ation des Offering.</p> <p>Attributes:</p> Name Type Description <code>__workflow_context</code> <code>str</code> <p>nom du contexte du workflow</p> <code>__definition_dict</code> <code>Dict[str, Any]</code> <p>d\u00e9finition de l'action</p> <code>__parent_action</code> <code>Optional[Action]</code> <p>action parente</p> <code>__offering</code> <code>Optional[Offering]</code> <p>repr\u00e9sentation Python de la Offering cr\u00e9\u00e9e</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.OfferingAction.OfferingAction.find_configuration","title":"<code>find_configuration(datastore=None)</code>","text":"<p>Fonction permettant de r\u00e9cup\u00e9rer la Configuration associ\u00e9e \u00e0 l'Offering qui doit \u00eatre cr\u00e9e par cette Action.</p> <p>C'est \u00e0 dire la Configuration indiqu\u00e9e dans <code>url_parameters</code> du <code>definition_dict</code> de cette Action.</p> <p>Parameters:</p> Name Type Description Default <code>datastore</code> <code>Optional[str]</code> <p>id du datastore \u00e0 utiliser.</p> <code>None</code> <p>Returns:     Configuration</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.OfferingAction.OfferingAction.find_offering","title":"<code>find_offering(datastore=None)</code>","text":"<p>Fonction permettant de r\u00e9cup\u00e9rer l'Offering qui devrait \u00eatre cr\u00e9\u00e9e (si elle existe d\u00e9j\u00e0).</p> <p>C'est \u00e0 dire une offering associ\u00e9e \u00e0 la Configuration indiqu\u00e9e dans <code>url_parameters</code> et au endpoint indiqu\u00e9 dans <code>body_parameters</code>.</p> <p>Parameters:</p> Name Type Description Default <code>datastore</code> <code>Optional[str]</code> <p>id du datastore \u00e0 utiliser.</p> <code>None</code> <p>Returns:     Offre retrouv\u00e9e</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ProcessingExecutionAction.ProcessingExecutionAction","title":"<code>ProcessingExecutionAction(workflow_context, definition_dict, parent_action=None, behavior=None)</code>","text":"<p>             Bases: <code>ActionAbstract</code></p> <p>Classe d\u00e9di\u00e9e \u00e0 la cr\u00e9ation des ProcessingExecution.</p> <p>Attributes:</p> Name Type Description <code>__workflow_context</code> <code>str</code> <p>nom du context du workflow</p> <code>__definition_dict</code> <code>Dict[str, Any]</code> <p>d\u00e9finition de l'action</p> <code>__parent_action</code> <code>Optional[Action]</code> <p>action parente</p> <code>__processing_execution</code> <code>Optional[ProcessingExecution]</code> <p>repr\u00e9sentation Python de l'ex\u00e9cution de traitement cr\u00e9\u00e9e</p> <code>__Upload</code> <code>Optional[Upload]</code> <p>repr\u00e9sentation Python de la livraison en sortie (null si donn\u00e9e stock\u00e9e en sortie)</p> <code>__StoredData</code> <code>Optional[StoredData]</code> <p>repr\u00e9sentation Python de la donn\u00e9e stock\u00e9e en sortie (null si livraison en sortie)</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ProcessingExecutionAction.ProcessingExecutionAction.output_new_entity","title":"<code>output_new_entity: bool</code>  <code>property</code>","text":"<p>Indique s'il y aura cr\u00e9ation d'une nouvelle entit\u00e9 par rapport au param\u00e8tre de cr\u00e9ation de l'ex\u00e9cution de traitement (la cl\u00e9 \"name\" et non la cl\u00e9 \"_id\" est pr\u00e9sente dans le param\u00e8tre \"output\" du corps de requ\u00eate).</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ProcessingExecutionAction.ProcessingExecutionAction.find_stored_data","title":"<code>find_stored_data(datastore=None)</code>","text":"<p>Fonction permettant de r\u00e9cup\u00e9rer une Stored Data ressemblant \u00e0 celle qui devrait \u00eatre cr\u00e9\u00e9e par l'ex\u00e9cution de traitement en fonction des filtres d\u00e9finis dans la Config.</p> <p>Returns:</p> Type Description <code>Optional[StoredData]</code> <p>donn\u00e9e stock\u00e9e retrouv\u00e9e</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.ProcessingExecutionAction.ProcessingExecutionAction.monitoring_until_end","title":"<code>monitoring_until_end(callback=None, ctrl_c_action=None)</code>","text":"<p>Attend que la ProcessingExecution soit termin\u00e9e (statut <code>SUCCESS</code>, <code>FAILURE</code> ou <code>ABORTED</code>) avant de rendre la main.</p> <p>La fonction callback indiqu\u00e9e est ex\u00e9cut\u00e9e apr\u00e8s chaque v\u00e9rification du statut en lui passant en param\u00e8tre la processing execution (callback(self.processing_execution)).</p> <p>Si l'utilisateur stoppe le programme (par ctrl-C), le devenir de la ProcessingExecutionAction sera g\u00e9r\u00e9 par la callback ctrl_c_action().</p> <p>Parameters:</p> Name Type Description Default <code>callback</code> <code>Optional[Callable[[ProcessingExecution], None]]</code> <p>fonction de callback \u00e0 ex\u00e9cuter. Prend en argument le traitement (callback(processing-execution)).</p> <code>None</code> <code>ctrl_c_action</code> <code>Optional[Callable[[], bool]]</code> <p>fonction de gestion du ctrl-C. Renvoie True si on doit stopper le traitement.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>statut final de l'ex\u00e9cution du traitement</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.UploadAction.UploadAction","title":"<code>UploadAction(dataset, behavior=None)</code>","text":"<p>Classe permettant d'accompagner la cr\u00e9ation d'une livraison.</p> <p>Attributes:</p> Name Type Description <code>__dataset</code> <code>Dataset</code> <p>dataset contenant les info de la livraison \u00e0 cr\u00e9er</p> <code>__upload</code> <code>Optional[Upload]</code> <p>livraison repr\u00e9sentant l'entit\u00e9 cr\u00e9\u00e9e sur l'entrep\u00f4t</p> <code>__behavior</code> <code>str</code> <p>comportement \u00e0 adopter si la livraison existe d\u00e9j\u00e0 sur l'entrep\u00f4t</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.UploadAction.UploadAction.find_upload","title":"<code>find_upload(datastore)</code>","text":"<p>Fonction permettant de lister un \u00e9ventuel upload d\u00e9j\u00e0 existant \u00e0 partir des crit\u00e8res d'unicit\u00e9 donn\u00e9s.</p> <p>Parameters:</p> Name Type Description Default <code>datastore</code> <code>Optional[str]</code> <p>id du datastore \u00e0 utiliser.</p> required <p>Returns:</p> Type Description <code>Optional[Upload]</code> <p>None si rien trouv\u00e9, sinon l'Upload trouv\u00e9</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.UploadAction.UploadAction.monitor_until_end","title":"<code>monitor_until_end(upload, callback=None, ctrl_c_action=None)</code>  <code>staticmethod</code>","text":"<p>Attend que toute les v\u00e9rifications li\u00e9es \u00e0 la Livraison indiqu\u00e9e soient termin\u00e9es (en erreur ou en succ\u00e8s) avant de rendre la main.</p> <p>La fonction callback indiqu\u00e9e est ex\u00e9cut\u00e9e \u00e0 chaque v\u00e9rification en lui passant en param\u00e8tre un message de suivi du nombre de v\u00e9rifications par statut.</p> <p>Parameters:</p> Name Type Description Default <code>upload</code> <code>Upload</code> <p>Livraison \u00e0 monitorer</p> required <code>callback</code> <code>Optional[Callable[[str], None]]</code> <p>fonction de callback \u00e0 ex\u00e9cuter avec le message de suivi.</p> <code>None</code> <code>ctrl_c_action</code> <code>Optional[Callable[[], bool]]</code> <p>gestion du ctrl-C. Si None ou si la fonction renvoie True, il faut arr\u00eater les v\u00e9rifications.</p> <code>None</code> <p>Returns:</p> Type Description <code>bool</code> <p>True si toutes les v\u00e9rifications sont ok, sinon False</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.UploadAction.UploadAction.parse_tree","title":"<code>parse_tree(tree, prefix='')</code>  <code>staticmethod</code>","text":"<p>Parse l'arborescence renvoy\u00e9e par l'API en un dictionnaire associant le chemin de chaque fichier \u00e0 sa taille. L'objectif est de permettre de facilement identifier quels sont les fichiers \u00e0 (re)livrer.</p> <p>Parameters:</p> Name Type Description Default <code>tree</code> <code>List[Dict[str, Any]]</code> <p>arborescence \u00e0 parser</p> required <code>prefix</code> <code>str</code> <p>pr\u00e9-fixe du chemin</p> <code>''</code> <p>Returns:</p> Type Description <code>Dict[str, int]</code> <p>liste des fichiers envoy\u00e9s et leur taille</p>"},{"location":"reference/workflow/action/#sdk_entrepot_gpf.workflow.action.UploadAction.UploadAction.run","title":"<code>run(datastore)</code>","text":"<p>Cr\u00e9e la livraison d\u00e9crite dans le dataset et livre les donn\u00e9es avant de retourner la livraison cr\u00e9\u00e9e.</p> <p>Parameters:</p> Name Type Description Default <code>datastore</code> <code>Optional[str]</code> <p>id du datastore \u00e0 utiliser. Si None, le datastore sera r\u00e9cup\u00e9r\u00e9 dans la configuration.</p> required <p>Raises:</p> Type Description <code>GpfSdkError</code> <p>lev\u00e9e si cr\u00e9ation non effectu\u00e9e</p> <p>Returns:</p> Type Description <code>Upload</code> <p>livraison cr\u00e9\u00e9e</p>"},{"location":"reference/workflow/resolver/","title":"sdk_entrepot_gpf.workflow.resolver","text":""},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.AbstractResolver.AbstractResolver","title":"<code>AbstractResolver(name)</code>","text":"<p>             Bases: <code>ABC</code></p> <p>Classe abstraite permettant de r\u00e9soudre le param\u00e9trage des fichiers d'action.</p> <p>Vous pouvez cr\u00e9er vos propres classe de r\u00e9solution en les h\u00e9ritant de celle-ci et en les ajoutant au GlobalResolver.</p> <p>Attributes:</p> Name Type Description <code>__name</code> <code>str</code> <p>nom de code du resolver</p>"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.AbstractResolver.AbstractResolver.resolve","title":"<code>resolve(string_to_solve, **kwargs)</code>  <code>abstractmethod</code>","text":"<p>R\u00e9sout la cha\u00eene \u00e0 traiter et retourne la cha\u00eene obtenue.</p> <p>Parameters:</p> Name Type Description Default <code>string_to_solve</code> <code>str</code> <p>cha\u00eene \u00e0 r\u00e9soudre</p> required <code>kwargs</code> <code>Any</code> <p>param\u00e8tres suppl\u00e9mentaires.</p> <code>{}</code> <p>Returns:</p> Type Description <code>str</code> <p>cha\u00eene r\u00e9solue</p>"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.DictResolver.DictResolver","title":"<code>DictResolver(name, key_value)</code>","text":"<p>             Bases: <code>AbstractResolver</code></p> <p>Classe permettant de r\u00e9soudre des param\u00e8tres cl\u00e9 -&gt; valeur.</p> <p>Attributes:</p> Name Type Description <code>__name</code> <code>str</code> <p>nom de code du resolver</p> <code>__key_value</code> <code>Dict[str, Any]</code> <p>liste des param\u00e8tres \u00e0 r\u00e9soudre</p> <p>Classe instanci\u00e9e gr\u00e2ce au nom du r\u00e9solveur et \u00e0 la liste des correspondances \u00e0 r\u00e9soudre.</p> <p>La cl\u00e9 est la cha\u00eene \u00e0 remplacer et la valeur la cha\u00eene de remplacement.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>nom du r\u00e9solveur</p> required <code>key_value</code> <code>Dict[str, Any]</code> <p>liste de cl\u00e9/valeur \u00e0 utiliser</p> required"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.DictResolver.DictResolver.resolve","title":"<code>resolve(string_to_solve, **kwargs)</code>","text":"<p>La cha\u00eene \u00e0 r\u00e9soudre doit correspondre \u00e0 une clef du dictionnaire.</p> <p>Parameters:</p> Name Type Description Default <code>string_to_solve</code> <code>str</code> <p>cha\u00eene \u00e0 r\u00e9soudre.</p> required <code>kwargs</code> <code>Any</code> <p>param\u00e8tres suppl\u00e9mentaires.</p> <code>{}</code> <p>Returns:</p> <p>Raises:</p> Type Description <code>ResolverError</code> <p>lev\u00e9e si aucune clef ne correspond \u00e0 la cha\u00eene</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>cha\u00eene r\u00e9solue</p>"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.FileResolver.FileResolver","title":"<code>FileResolver(name, root_path)</code>","text":"<p>             Bases: <code>AbstractResolver</code></p> <p>Classe permettant de r\u00e9soudre des param\u00e8tres faisant r\u00e9f\u00e9rence \u00e0 des fichiers : ce r\u00e9solveur permet d'ins\u00e9rer le contenu d'un fichier au moment de la r\u00e9solution.</p> <p>Ce fichier peut \u00eatre un fichier texte basique, une liste au format JSON ou un dictionnaire au format JSON.</p> <p>Fichier texte : (dans cet exemple, <code>file</code> est le nom du r\u00e9solveur)</p> <p>Contenu du fichier <code>exemple.txt</code> :</p> <pre><code>coucou\n</code></pre> <p>Cha\u00eene \u00e0 remplacer : <code>Je veux dire : {file.str(exemple.txt)}</code></p> <p>R\u00e9sultat : <code>Je veux dire : coucou</code></p> <p>Fichier de liste : (dans cet exemple, <code>file</code> est le nom du r\u00e9solveur)</p> <p>Contenu du fichier <code>list.json</code> :</p> <pre><code>[\"valeur 1\", \"valeur 2\"]\n</code></pre> <p>Cha\u00eene \u00e0 remplacer : <code>{\"values\": [\"file\",\"list(list.json)\"]}</code></p> <p>R\u00e9sultat : <code>{\"values\": [\"valeur 1\", \"valeur 2\"]}</code></p> <p>Fichier de cl\u00e9-valeur : (dans cet exemple, <code>file</code> est le nom du r\u00e9solveur)</p> <p>Contenu du fichier <code>dict.json</code> :</p> <pre><code>{\"k1\":\"v1\", \"k2\":\"v2\"}\n</code></pre> <p>Cha\u00eene \u00e0 remplacer : <code>{\"parameters\": {\"file\":\"dict(dict.json)\"}}</code></p> <p>R\u00e9sultat : <code>{\"parameters\": {\"k1\":\"v1\", \"k2\":\"v2\"}}</code></p> <p>Attributes:</p> Name Type Description <code>__name</code> <code>str</code> <p>nom de code du resolver</p> <p>\u00c0 l'instanciation, il faut indiquer au r\u00e9solveur le chemin racine d'o\u00f9 chercher les fichiers.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>nom du r\u00e9solveur</p> required <code>root_path</code> <code>Path</code> <p>chemin racine</p> required"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.FileResolver.FileResolver.resolve","title":"<code>resolve(string_to_solve, **kwargs)</code>","text":"<p>Fonction permettant de renvoyer sous forme de string la r\u00e9solution des param\u00e8tres de fichier pass\u00e9s en entr\u00e9e.</p> <p>Parameters:</p> Name Type Description Default <code>string_to_solve</code> <code>str</code> <p>cha\u00eene \u00e0 r\u00e9soudre (type de fichier \u00e0 traiter et chemin)</p> required <code>kwargs</code> <code>Any</code> <p>param\u00e8tres suppl\u00e9mentaires.</p> <code>{}</code> <p>Raises:</p> Type Description <code>ResolverError</code> <p>si la cha\u00eene \u00e0 r\u00e9soudre est incorrecte</p> <code>ResolverError</code> <p>si le type de donn\u00e9e n'est pas str/list/dict</p> <p>Returns:</p> Type Description <code>str</code> <p>le contenu du fichier en entr\u00e9e sous forme de string</p>"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.GlobalResolver.GlobalResolver","title":"<code>GlobalResolver()</code>","text":"<p>Classe permettant de r\u00e9soudre une action en appelant les tous r\u00e9solveurs list\u00e9s.</p> <p>Attributes:</p> Name Type Description <code>__resolvers</code> <code>Dict[str, AbstractResolver]</code> <p>association nom du r\u00e9solveur / r\u00e9solveur.</p> <p>Constructeur.</p>"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.GlobalResolver.GlobalResolver.add_resolver","title":"<code>add_resolver(resolver)</code>","text":"<p>Ajoute un r\u00e9solveur \u00e0 la liste.</p>"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.GlobalResolver.GlobalResolver.resolve","title":"<code>resolve(string_to_solve_global, **kwargs)</code>","text":"<p>R\u00e9sout la cha\u00eene \u00e0 traiter et retourne la cha\u00eene obtenue.</p> <p>R\u00e9sout TOUT le param\u00e9trage trouv\u00e9.</p> <p>Parameters:</p> Name Type Description Default <code>string_to_solve_global</code> <code>str</code> <p>cha\u00eene globale \u00e0 r\u00e9soudre</p> required <code>kwargs</code> <code>Any</code> <p>param\u00e8tres suppl\u00e9mentaires.</p> <code>{}</code> <p>Raises:</p> Type Description <code>ResolverNotFoundError</code> <p>lev\u00e9e si un r\u00e9solveur demand\u00e9 n'est pas trouv\u00e9</p> <p>Returns:</p> Type Description <code>str</code> <p>cha\u00eene r\u00e9solue</p>"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.StoreEntityResolver.StoreEntityResolver","title":"<code>StoreEntityResolver(name)</code>","text":"<p>             Bases: <code>AbstractResolver</code></p> <p>Classe permettant de r\u00e9soudre des param\u00e8tres faisant r\u00e9f\u00e9rence \u00e0 une entit\u00e9.</p> <p>Attributes:</p> Name Type Description <code>__name</code> <code>str</code> <p>nom de code du resolver</p> <code>__regex</code> <code>Pattern[str]</code> <p>regex du resolver</p> <p>\u00c0 l'instanciation, le r\u00e9solveur est nomm\u00e9 selon ce qui est indiqu\u00e9 dans la Config.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>nom du r\u00e9solveur</p> required"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.StoreEntityResolver.StoreEntityResolver.resolve","title":"<code>resolve(string_to_solve, **kwargs)</code>","text":"<p>R\u00e9solution en listant les entit\u00e9s de l'API.</p> <p>Parameters:</p> Name Type Description Default <code>string_to_solve</code> <code>str</code> <p>cha\u00eene \u00e0 r\u00e9soudre (type de l'entit\u00e9, attribut \u00e0 r\u00e9cup\u00e9rer)</p> required <code>kwargs</code> <code>Any</code> <p>param\u00e8tres suppl\u00e9mentaires (datastore).</p> <code>{}</code> <p>Raises:</p> Type Description <code>ResolverError</code> <p>si la cha\u00eene \u00e0 r\u00e9soudre n'est pas parsable</p> <code>NoEntityFoundError</code> <p>si aucune entit\u00e9 n'est trouv\u00e9e</p> <code>ResolverError</code> <p>si aucune information n'est retourn\u00e9e</p> <p>Returns:</p> Type Description <code>str</code> <p>l'attribut demand\u00e9 de l'entit\u00e9 demand\u00e9e</p>"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.UserResolver.UserResolver","title":"<code>UserResolver(name)</code>","text":"<p>             Bases: <code>AbstractResolver</code></p> <p>Classe permettant de r\u00e9cup\u00e9rer les informations sur l'utilisateur authentifi\u00e9.</p> <p>La plu-value sur la classe DictRevolver est que les info de l'utilisateur sont directement r\u00e9cup\u00e9r\u00e9es par le constructeur de la classe (\u00e7a \u00e9vite de g\u00e9rer cela).</p> Attributes <p>__name (str): nom de code du resolver __username_data (Dict[str, Any]): liste des infos de l'utilisateur authentifi\u00e9</p> <p>A l'instanciation, on r\u00e9cup\u00e8re les infos de l'utilisateur via l'API et on les stocke.</p> <p>Parameters:</p> Name Type Description Default <code>name</code> <code>str</code> <p>nom du r\u00e9solveur</p> required"},{"location":"reference/workflow/resolver/#sdk_entrepot_gpf.workflow.resolver.UserResolver.UserResolver.resolve","title":"<code>resolve(string_to_solve, **kwargs)</code>","text":"<p>R\u00e9cup\u00e9ration de l'utilisateur courant et r\u00e9cup\u00e9ration d'une des ces informations.</p> <p>Parameters:</p> Name Type Description Default <code>string_to_solve</code> <code>str</code> <p>cha\u00eene \u00e0 r\u00e9soudre (attribut du JSON retourn\u00e9)</p> required <code>kwargs</code> <code>Any</code> <p>param\u00e8tres suppl\u00e9mentaires.</p> <code>{}</code> <p>Raises:</p> Type Description <code>ResolveUserError</code> <p>si l'attribut demand\u00e9 n'existe pas</p> <p>Returns:</p> Type Description <code>Any</code> <p>valeur de l'attribut</p>"}]}